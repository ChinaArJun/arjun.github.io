(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{551:function(e,t,a){"use strict";a.r(t);var r=a(44),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"docker介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker介绍"}},[e._v("#")]),e._v(" docker介绍")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#docker%e4%bb%8b%e7%bb%8d"}},[e._v("docker介绍")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#docker%e6%98%af%e4%bb%80%e4%b9%88"}},[e._v("Docker是什么")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#docker%e8%83%bd%e5%b9%b2%e5%98%9b"}},[e._v("Docker能干嘛")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%e4%b9%8b%e5%89%8d%e7%9a%84%e8%99%9a%e6%8b%9f%e6%9c%ba%e6%8a%80%e6%9c%af"}},[e._v("之前的虚拟机技术")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e5%ae%b9%e5%99%a8%e8%99%9a%e6%8b%9f%e5%8c%96%e6%8a%80%e6%9c%af"}},[e._v("容器虚拟化技术")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%e5%8c%ba%e5%88%ab"}},[e._v("区别")])])])])])])]),e._v(" "),a("h2",{attrs:{id:"docker是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker是什么"}},[e._v("#")]),e._v(" Docker是什么")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("Docker是基于Go语言实现的云开源项目")])])]),e._v(" "),a("p",[e._v("对应用程序的封装、分发、部署、运行等生命周期的管理，使用户的APP（或者一个web应用)以及运行环境做到“"),a("strong",[e._v("一次封装，到处运行")]),e._v("“")]),e._v(" "),a("p",[e._v("解决了运行环境和配置问题软件容器，方便做持续继承并有助于整体发布的容器虚拟化技术")]),e._v(" "),a("h2",{attrs:{id:"docker能干嘛"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker能干嘛"}},[e._v("#")]),e._v(" Docker能干嘛")]),e._v(" "),a("h3",{attrs:{id:"之前的虚拟机技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#之前的虚拟机技术"}},[e._v("#")]),e._v(" 之前的虚拟机技术")]),e._v(" "),a("p",[e._v("虚拟机的缺点：")]),e._v(" "),a("ul",[a("li",[e._v("资源占用多")]),e._v(" "),a("li",[e._v("冗余步骤多")]),e._v(" "),a("li",[e._v("启动慢")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Syncma/Figurebed/master/img/vm1.png",alt:"传统虚拟机"}})]),e._v(" "),a("h3",{attrs:{id:"容器虚拟化技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器虚拟化技术"}},[e._v("#")]),e._v(" 容器虚拟化技术")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Syncma/Figurebed/master/img/vm2.png",alt:"enter image description here"}})]),e._v(" "),a("h3",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[e._v("#")]),e._v(" 区别")]),e._v(" "),a("blockquote",[a("p",[e._v("1.传统虚拟化技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程")])]),e._v(" "),a("blockquote",[a("p",[e._v("2.而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟\n因此容器要比传统虚拟机更为轻便")])]),e._v(" "),a("blockquote",[a("p",[e._v("3.每个容器之间互相隔离，每个容器有自己的文件系统，容器之间进程不会相互影响，能区分计算资源")])])])}),[],!1,null,null,null);t.default=s.exports}}]);