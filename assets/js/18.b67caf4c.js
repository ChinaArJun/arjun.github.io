(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{396:function(t,s,a){t.exports=a.p+"assets/img/restful-01.4b1ff6b1.png"},948:function(t,s,a){"use strict";a.r(s);var r=a(44),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"项目启动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目启动"}},[t._v("#")]),t._v(" 项目启动")]),t._v(" "),r("h3",{attrs:{id:"拆分原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#拆分原则"}},[t._v("#")]),t._v(" 拆分原则")]),t._v(" "),r("ol",[r("li",[t._v("单一职责")]),t._v(" "),r("li",[t._v("服务粒度适中")]),t._v(" "),r("li",[t._v("考虑团队结构")]),t._v(" "),r("li",[t._v("以业务模型切入")]),t._v(" "),r("li",[t._v("演进式拆分")]),t._v(" "),r("li",[t._v("避免环形依赖和双向依赖")])]),t._v(" "),r("h3",{attrs:{id:"服务发现的启动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务发现的启动"}},[t._v("#")]),t._v(" 服务发现的启动")]),t._v(" "),r("p",[t._v("项目开始之前前我们先要启动我们单机版的 consul")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("$ consul agent -dev\n")])])]),r("h3",{attrs:{id:"数据库的准备"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库的准备"}},[t._v("#")]),t._v(" 数据库的准备")]),t._v(" "),r("p",[t._v("在 mysql 中创建一个库")]),t._v(" "),r("div",{staticClass:"language-sql extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sql"}},[r("code",[t._v("$ mysql "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输入root密码")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#go1micro是库名")]),t._v("\nMysql"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("database")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exists")]),t._v(" go1micro "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("charset")]),t._v(" utf8 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("collate")]),t._v(" utf8_general_ci"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建1个库")]),t._v("\nMysql"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" go1micro\nMysql"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Tables_in_go1micro"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" area "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" facility "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" facility_houses "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("多对多的关联表 "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" house "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" house_image "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" order_house "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rows")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmysql"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v(" facility_houses"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +-------------+------------+------+-----+---------+----------------+")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" id "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NO")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" facility_id "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NO")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" house_id "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NO")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+------------+------+-----+---------+----------------+ 3 rows in set (0.00 sec)")]),t._v("\n")])])]),r("h2",{attrs:{id:"web端-restful接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web端-restful接口"}},[t._v("#")]),t._v(" web端 RESTful接口")]),t._v(" "),r("h3",{attrs:{id:"创建命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建命令"}},[t._v("#")]),t._v(" 创建命令")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('$ micro new --type "web" sss/IhomeWeb\n')])])]),r("h3",{attrs:{id:"restful"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#restful"}},[t._v("#")]),t._v(" RESTful")]),t._v(" "),r("p",[t._v("RESTful，是目前最为流行的一种互联网软件架构。因为它结构清晰、符合标准、易于理解、扩展方便，所以正得\n到越来越多网站的采用")]),t._v(" "),r("p",[t._v("REST(REpresentational State Transfer)这个概念，首次出现是在 2000 年 Roy Thomas Fielding(他是 HTTP 规范的 主要编写者之一)的博士论文中，它指的是一组架构约束条件和原则。满足这些约束条件和原则的应用程序或设计 就是 RESTful 的。\n要理解什么是 REST，我们需要理解下面几个概念:")]),t._v(" "),r("h4",{attrs:{id:"_1-、资源-resources"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-、资源-resources"}},[t._v("#")]),t._v(" 1 、资源(Resources)")]),t._v(" "),r("p",[t._v('REST 是"表现层状态转化"，其实它省略了主语。"表现层"其实指的是"资源"的"表现层"。 那么什么是资源呢?就是 我们平常上网访问的一张图片、一个文档、一个视频等。这些资源我们通过 URI 来定位，也就是一个 URI 表示一个资 源。')]),t._v(" "),r("h4",{attrs:{id:"_2、表现层-representation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、表现层-representation"}},[t._v("#")]),t._v(" 2、表现层(Representation)")]),t._v(" "),r("p",[t._v('资源是做一个具体的实体信息，他可以有多种的展现方式。而把实体展现出来就是 表现层，例如一个 txt 文本信息，他可以输出成 html、json、xml 等格式，一个图片他可以 jpg、png 等方式展现，这 个就是表现层的意思。 URI 确定一个资源，但是如何确定它的具体表现形式呢?应该在 HTTP 请求的头信息中用 Accept 和 Content-Type 字段指定，这两个字段才是对"表现层"的描述。')]),t._v(" "),r("h4",{attrs:{id:"_3、-状态转化-state-transfer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、-状态转化-state-transfer"}},[t._v("#")]),t._v(" 3、 状态转化(State Transfer)")]),t._v(" "),r("p",[t._v("访问一个网站，就代表了客户端(浏览器)和服务器的一个互动过程。在这个过 程中，肯定涉及到数据和状态的变化。而 HTTP 协议是无状态的，那么这些状态肯定保存在服务器端，所以如果客 户端想要通知服务器端改变数据和状态的变化，肯定要通过某种方式来通知它。")]),t._v(" "),r("p",[t._v("客户端能通知服务器端的手段，只能是 HTTP 协议。 具体来说，就是 HTTP 协议里面，四个表示操作方式的动词:GET、POST、PUT、DELETE。 它们分别对应四种基本操作:")]),t._v(" "),r("p",[t._v("查:GET 用来获取资源\n增:POST 用来新建资源(也可以用于更新资源)\n改:PUT 用来更新资源\n删:DELETE 用来删除资源。")]),t._v(" "),r("p",[t._v("综合上面的解释，我们总结一下什么是 RESTful 架构:")]),t._v(" "),r("p",[t._v('(1)每一个 URI 代表一种资源;\n(2)客户端和服务器之间，传递这种资源的某种表现层;\n(3)客户端通过四个 HTTP 动词，对服务器端资源进行操作，实现"表现层状态转化"。')]),t._v(" "),r("h3",{attrs:{id:"restful-的实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#restful-的实现"}},[t._v("#")]),t._v(" RESTful 的实现")]),t._v(" "),r("p",[t._v("Go 没有为 REST 提供直接支持，但是因为 RESTful 是基于 HTTP 协议实现的，所以我们可以利用 net/http 包来自己实 现，当然需要针对 REST 做一些改造，REST 是根据不同的 method 来处理相应的资源，目前已经存在的很多自称是 REST 的应用，其实并没有真正的实现 REST，我暂且把这些应用根据实现的 method 分成几个级别")]),t._v(" "),r("p",[r("img",{attrs:{src:a(396),alt:"alt"}})]),t._v(" "),r("p",[t._v("我们目前实现 REST 的三个 level，我们在应用开发的时候也不一定全部按照 RESTful 的规则全部实现他的方式，因为 有些时候完全按照 RESTful 的方式未必是可行的，RESTful 服务充分利用每一个 HTTP 方法，包括 DELETE 和 PUT。可 有时，HTTP 客户端只能发出 GET 和 POST 请求:")]),t._v(" "),r("p",[t._v("1、 HTML 标准只能通过链接和表单支持 GET 和 POST。在没有 Ajax 支持的网页浏览器中不能发出 PUT 或 DELETE 命令 有些防火墙会挡住 HTTP PUT 和 DELETE 请求要绕过这个限制，客户端需要把实际的 PUT 和 DELETE 请求通过 POST 请求穿透过来。RESTful 服务则要负责在收到的 POST 请求中找到原始的 HTTP 方法并还原。")]),t._v(" "),r("p",[t._v("2、我们现在可以通过 POST 里面增加隐藏字段_method 这种方式可以来模拟 PUT、DELETE 等方式，但是服务器端 需要做转换。我现在的项目里面就按照这种方式来做的 REST 接口。当然 Go 语言里面完全按照 RESTful 来实现是很容 易的")]),t._v(" "),r("div",{staticClass:"language-go extra-class"},[r("pre",{pre:!0,attrs:{class:"language-go"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/julienschmidt/httprouter"')]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http"')]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getuser")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w http"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ResponseWriter"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("http"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ps httprouter"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Params"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    uid"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("ps"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("ByName")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uid"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fmt"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fprintf")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"获取用户名 %s"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uid"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    mo"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" r"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Method\n    fmt"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fprintf")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"获取请求方式 %s"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mo"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    router "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" httprouter"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    router"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/getuser/:uid"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getuser"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    http"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Handle")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" router"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    http"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenAndServe")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('":8088"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("p",[t._v("上面的代码演示了如何编写一个REST的应用，我们通过get请求来访问对应的函数获取到了我传入的数据，这是离 我们使用的是1个三方库\n三方库安装")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("$ go get github.com/julienschmidt/httprouter\n")])])]),r("h4",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("p",[t._v("REST是一种架构风格，汲取了WWW的成功经验:无状态，以资源为中心，充分利用HTTP协议和URI协议，提供统 一的接口定义，使得它作为一种设计Web服务的方法而变得流行。在某种意义上，通过强调URI和HTTP等早期 Internet标准，REST是对大型应用程序服务器时代之前的Web方式的回归。目前Go对于REST的支持还是很简单 的，通过实现自定义的路由规则，我们就可以通过不同的请求方法访问不同的函数。这样就实现了REST的架构。")]),t._v(" "),r("h2",{attrs:{id:"web服务的调整"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web服务的调整"}},[t._v("#")]),t._v(" web服务的调整")])])}),[],!1,null,null,null);s.default=e.exports}}]);