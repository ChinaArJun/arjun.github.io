(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{638:function(e,t,a){"use strict";a.r(t);var s=a(44),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"_2-1-go依赖管理工具dep"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-go依赖管理工具dep"}},[e._v("#")]),e._v(" 2.1 Go依赖管理工具dep")]),e._v(" "),a("blockquote",[a("p",[e._v("Go dependency management tool")])]),e._v(" "),a("h2",{attrs:{id:"环境要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境要求"}},[e._v("#")]),e._v(" 环境要求")]),e._v(" "),a("ul",[a("li",[e._v("Golang >= 1.9")]),e._v(" "),a("li",[e._v("Dep")])]),e._v(" "),a("h2",{attrs:{id:"目前版本："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目前版本："}},[e._v("#")]),e._v(" 目前版本：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("dep:\n version     : devel\n build date  : \n git hash    : \n go version  : go1.10\n go compiler : gc\n platform    : linux/amd64\n")])])]),a("p",[a("code",[e._v("Latest release")]),e._v("为"),a("code",[e._v("v0.4.1")])]),e._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("go get -u github.com/golang/dep/cmd/dep\n")])])]),a("p",[e._v("若"),a("code",[e._v("$GOPATH/bin")]),e._v("不在"),a("code",[e._v("PATH")]),e._v("下，则需要将生成的"),a("code",[e._v("dep")]),e._v("文件从"),a("code",[e._v("$GOPATH/bin")]),e._v("移动至"),a("code",[e._v("$GOBIAN")]),e._v("下")]),e._v(" "),a("h2",{attrs:{id:"验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[e._v("#")]),e._v(" 验证")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ dep\nDep is a tool for managing dependencies for Go projects\n\nUsage: "dep [command]"\n\nCommands:\n\n  init     Set up a new Go project, or migrate an existing one\n  status   Report the status of the project\'s dependencies\n  ensure   Ensure a dependency is safely vendored in the project\n  prune    Pruning is now performed automatically by dep ensure.\n  version  Show the dep version information\n\nExamples:\n  dep init                               set up a new project\n  dep ensure                             install the project\'s dependencies\n  dep ensure -update                     update the locked versions of all dependencies\n  dep ensure -add github.com/pkg/errors  add a dependency to the project\n\nUse "dep help [command]" for more information about a command.\n\n')])])]),a("h2",{attrs:{id:"初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[e._v("#")]),e._v(" 初始化")]),e._v(" "),a("p",[e._v("在项目根目录执行初始化命令，"),a("code",[e._v("dep")]),e._v("在初始化时会分析应用程序所需要的所有依赖包，得出依赖包清单")]),e._v(" "),a("p",[e._v("并生成"),a("code",[e._v("vendor")]),e._v("目录，"),a("code",[e._v("Gopkg.toml")]),e._v("、"),a("code",[e._v("Gopkg.lock")]),e._v("文件")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://golang.github.io/dep/docs/assets/func-toggles.png",alt:"image"}})]),e._v(" "),a("h3",{attrs:{id:"默认初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认初始化"}},[e._v("#")]),e._v(" 默认初始化")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ dep init -v\n")])])]),a("p",[e._v("直接从对应网络资源处下载")]),e._v(" "),a("h3",{attrs:{id:"优先从-gopath初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优先从-gopath初始化"}},[e._v("#")]),e._v(" 优先从$GOPATH初始化")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ dep init -gopath -v\n")])])]),a("p",[e._v("该命令会先从"),a("code",[e._v("$GOPATH")]),e._v("查找既有的依赖包，若不存在则从对应网络资源处下载")]),e._v(" "),a("h3",{attrs:{id:"gopkg-toml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gopkg-toml"}},[e._v("#")]),e._v(" Gopkg.toml")]),e._v(" "),a("p",[e._v("该文件由"),a("code",[e._v("dep init")]),e._v("生成，包含管理"),a("code",[e._v("dep")]),e._v("行为的规则声明")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('required = ["github.com/user/thing/cmd/thing"]\n\nignored = [\n  "github.com/user/project/pkgX",\n  "bitbucket.org/user/project/pkgA/pkgY"\n]\n\n[metadata]\nkey1 = "value that convey data to other systems"\nsystem1-data = "value that is used by a system"\nsystem2-data = "value that is used by another system"\n\n[[constraint]]\n  # Required: the root import path of the project being constrained.\n  name = "github.com/user/project"\n  # Recommended: the version constraint to enforce for the project.\n  # Note that only one of "branch", "version" or "revision" can be specified.\n  version = "1.0.0"\n  branch = "master"\n  revision = "abc123"\n\n  # Optional: an alternate location (URL or import path) for the project\'s source.\n  source = "https://github.com/myfork/package.git"\n\n  # Optional: metadata about the constraint or override that could be used by other independent systems\n  [metadata]\n  key1 = "value that convey data to other systems"\n  system1-data = "value that is used by a system"\n  system2-data = "value that is used by another system"\n')])])]),a("h3",{attrs:{id:"gopkg-lock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gopkg-lock"}},[e._v("#")]),e._v(" Gopkg.lock")]),e._v(" "),a("p",[e._v("该文件由"),a("code",[e._v("dep ensure")]),e._v("和"),a("code",[e._v("dep init")]),e._v("生成，包含一个项目依赖关系图的传递完整快照，表示为一系列"),a("code",[e._v("[[project]]")]),e._v("节")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('# This file is autogenerated, do not edit; changes may be undone by the next \'dep ensure\'.\n\n[[projects]]\n  branch = "master"\n  name = "github.com/golang/protobuf"\n  packages = [\n    "jsonpb",\n    "proto",\n    "protoc-gen-go/descriptor",\n    "ptypes",\n    "ptypes/any",\n    "ptypes/duration",\n    "ptypes/struct",\n    "ptypes/timestamp"\n  ]\n  revision = "bbd03ef6da3a115852eaf24c8a1c46aeb39aa175"\n')])])]),a("h2",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[e._v("#")]),e._v(" 常用命令")]),e._v(" "),a("h3",{attrs:{id:"dep-ensure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dep-ensure"}},[e._v("#")]),e._v(" dep ensure")]),e._v(" "),a("p",[e._v("从项目中的"),a("code",[e._v("Gopkg.toml")]),e._v("和"),a("code",[e._v("Gopkg.lock")]),e._v("中分析关系图，并获取所需的依赖包")]),e._v(" "),a("p",[e._v("用于确保本地的关系图、锁、依赖包清单完全一致")]),e._v(" "),a("h3",{attrs:{id:"dep-ensure-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dep-ensure-add"}},[e._v("#")]),e._v(" dep ensure -add")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 引入该依赖包的最新版本\ndep ensure -add github.com/pkg/foo\n\n# 引入具有特定约束（指定版本）的依赖包\ndep ensure -add github.com/pkg/foo@^1.0.1\n")])])]),a("h3",{attrs:{id:"dep-ensure-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dep-ensure-update"}},[e._v("#")]),e._v(" dep ensure -update")]),e._v(" "),a("p",[e._v("将"),a("code",[e._v("Gopkg.lock")]),e._v("中的约定依赖项更新为"),a("code",[e._v("Gopkg.toml")]),e._v("允许的最新版本")]),e._v(" "),a("h2",{attrs:{id:"最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[e._v("#")]),e._v(" 最后")]),e._v(" "),a("p",[e._v("目前"),a("code",[e._v("dep")]),e._v("还在官方试验阶段，但已表示生产可安全使用")]),e._v(" "),a("p",[e._v("如果出现什么问题，大家可以一起留个言讨论讨论")])])}),[],!1,null,null,null);t.default=n.exports}}]);