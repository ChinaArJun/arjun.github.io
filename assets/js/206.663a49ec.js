(window.webpackJsonp=window.webpackJsonp||[]).push([[206],{642:function(t,e,n){"use strict";n.r(e);var a=n(44),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"优化配置结构及实现图片上传"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化配置结构及实现图片上传"}},[t._v("#")]),t._v(" 优化配置结构及实现图片上传")]),t._v(" "),n("p",[t._v("项目地址：https://github.com/EDDYCJY/go-gin-example")]),t._v(" "),n("h2",{attrs:{id:"知识点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),n("ul",[n("li",[t._v("重构、调整结构")])]),t._v(" "),n("h2",{attrs:{id:"本文目标"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本文目标"}},[t._v("#")]),t._v(" 本文目标")]),t._v(" "),n("p",[t._v("这个应用程序跑了那么久了，越来越大，越来越壮，仿佛我们的产品一样，现在它需要进行小范围重构了，以便于后续的使用，这非常重要。")]),t._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[t._v("一天，产品经理突然跟你说文章列表，没有封面图，不够美观，！）&￥*！&）#&￥*！加一个吧，几分钟的事")]),t._v(" "),n("p",[t._v("你打开你的程序，分析了一波写了个清单：")]),t._v(" "),n("ul",[n("li",[t._v("优化配置结构（因为配置项越来越多）")]),t._v(" "),n("li",[t._v("抽离 原 logging 的 File 便于公用（logging、upload 各保有一份并不合适）")]),t._v(" "),n("li",[t._v("实现上传图片接口（需限制文件格式、大小）")]),t._v(" "),n("li",[t._v("修改文章接口（需支持封面地址参数）")]),t._v(" "),n("li",[t._v("增加 blog_article （文章）的数据库字段")]),t._v(" "),n("li",[t._v("实现 http.FileServer")])]),t._v(" "),n("p",[t._v("嗯，你发现要较优的话，需要调整部分的应用程序结构，因为功能越来越多，原本的设计也要跟上节奏")]),t._v(" "),n("p",[t._v("也就是在适当的时候，及时优化")]),t._v(" "),n("h2",{attrs:{id:"优化配置结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化配置结构"}},[t._v("#")]),t._v(" 优化配置结构")]),t._v(" "),n("h3",{attrs:{id:"一、讲解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、讲解"}},[t._v("#")]),t._v(" 一、讲解")]),t._v(" "),n("p",[t._v("在先前章节中，采用了直接读取 KEY 的方式去存储配置项，而本次需求中，需要增加图片的配置项，总体就有些冗余了")]),t._v(" "),n("p",[t._v("我们采用以下解决方法：")]),t._v(" "),n("ul",[n("li",[t._v("映射结构体：使用 MapTo 来设置配置参数")]),t._v(" "),n("li",[t._v("配置统管：所有的配置项统管到 setting 中")])]),t._v(" "),n("h4",{attrs:{id:"映射结构体（示例）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#映射结构体（示例）"}},[t._v("#")]),t._v(" 映射结构体（示例）")]),t._v(" "),n("p",[t._v("在 go-ini 中可以采用 MapTo 的方式来映射结构体，例如：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Server "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tRunMode "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tHttpPort "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\tReadTimeout time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration\n\tWriteTimeout time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ServerSetting "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Cfg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" ini"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Load")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conf/app.ini"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Fail to parse 'conf/app.ini': %v\"")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\n\terr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Cfg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Section")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"server"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MapTo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ServerSetting"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatalf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cfg.MapTo ServerSetting err: %v"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在这段代码中，可以注意 ServerSetting 取了地址，为什么 MapTo 必须地址入参呢？")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// MapTo maps section to given struct.\nfunc (s *Section) MapTo(v interface{}) error {\n\ttyp := reflect.TypeOf(v)\n\tval := reflect.ValueOf(v)\n\tif typ.Kind() == reflect.Ptr {\n\t\ttyp = typ.Elem()\n\t\tval = val.Elem()\n\t} else {\n\t\treturn errors.New("cannot map to non-pointer struct")\n\t}\n\n\treturn s.mapTo(val, false)\n}\n')])])]),n("p",[t._v("在 MapTo 中 "),n("code",[t._v("typ.Kind() == reflect.Ptr")]),t._v(" 约束了必须使用指针，否则会返回 "),n("code",[t._v("cannot map to non-pointer struct")]),t._v(" 的错误。这个是表面原因")]),t._v(" "),n("p",[t._v("更往内探究，可以认为是 "),n("code",[t._v("field.Set")]),t._v(" 的原因，当执行 "),n("code",[t._v("val := reflect.ValueOf(v)")]),t._v(" ，函数通过传递 "),n("code",[t._v("v")]),t._v(" 拷贝创建了 "),n("code",[t._v("val")]),t._v("，但是 "),n("code",[t._v("val")]),t._v(" 的改变并不能更改原始的 "),n("code",[t._v("v")]),t._v("，要想 "),n("code",[t._v("val")]),t._v(" 的更改能作用到 "),n("code",[t._v("v")]),t._v("，则必须传递 "),n("code",[t._v("v")]),t._v(" 的地址")]),t._v(" "),n("p",[t._v("显然 go-ini 里也是包含修改原始值这一项功能的，你觉得是什么原因呢？")]),t._v(" "),n("h4",{attrs:{id:"配置统管"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置统管"}},[t._v("#")]),t._v(" 配置统管")]),t._v(" "),n("p",[t._v("在先前的版本中，models 和 file 的配置是在自己的文件中解析的，而其他在 setting.go 中，因此我们需要将其在 setting 中统一接管")]),t._v(" "),n("p",[t._v("你可能会想，直接把两者的配置项复制粘贴到 setting.go 的 init 中，一下子就完事了，搞那么麻烦？")]),t._v(" "),n("p",[t._v("但你在想想，先前的代码中存在多个 init 函数，执行顺序存在问题，无法达到我们的要求，你可以试试")]),t._v(" "),n("p",[t._v("（此处是一个基础知识点）")]),t._v(" "),n("p",[t._v("在 Go 中，当存在多个 init 函数时，执行顺序为：")]),t._v(" "),n("ul",[n("li",[t._v("相同包下的 init 函数：按照源文件编译顺序决定执行顺序（默认按文件名排序）")]),t._v(" "),n("li",[t._v("不同包下的 init 函数：按照包导入的依赖关系决定先后顺序")])]),t._v(" "),n("p",[t._v("所以要避免多 init 的情况，"),n("strong",[t._v("尽量由程序把控初始化的先后顺序")])]),t._v(" "),n("h3",{attrs:{id:"二、落实"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、落实"}},[t._v("#")]),t._v(" 二、落实")]),t._v(" "),n("h4",{attrs:{id:"修改配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改配置文件"}},[t._v("#")]),t._v(" 修改配置文件")]),t._v(" "),n("p",[t._v("打开 conf/app.ini 将配置文件修改为大驼峰命名，另外我们增加了 5 个配置项用于上传图片的功能，4 个文件日志方面的配置项")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("[app]\nPageSize = 10\nJwtSecret = 233\n\nRuntimeRootPath = runtime/\n\nImagePrefixUrl = http://127.0.0.1:8000\nImageSavePath = upload/images/\n# MB\nImageMaxSize = 5\nImageAllowExts = .jpg,.jpeg,.png\n\nLogSavePath = logs/\nLogSaveName = log\nLogFileExt = log\nTimeFormat = 20060102\n\n[server]\n#debug or release\nRunMode = debug\nHttpPort = 8000\nReadTimeout = 60\nWriteTimeout = 60\n\n[database]\nType = mysql\nUser = root\nPassword = rootroot\nHost = 127.0.0.1:3306\nName = blog\nTablePrefix = blog_\n")])])]),n("h4",{attrs:{id:"优化配置读取及设置初始化顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化配置读取及设置初始化顺序"}},[t._v("#")]),t._v(" 优化配置读取及设置初始化顺序")]),t._v(" "),n("h5",{attrs:{id:"第一步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一步"}},[t._v("#")]),t._v(" 第一步")]),t._v(" "),n("p",[t._v("将散落在其他文件里的配置都删掉，"),n("strong",[t._v("统一在 setting 中处理")]),t._v("以及"),n("strong",[t._v("修改 init 函数为 Setup 方法")])]),t._v(" "),n("p",[t._v("打开 pkg/setting/setting.go 文件，修改如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package setting\n\nimport (\n\t"log"\n\t"time"\n\n\t"github.com/go-ini/ini"\n)\n\ntype App struct {\n\tJwtSecret string\n\tPageSize int\n\tRuntimeRootPath string\n\n\tImagePrefixUrl string\n\tImageSavePath string\n\tImageMaxSize int\n\tImageAllowExts []string\n\n\tLogSavePath string\n\tLogSaveName string\n\tLogFileExt string\n\tTimeFormat string\n}\n\nvar AppSetting = &App{}\n\ntype Server struct {\n\tRunMode string\n\tHttpPort int\n\tReadTimeout time.Duration\n\tWriteTimeout time.Duration\n}\n\nvar ServerSetting = &Server{}\n\ntype Database struct {\n\tType string\n\tUser string\n\tPassword string\n\tHost string\n\tName string\n\tTablePrefix string\n}\n\nvar DatabaseSetting = &Database{}\n\nfunc Setup() {\n\tCfg, err := ini.Load("conf/app.ini")\n\tif err != nil {\n\t\tlog.Fatalf("Fail to parse \'conf/app.ini\': %v", err)\n\t}\n\n\terr = Cfg.Section("app").MapTo(AppSetting)\n\tif err != nil {\n\t\tlog.Fatalf("Cfg.MapTo AppSetting err: %v", err)\n\t}\n\n\tAppSetting.ImageMaxSize = AppSetting.ImageMaxSize * 1024 * 1024\n\n\terr = Cfg.Section("server").MapTo(ServerSetting)\n\tif err != nil {\n\t\tlog.Fatalf("Cfg.MapTo ServerSetting err: %v", err)\n\t}\n\n\tServerSetting.ReadTimeout = ServerSetting.ReadTimeout * time.Second\n\tServerSetting.WriteTimeout = ServerSetting.ReadTimeout * time.Second\n\n\terr = Cfg.Section("database").MapTo(DatabaseSetting)\n\tif err != nil {\n\t\tlog.Fatalf("Cfg.MapTo DatabaseSetting err: %v", err)\n\t}\n}\n')])])]),n("p",[t._v("在这里，我们做了如下几件事：")]),t._v(" "),n("ul",[n("li",[t._v("编写与配置项保持一致的结构体（App、Server、Database）")]),t._v(" "),n("li",[t._v("使用 MapTo 将配置项映射到结构体上")]),t._v(" "),n("li",[t._v("对一些需特殊设置的配置项进行再赋值")])]),t._v(" "),n("p",[n("strong",[t._v("需要你去做的事：")])]),t._v(" "),n("ul",[n("li",[t._v("将 "),n("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/a338ddec103c9506b4c7ed16d9f5386040d99b4b/models/models.go#L23",target:"_blank",rel:"noopener noreferrer"}},[t._v("models.go"),n("OutboundLink")],1),t._v("、"),n("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/a338ddec103c9506b4c7ed16d9f5386040d99b4b/pkg/setting/setting.go#L23",target:"_blank",rel:"noopener noreferrer"}},[t._v("setting.go"),n("OutboundLink")],1),t._v("、"),n("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/a338ddec103c9506b4c7ed16d9f5386040d99b4b/pkg/logging/log.go#L32-L37",target:"_blank",rel:"noopener noreferrer"}},[t._v("pkg/logging/log.go"),n("OutboundLink")],1),t._v(" 的 init 函数修改为 Setup 方法")]),t._v(" "),n("li",[t._v("将 "),n("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/a338ddec103c9506b4c7ed16d9f5386040d99b4b/models/models.go#L23-L39",target:"_blank",rel:"noopener noreferrer"}},[t._v("models/models.go"),n("OutboundLink")],1),t._v(" 独立读取的 DB 配置项删除，改为统一读取 setting")]),t._v(" "),n("li",[t._v("将 "),n("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/a338ddec103c9506b4c7ed16d9f5386040d99b4b/pkg/logging/file.go#L10-L15",target:"_blank",rel:"noopener noreferrer"}},[t._v("pkg/logging/file"),n("OutboundLink")],1),t._v(" 独立的 LOG 配置项删除，改为统一读取 setting")])]),t._v(" "),n("p",[t._v("这几项比较基础，并没有贴出来，我希望你可以自己动手，有问题的话可右拐 "),n("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("项目地址"),n("OutboundLink")],1)]),t._v(" "),n("h5",{attrs:{id:"第二步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二步"}},[t._v("#")]),t._v(" 第二步")]),t._v(" "),n("p",[t._v("在这一步我们要设置初始化的流程，打开 main.go 文件，修改内容：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('func main() {\n\tsetting.Setup()\n\tmodels.Setup()\n\tlogging.Setup()\n\n\tendless.DefaultReadTimeOut = setting.ServerSetting.ReadTimeout\n\tendless.DefaultWriteTimeOut = setting.ServerSetting.WriteTimeout\n\tendless.DefaultMaxHeaderBytes = 1 << 20\n\tendPoint := fmt.Sprintf(":%d", setting.ServerSetting.HttpPort)\n\n\tserver := endless.NewServer(endPoint, routers.InitRouter())\n\tserver.BeforeBegin = func(add string) {\n\t\tlog.Printf("Actual pid is %d", syscall.Getpid())\n\t}\n\n\terr := server.ListenAndServe()\n\tif err != nil {\n\t\tlog.Printf("Server err: %v", err)\n\t}\n}\n')])])]),n("p",[t._v("修改完毕后，就成功将多模块的初始化函数放到启动流程中了（先后顺序也可以控制）")]),t._v(" "),n("h5",{attrs:{id:"验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),n("p",[t._v("在这里为止，针对本需求的配置优化就完毕了，你需要执行 "),n("code",[t._v("go run main.go")]),t._v(" 验证一下你的功能是否正常哦")]),t._v(" "),n("p",[t._v("顺带留个基础问题，大家可以思考下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ServerSetting.ReadTimeout = ServerSetting.ReadTimeout * time.Second\nServerSetting.WriteTimeout = ServerSetting.ReadTimeout * time.Second\n")])])]),n("p",[t._v("若将 setting.go 文件中的这两行删除，会出现什么问题，为什么呢？")]),t._v(" "),n("h2",{attrs:{id:"抽离-file"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#抽离-file"}},[t._v("#")]),t._v(" 抽离 File")]),t._v(" "),n("p",[t._v("在先前版本中，在 "),n("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/a338ddec103c9506b4c7ed16d9f5386040d99b4b/pkg/logging/file.go",target:"_blank",rel:"noopener noreferrer"}},[t._v("logging/file.go"),n("OutboundLink")],1),t._v(" 中使用到了 os 的一些方法，我们通过前期规划发现，这部分在上传图片功能中可以复用")]),t._v(" "),n("h3",{attrs:{id:"第一步-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一步-2"}},[t._v("#")]),t._v(" 第一步")]),t._v(" "),n("p",[t._v("在 pkg 目录下新建 file/file.go ，写入文件内容如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package file\n\nimport (\n\t"os"\n\t"path"\n\t"mime/multipart"\n\t"io/ioutil"\n)\n\nfunc GetSize(f multipart.File) (int, error) {\n\tcontent, err := ioutil.ReadAll(f)\n\n\treturn len(content), err\n}\n\nfunc GetExt(fileName string) string {\n\treturn path.Ext(fileName)\n}\n\nfunc CheckExist(src string) bool {\n\t_, err := os.Stat(src)\n\n\treturn os.IsNotExist(err)\n}\n\nfunc CheckPermission(src string) bool {\n\t_, err := os.Stat(src)\n\n\treturn os.IsPermission(err)\n}\n\nfunc IsNotExistMkDir(src string) error {\n\tif notExist := CheckNotExist(src); notExist == true {\n\t\tif err := MkDir(src); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\treturn nil\n}\n\nfunc MkDir(src string) error {\n\terr := os.MkdirAll(src, os.ModePerm)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\nfunc Open(name string, flag int, perm os.FileMode) (*os.File, error) {\n\tf, err := os.OpenFile(name, flag, perm)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn f, nil\n}\n')])])]),n("p",[t._v("在这里我们一共封装了 7个 方法")]),t._v(" "),n("ul",[n("li",[t._v("GetSize：获取文件大小")]),t._v(" "),n("li",[t._v("GetExt：获取文件后缀")]),t._v(" "),n("li",[t._v("CheckExist：检查文件是否存在")]),t._v(" "),n("li",[t._v("CheckPermission：检查文件权限")]),t._v(" "),n("li",[t._v("IsNotExistMkDir：如果不存在则新建文件夹")]),t._v(" "),n("li",[t._v("MkDir：新建文件夹")]),t._v(" "),n("li",[t._v("Open：打开文件")])]),t._v(" "),n("p",[t._v("在这里我们用到了 "),n("code",[t._v("mime/multipart")]),t._v(" 包，它主要实现了 MIME 的 multipart 解析，主要适用于 "),n("a",{attrs:{href:"https://tools.ietf.org/html/rfc2388",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP"),n("OutboundLink")],1),t._v(" 和常见浏览器生成的 multipart 主体")]),t._v(" "),n("p",[t._v("multipart 又是什么，"),n("a",{attrs:{href:"https://tools.ietf.org/html/rfc2388",target:"_blank",rel:"noopener noreferrer"}},[t._v("rfc2388"),n("OutboundLink")],1),t._v(" 的 multipart/form-data 了解一下")]),t._v(" "),n("h3",{attrs:{id:"第二步-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二步-2"}},[t._v("#")]),t._v(" 第二步")]),t._v(" "),n("p",[t._v("我们在第一步已经将 file 重新封装了一层，在这一步我们将原先 logging 包的方法都修改掉")]),t._v(" "),n("p",[t._v("1、打开 pkg/logging/file.go 文件，修改文件内容：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package logging\n\nimport (\n\t"fmt"\n\t"os"\n\t"time"\n\n\t"github.com/EDDYCJY/go-gin-example/pkg/setting"\n\t"github.com/EDDYCJY/go-gin-example/pkg/file"\n)\n\nfunc getLogFilePath() string {\n\treturn fmt.Sprintf("%s%s", setting.AppSetting.RuntimeRootPath, setting.AppSetting.LogSavePath)\n}\n\nfunc getLogFileName() string {\n\treturn fmt.Sprintf("%s%s.%s",\n\t\tsetting.AppSetting.LogSaveName,\n\t\ttime.Now().Format(setting.AppSetting.TimeFormat),\n\t\tsetting.AppSetting.LogFileExt,\n\t)\n}\n\nfunc openLogFile(fileName, filePath string) (*os.File, error) {\n\tdir, err := os.Getwd()\n\tif err != nil {\n\t\treturn nil, fmt.Errorf("os.Getwd err: %v", err)\n\t}\n\n\tsrc := dir + "/" + filePath\n\tperm := file.CheckPermission(src)\n\tif perm == true {\n\t\treturn nil, fmt.Errorf("file.CheckPermission Permission denied src: %s", src)\n\t}\n\n\terr = file.IsNotExistMkDir(src)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf("file.IsNotExistMkDir src: %s, err: %v", src, err)\n\t}\n\n\tf, err := file.Open(src + fileName, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf("Fail to OpenFile :%v", err)\n\t}\n\n\treturn f, nil\n}\n')])])]),n("p",[t._v("我们将引用都改为了 file/file.go 包里的方法")]),t._v(" "),n("p",[t._v("2、打开 pkg/logging/log.go 文件，修改文件内容:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("package logging\n\n...\n\nfunc Setup() {\n\tvar err error\n\tfilePath := getLogFilePath()\n\tfileName := getLogFileName()\n\tF, err = openLogFile(fileName, filePath)\n\tif err != nil {\n\t\tlog.Fatalln(err)\n\t}\n\n\tlogger = log.New(F, DefaultPrefix, log.LstdFlags)\n}\n\n...\n")])])]),n("p",[t._v("由于原方法形参改变了，因此 openLogFile 也需要调整")]),t._v(" "),n("h2",{attrs:{id:"实现上传图片接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现上传图片接口"}},[t._v("#")]),t._v(" 实现上传图片接口")]),t._v(" "),n("p",[t._v("这一小节，我们开始实现上次图片相关的一些方法和功能")]),t._v(" "),n("p",[t._v("首先需要在 blog_article 中增加字段 "),n("code",[t._v("cover_image_url")]),t._v("，格式为 "),n("code",[t._v("varchar(255) DEFAULT '' COMMENT '封面图片地址'")])]),t._v(" "),n("h3",{attrs:{id:"第零步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第零步"}},[t._v("#")]),t._v(" 第零步")]),t._v(" "),n("p",[t._v("一般不会直接将上传的图片名暴露出来，因此我们对图片名进行 MD5 来达到这个效果")]),t._v(" "),n("p",[t._v("在 util 目录下新建 md5.go，写入文件内容：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package util\n\nimport (\n\t"crypto/md5"\n\t"encoding/hex"\n)\n\nfunc EncodeMD5(value string) string {\n\tm := md5.New()\n\tm.Write([]byte(value))\n\n\treturn hex.EncodeToString(m.Sum(nil))\n}\n\n')])])]),n("h3",{attrs:{id:"第一步-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一步-3"}},[t._v("#")]),t._v(" 第一步")]),t._v(" "),n("p",[t._v("在先前我们已经把底层方法给封装好了，实质这一步为封装 image 的处理逻辑")]),t._v(" "),n("p",[t._v("在 pkg 目录下新建 upload/image.go 文件，写入文件内容：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package upload\n\nimport (\n\t"os"\n\t"path"\n\t"log"\n\t"fmt"\n\t"strings"\n\t"mime/multipart"\n\n\t"github.com/EDDYCJY/go-gin-example/pkg/file"\n\t"github.com/EDDYCJY/go-gin-example/pkg/setting"\n\t"github.com/EDDYCJY/go-gin-example/pkg/logging"\n\t"github.com/EDDYCJY/go-gin-example/pkg/util"\n)\n\nfunc GetImageFullUrl(name string) string {\n\treturn setting.AppSetting.ImagePrefixUrl + "/" + GetImagePath() + name\n}\n\nfunc GetImageName(name string) string {\n\text := path.Ext(name)\n\tfileName := strings.TrimSuffix(name, ext)\n\tfileName = util.EncodeMD5(fileName)\n\n\treturn fileName + ext\n}\n\nfunc GetImagePath() string {\n\treturn setting.AppSetting.ImageSavePath\n}\n\nfunc GetImageFullPath() string {\n\treturn setting.AppSetting.RuntimeRootPath + GetImagePath()\n}\n\nfunc CheckImageExt(fileName string) bool {\n\text := file.GetExt(fileName)\n\tfor _, allowExt := range setting.AppSetting.ImageAllowExts {\n\t\tif strings.ToUpper(allowExt) == strings.ToUpper(ext) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n}\n\nfunc CheckImageSize(f multipart.File) bool {\n\tsize, err := file.GetSize(f)\n\tif err != nil {\n\t\tlog.Println(err)\n\t\tlogging.Warn(err)\n\t\treturn false\n\t}\n\n\treturn size <= setting.AppSetting.ImageMaxSize\n}\n\nfunc CheckImage(src string) error {\n\tdir, err := os.Getwd()\n\tif err != nil {\n\t\treturn fmt.Errorf("os.Getwd err: %v", err)\n\t}\n\n\terr = file.IsNotExistMkDir(dir + "/" + src)\n\tif err != nil {\n\t\treturn fmt.Errorf("file.IsNotExistMkDir err: %v", err)\n\t}\n\n\tperm := file.CheckPermission(src)\n\tif perm == true {\n\t\treturn fmt.Errorf("file.CheckPermission Permission denied src: %s", src)\n\t}\n\n\treturn nil\n}\n')])])]),n("p",[t._v("在这里我们实现了 7 个方法，如下：")]),t._v(" "),n("ul",[n("li",[t._v("GetImageFullUrl：获取图片完整访问URL")]),t._v(" "),n("li",[t._v("GetImageName：获取图片名称")]),t._v(" "),n("li",[t._v("GetImagePath：获取图片路径")]),t._v(" "),n("li",[t._v("GetImageFullPath：获取图片完整路径")]),t._v(" "),n("li",[t._v("CheckImageExt：检查图片后缀")]),t._v(" "),n("li",[t._v("CheckImageSize：检查图片大小")]),t._v(" "),n("li",[t._v("CheckImage：检查图片")])]),t._v(" "),n("p",[t._v("这里基本是对底层代码的二次封装，为了更灵活的处理一些图片特有的逻辑，并且方便修改，不直接对外暴露下层")]),t._v(" "),n("h3",{attrs:{id:"第二步-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二步-3"}},[t._v("#")]),t._v(" 第二步")]),t._v(" "),n("p",[t._v("这一步将编写上传图片的业务逻辑，在 routers/api 目录下 新建 upload.go 文件，写入文件内容:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package api\n\nimport (\n\t"net/http"\n\n\t"github.com/gin-gonic/gin"\n\n\t"github.com/EDDYCJY/go-gin-example/pkg/e"\n\t"github.com/EDDYCJY/go-gin-example/pkg/logging"\n\t"github.com/EDDYCJY/go-gin-example/pkg/upload"\n)\n\nfunc UploadImage(c *gin.Context) {\n\tcode := e.SUCCESS\n\tdata := make(map[string]string)\n\n\tfile, image, err := c.Request.FormFile("image")\n\tif err != nil {\n\t\tlogging.Warn(err)\n\t\tcode = e.ERROR\n\t\tc.JSON(http.StatusOK, gin.H{\n\t\t\t"code": code,\n\t\t\t"msg":  e.GetMsg(code),\n\t\t\t"data": data,\n\t\t})\n\t}\n\n\tif image == nil {\n\t\tcode = e.INVALID_PARAMS\n\t} else {\n\t\timageName := upload.GetImageName(image.Filename)\n\t\tfullPath := upload.GetImageFullPath()\n\t\tsavePath := upload.GetImagePath()\n\n\t\tsrc := fullPath + imageName\n\t\tif ! upload.CheckImageExt(imageName) || ! upload.CheckImageSize(file) {\n\t\t\tcode = e.ERROR_UPLOAD_CHECK_IMAGE_FORMAT\n\t\t} else {\n\t\t\terr := upload.CheckImage(fullPath)\n\t\t\tif err != nil {\n\t\t\t\tlogging.Warn(err)\n\t\t\t\tcode = e.ERROR_UPLOAD_CHECK_IMAGE_FAIL\n\t\t\t} else if err := c.SaveUploadedFile(image, src); err != nil {\n\t\t\t\tlogging.Warn(err)\n\t\t\t\tcode = e.ERROR_UPLOAD_SAVE_IMAGE_FAIL\n\t\t\t} else {\n\t\t\t\tdata["image_url"] = upload.GetImageFullUrl(imageName)\n\t\t\t\tdata["image_save_url"] = savePath + imageName\n\t\t\t}\n\t\t}\n\t}\n\n\tc.JSON(http.StatusOK, gin.H{\n\t\t"code": code,\n\t\t"msg":  e.GetMsg(code),\n\t\t"data": data,\n\t})\n}\n')])])]),n("p",[t._v("所涉及的错误码（需在 pkg/e/code.go、msg.go 添加）：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 保存图片失败\nERROR_UPLOAD_SAVE_IMAGE_FAIL = 30001\n// 检查图片失败\nERROR_UPLOAD_CHECK_IMAGE_FAIL = 30002\n// 校验图片错误，图片格式或大小有问题\nERROR_UPLOAD_CHECK_IMAGE_FORMAT = 30003\n")])])]),n("p",[t._v("在这一大段的业务逻辑中，我们做了如下事情：")]),t._v(" "),n("ul",[n("li",[t._v("c.Request.FormFile：获取上传的图片（返回提供的表单键的第一个文件）")]),t._v(" "),n("li",[t._v("CheckImageExt、CheckImageSize检查图片大小，检查图片后缀")]),t._v(" "),n("li",[t._v("CheckImage：检查上传图片所需（权限、文件夹）")]),t._v(" "),n("li",[t._v("SaveUploadedFile：保存图片")])]),t._v(" "),n("p",[t._v("总的来说，就是 入参 -> 检查 -》 保存 的应用流程")]),t._v(" "),n("h3",{attrs:{id:"第三步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第三步"}},[t._v("#")]),t._v(" 第三步")]),t._v(" "),n("p",[t._v("打开 routers/router.go 文件，增加路由 "),n("code",[t._v('r.POST("/upload", api.UploadImage)')]),t._v(" ，如：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('func InitRouter() *gin.Engine {\n\tr := gin.New()\n    ...\n\tr.GET("/auth", api.GetAuth)\n\tr.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))\n\tr.POST("/upload", api.UploadImage)\n\n\tapiv1 := r.Group("/api/v1")\n\tapiv1.Use(jwt.JWT())\n\t{\n\t\t...\n\t}\n\n\treturn r\n}\n')])])]),n("h3",{attrs:{id:"验证-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证-2"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),n("p",[t._v("最后我们请求一下上传图片的接口，测试所编写的功能")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://i.imgur.com/NjdkvxS.jpg",alt:"image"}})]),t._v(" "),n("p",[t._v("检查目录下是否含文件（注意权限问题）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("$ pwd\n$GOPATH/src/github.com/EDDYCJY/go-gin-example/runtime/upload/images\n\n$ ll\n... 96a3be3cf272e017046d1b2674a52bd3.jpg\n... c39fa784216313cf2faa7c98739fc367.jpeg\n")])])]),n("p",[t._v("在这里我们一共返回了 2 个参数，一个是完整的访问 URL，另一个为保存路径")]),t._v(" "),n("h2",{attrs:{id:"实现-http-fileserver"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现-http-fileserver"}},[t._v("#")]),t._v(" 实现 http.FileServer")]),t._v(" "),n("p",[t._v("在完成了上一小节后，我们还需要让前端能够访问到图片，一般是如下：")]),t._v(" "),n("ul",[n("li",[t._v("CDN")]),t._v(" "),n("li",[t._v("http.FileSystem")])]),t._v(" "),n("p",[t._v("在公司的话，CDN 或自建分布式文件系统居多，也不需要过多关注。而在实践里的话肯定是本地搭建了，Go 本身对此就有很好的支持，而 Gin 更是再封装了一层，只需要在路由增加一行代码即可")]),t._v(" "),n("h3",{attrs:{id:"r-staticfs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#r-staticfs"}},[t._v("#")]),t._v(" r.StaticFS")]),t._v(" "),n("p",[t._v("打开 routers/router.go 文件，增加路由 "),n("code",[t._v('r.StaticFS("/upload/images", http.Dir(upload.GetImageFullPath()))')]),t._v("，如：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('func InitRouter() *gin.Engine {\n    ...\n\tr.StaticFS("/upload/images", http.Dir(upload.GetImageFullPath()))\n\n\tr.GET("/auth", api.GetAuth)\n\tr.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))\n\tr.POST("/upload", api.UploadImage)\n    ...\n}\n')])])]),n("h3",{attrs:{id:"它做了什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#它做了什么"}},[t._v("#")]),t._v(" 它做了什么")]),t._v(" "),n("p",[t._v("当访问 $HOST/upload/images 时，将会读取到 $GOPATH/src/github.com/EDDYCJY/go-gin-example/runtime/upload/images 下的文件")]),t._v(" "),n("p",[t._v("而这行代码又做了什么事呢，我们来看看方法原型")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// StaticFS works just like `Static()` but a custom `http.FileSystem` can be used instead.\n// Gin by default user: gin.Dir()\nfunc (group *RouterGroup) StaticFS(relativePath string, fs http.FileSystem) IRoutes {\n\tif strings.Contains(relativePath, ":") || strings.Contains(relativePath, "*") {\n\t\tpanic("URL parameters can not be used when serving a static folder")\n\t}\n\thandler := group.createStaticHandler(relativePath, fs)\n\turlPattern := path.Join(relativePath, "/*filepath")\n\n\t// Register GET and HEAD handlers\n\tgroup.GET(urlPattern, handler)\n\tgroup.HEAD(urlPattern, handler)\n\treturn group.returnObj()\n}\n')])])]),n("p",[t._v("首先在暴露的 URL 中禁止了 * 和 : 符号的使用，通过 "),n("code",[t._v("createStaticHandler")]),t._v(" 创建了静态文件服务，实质最终调用的还是 "),n("code",[t._v("fileServer.ServeHTTP")]),t._v(" 和一些处理逻辑了")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("func (group *RouterGroup) createStaticHandler(relativePath string, fs http.FileSystem) HandlerFunc {\n\tabsolutePath := group.calculateAbsolutePath(relativePath)\n\tfileServer := http.StripPrefix(absolutePath, http.FileServer(fs))\n\t_, nolisting := fs.(*onlyfilesFS)\n\treturn func(c *Context) {\n\t\tif nolisting {\n\t\t\tc.Writer.WriteHeader(404)\n\t\t}\n\t\tfileServer.ServeHTTP(c.Writer, c.Request)\n\t}\n}\n")])])]),n("h4",{attrs:{id:"http-stripprefix"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-stripprefix"}},[t._v("#")]),t._v(" http.StripPrefix")]),t._v(" "),n("p",[t._v("我们可以留意下 "),n("code",[t._v("fileServer := http.StripPrefix(absolutePath, http.FileServer(fs))")]),t._v(" 这段语句，在静态文件服务中很常见，它有什么作用呢？")]),t._v(" "),n("p",[n("code",[t._v("http.StripPrefix")]),t._v(" 主要作用是从请求 URL 的路径中删除给定的前缀，最终返回一个 "),n("code",[t._v("Handler")])]),t._v(" "),n("p",[t._v("通常 http.FileServer 要与 http.StripPrefix 相结合使用，否则当你运行：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('http.Handle("/upload/images", http.FileServer(http.Dir("upload/images")))\n')])])]),n("p",[t._v("会无法正确的访问到文件目录，因为 "),n("code",[t._v("/upload/images")]),t._v(" 也包含在了 URL 路径中，必须使用：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('http.Handle("/upload/images", http.StripPrefix("upload/images", http.FileServer(http.Dir("upload/images"))))\n')])])]),n("h4",{attrs:{id:"filepath"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#filepath"}},[t._v("#")]),t._v(" /*filepath")]),t._v(" "),n("p",[t._v("到下面可以看到 "),n("code",[t._v('urlPattern := path.Join(relativePath, "/*filepath")')]),t._v("，"),n("code",[t._v("/*filepath")]),t._v(" 你是谁，你在这里有什么用，你是 Gin 的产物吗?")]),t._v(" "),n("p",[t._v("通过语义可得知是路由的处理逻辑，而 Gin 的路由是基于 httprouter 的，通过查阅文档可得到以下信息")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Pattern: /src/*filepath\n\n /src/                     match\n /src/somefile.go          match\n /src/subdir/somefile.go   match\n")])])]),n("p",[n("code",[t._v("*filepath")]),t._v(" 将匹配所有文件路径，并且 "),n("code",[t._v("*filepath")]),t._v(" 必须在 Pattern 的最后")]),t._v(" "),n("h3",{attrs:{id:"验证-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证-3"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),n("p",[t._v("重新执行 "),n("code",[t._v("go run main.go")]),t._v(" ，去访问刚刚在 upload 接口得到的图片地址，检查 http.FileSystem 是否正常")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://i.imgur.com/zlNeiTt.jpg",alt:"image"}})]),t._v(" "),n("h2",{attrs:{id:"修改文章接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改文章接口"}},[t._v("#")]),t._v(" 修改文章接口")]),t._v(" "),n("p",[t._v("接下来，需要你修改 routers/api/v1/article.go 的 AddArticle、EditArticle 两个接口")]),t._v(" "),n("ul",[n("li",[t._v("新增、更新文章接口：支持入参 cover_image_url")]),t._v(" "),n("li",[t._v("新增、更新文章接口：增加对 cover_image_url 的非空、最长长度校验")])]),t._v(" "),n("p",[t._v("这块前面文章讲过，如果有问题可以参考项目的代码👌")]),t._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("在这章节中，我们简单的分析了下需求，对应用做出了一个小规划并实施")]),t._v(" "),n("p",[t._v("完成了清单中的功能点和优化，在实际项目中也是常见的场景，希望你能够细细品尝并针对一些点进行深入学习")]),t._v(" "),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),n("h3",{attrs:{id:"本系列示例代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本系列示例代码"}},[t._v("#")]),t._v(" 本系列示例代码")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-gin-example"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"关于"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关于"}},[t._v("#")]),t._v(" 关于")]),t._v(" "),n("h3",{attrs:{id:"修改记录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改记录"}},[t._v("#")]),t._v(" 修改记录")]),t._v(" "),n("ul",[n("li",[t._v("第一版：2018年02月16日发布文章")]),t._v(" "),n("li",[t._v("第二版：2019年10月02日修改文章")])]),t._v(" "),n("h2",{attrs:{id:"？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#？"}},[t._v("#")]),t._v(" ？")]),t._v(" "),n("p",[t._v("如果有任何疑问或错误，欢迎在 "),n("a",{attrs:{href:"https://github.com/EDDYCJY/blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("issues"),n("OutboundLink")],1),t._v(" 进行提问或给予修正意见，如果喜欢或对你有所帮助，欢迎 Star，对作者是一种鼓励和推进。")]),t._v(" "),n("h3",{attrs:{id:"我的公众号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#我的公众号"}},[t._v("#")]),t._v(" 我的公众号")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://image.eddycjy.com/8d0b0c3a11e74efd5fdfd7910257e70b.jpg",alt:"image"}})])])}),[],!1,null,null,null);e.default=r.exports}}]);