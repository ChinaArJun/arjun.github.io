(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{643:function(t,n,e){"use strict";e.r(n);var s=e(44),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"优化你的应用结构和实现redis缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化你的应用结构和实现redis缓存"}},[t._v("#")]),t._v(" 优化你的应用结构和实现Redis缓存")]),t._v(" "),e("p",[t._v("项目地址：https://github.com/EDDYCJY/go-gin-example")]),t._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("之前就在想，不少教程或示例的代码设计都是一步到位的（也没问题）")]),t._v(" "),e("p",[t._v("但实际操作的读者真的能够理解透彻为什么吗？左思右想，有了今天这一章的内容，我认为实际经历过一遍印象会更加深刻")]),t._v(" "),e("h2",{attrs:{id:"本文目标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本文目标"}},[t._v("#")]),t._v(" 本文目标")]),t._v(" "),e("p",[t._v("在本章节，将介绍以下功能的整理：")]),t._v(" "),e("ul",[e("li",[t._v("抽离、分层业务逻辑：减轻 routers/*.go 内的 api方法的逻辑（但本文暂不分层 repository，这块逻辑还不重）。")]),t._v(" "),e("li",[t._v("增加容错性：对 gorm 的错误进行判断。")]),t._v(" "),e("li",[t._v("Redis缓存：对获取数据类的接口增加缓存设置。")]),t._v(" "),e("li",[t._v("减少重复冗余代码。")])]),t._v(" "),e("h2",{attrs:{id:"问题在哪？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题在哪？"}},[t._v("#")]),t._v(" 问题在哪？")]),t._v(" "),e("p",[t._v("在规划阶段我们发现了一个问题，这是目前的伪代码：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('if ! HasErrors() {\n\tif ExistArticleByID(id) {\n\t\tDeleteArticle(id)\n\t\tcode = e.SUCCESS\n\t} else {\n\t\tcode = e.ERROR_NOT_EXIST_ARTICLE\n\t}\n} else {\n\tfor _, err := range valid.Errors {\n\t\tlogging.Info(err.Key, err.Message)\n\t}\n}\n\nc.JSON(http.StatusOK, gin.H{\n\t"code": code,\n\t"msg":  e.GetMsg(code),\n\t"data": make(map[string]string),\n})\n')])])]),e("p",[t._v("如果加上规划内的功能逻辑呢，伪代码会变成：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('if ! HasErrors() {\n    exists, err := ExistArticleByID(id)\n    if err == nil {\n        if exists {\n    \t\terr = DeleteArticle(id)\n    \t\tif err == nil {\n    \t\t    code = e.SUCCESS\n    \t\t} else {\n    \t\t    code = e.ERROR_XXX\n    \t\t}\n    \t} else {\n    \t\tcode = e.ERROR_NOT_EXIST_ARTICLE\n    \t}\n    } else {\n        code = e.ERROR_XXX\n    }\n} else {\n\tfor _, err := range valid.Errors {\n\t\tlogging.Info(err.Key, err.Message)\n\t}\n}\n\nc.JSON(http.StatusOK, gin.H{\n\t"code": code,\n\t"msg":  e.GetMsg(code),\n\t"data": make(map[string]string),\n})\n')])])]),e("p",[t._v("如果缓存的逻辑也加进来，后面慢慢不断的迭代，岂不是会变成如下图一样？")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://coolshell.cn/wp-content/uploads/2017/04/IMG_7411.jpg",alt:"image"}})]),t._v(" "),e("p",[t._v("现在我们发现了问题，应及时解决这个代码结构问题，同时把代码写的清晰、漂亮、易读易改也是一个重要指标")]),t._v(" "),e("h2",{attrs:{id:"如何改？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何改？"}},[t._v("#")]),t._v(" 如何改？")]),t._v(" "),e("p",[t._v("在左耳朵耗子的文章中，这类代码被称为 “箭头型” 代码，有如下几个问题：")]),t._v(" "),e("p",[t._v("1、我的显示器不够宽，箭头型代码缩进太狠了，需要我来回拉水平滚动条，这让我在读代码的时候，相当的不舒服")]),t._v(" "),e("p",[t._v("2、除了宽度外还有长度，有的代码的 if-else 里的 if-else 里的 if-else 的代码太多，读到中间你都不知道中间的代码是经过了什么样的层层检查才来到这里的")]),t._v(" "),e("p",[t._v("总而言之，“箭头型代码”如果嵌套太多，代码太长的话，会相当容易让维护代码的人（包括自己）迷失在代码中，因为看到最内层的代码时，你已经不知道前面的那一层一层的条件判断是什么样的，代码是怎么运行到这里的，所以，箭头型代码是非常难以维护和Debug的。")]),t._v(" "),e("p",[t._v("简单的来说，就是"),e("strong",[t._v("让出错的代码先返回，前面把所有的错误判断全判断掉，然后就剩下的就是正常的代码了")])]),t._v(" "),e("p",[t._v("（注意：本段引用自耗子哥的 "),e("a",{attrs:{href:"https://coolshell.cn/articles/17757.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何重构“箭头型”代码"),e("OutboundLink")],1),t._v("，建议细细品尝）")]),t._v(" "),e("h2",{attrs:{id:"落实"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#落实"}},[t._v("#")]),t._v(" 落实")]),t._v(" "),e("p",[t._v("本项目将对既有代码进行优化和实现缓存，希望你习得方法并对其他地方也进行优化")]),t._v(" "),e("p",[t._v("第一步：完成 Redis 的基础设施建设（需要你先装好 Redis）")]),t._v(" "),e("p",[t._v("第二步：对现有代码进行拆解、分层（不会贴上具体步骤的代码，希望你能够实操一波，加深理解🤔）")]),t._v(" "),e("h3",{attrs:{id:"redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),e("h4",{attrs:{id:"一、配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、配置"}},[t._v("#")]),t._v(" 一、配置")]),t._v(" "),e("p",[t._v("打开 conf/app.ini 文件，新增配置：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("...\n[redis]\nHost = 127.0.0.1:6379\nPassword =\nMaxIdle = 30\nMaxActive = 30\nIdleTimeout = 200\n")])])]),e("h4",{attrs:{id:"二、缓存-prefix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、缓存-prefix"}},[t._v("#")]),t._v(" 二、缓存 Prefix")]),t._v(" "),e("p",[t._v("打开 pkg/e 目录，新建 cache.go，写入内容：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('package e\n\nconst (\n\tCACHE_ARTICLE = "ARTICLE"\n\tCACHE_TAG     = "TAG"\n)\n')])])]),e("h4",{attrs:{id:"三、缓存-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、缓存-key"}},[t._v("#")]),t._v(" 三、缓存 Key")]),t._v(" "),e("p",[t._v("（1）、打开 service 目录，新建 cache_service/article.go")]),t._v(" "),e("p",[t._v("写入内容："),e("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/master/service/cache_service/article.go",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("（2）、打开 service 目录，新建 cache_service/tag.go")]),t._v(" "),e("p",[t._v("写入内容："),e("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/master/service/cache_service/tag.go",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("这一部分主要是编写获取缓存 KEY 的方法，直接参考传送门即可")]),t._v(" "),e("h4",{attrs:{id:"四、redis-工具包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、redis-工具包"}},[t._v("#")]),t._v(" 四、Redis 工具包")]),t._v(" "),e("p",[t._v("打开 pkg 目录，新建 gredis/redis.go，写入内容：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('package gredis\n\nimport (\n\t"encoding/json"\n\t"time"\n\n\t"github.com/gomodule/redigo/redis"\n\n\t"github.com/EDDYCJY/go-gin-example/pkg/setting"\n)\n\nvar RedisConn *redis.Pool\n\nfunc Setup() error {\n\tRedisConn = &redis.Pool{\n\t\tMaxIdle:     setting.RedisSetting.MaxIdle,\n\t\tMaxActive:   setting.RedisSetting.MaxActive,\n\t\tIdleTimeout: setting.RedisSetting.IdleTimeout,\n\t\tDial: func() (redis.Conn, error) {\n\t\t\tc, err := redis.Dial("tcp", setting.RedisSetting.Host)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n\t\t\tif setting.RedisSetting.Password != "" {\n\t\t\t\tif _, err := c.Do("AUTH", setting.RedisSetting.Password); err != nil {\n\t\t\t\t\tc.Close()\n\t\t\t\t\treturn nil, err\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn c, err\n\t\t},\n\t\tTestOnBorrow: func(c redis.Conn, t time.Time) error {\n\t\t\t_, err := c.Do("PING")\n\t\t\treturn err\n\t\t},\n\t}\n\n\treturn nil\n}\n\nfunc Set(key string, data interface{}, time int) error {\n\tconn := RedisConn.Get()\n\tdefer conn.Close()\n\n\tvalue, err := json.Marshal(data)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t_, err = conn.Do("SET", key, value)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t_, err = conn.Do("EXPIRE", key, time)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\nfunc Exists(key string) bool {\n\tconn := RedisConn.Get()\n\tdefer conn.Close()\n\n\texists, err := redis.Bool(conn.Do("EXISTS", key))\n\tif err != nil {\n\t\treturn false\n\t}\n\n\treturn exists\n}\n\nfunc Get(key string) ([]byte, error) {\n\tconn := RedisConn.Get()\n\tdefer conn.Close()\n\n\treply, err := redis.Bytes(conn.Do("GET", key))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn reply, nil\n}\n\nfunc Delete(key string) (bool, error) {\n\tconn := RedisConn.Get()\n\tdefer conn.Close()\n\n\treturn redis.Bool(conn.Do("DEL", key))\n}\n\nfunc LikeDeletes(key string) error {\n\tconn := RedisConn.Get()\n\tdefer conn.Close()\n\n\tkeys, err := redis.Strings(conn.Do("KEYS", "*"+key+"*"))\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tfor _, key := range keys {\n\t\t_, err = Delete(key)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\treturn nil\n}\n')])])]),e("p",[t._v("在这里我们做了一些基础功能封装")]),t._v(" "),e("p",[t._v("1、设置 RedisConn 为 redis.Pool（连接池）并配置了它的一些参数：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Dial：提供创建和配置应用程序连接的一个函数")])]),t._v(" "),e("li",[e("p",[t._v("TestOnBorrow：可选的应用程序检查健康功能")])]),t._v(" "),e("li",[e("p",[t._v("MaxIdle：最大空闲连接数")])]),t._v(" "),e("li",[e("p",[t._v("MaxActive：在给定时间内，允许分配的最大连接数（当为零时，没有限制）")])]),t._v(" "),e("li",[e("p",[t._v("IdleTimeout：在给定时间内将会保持空闲状态，若到达时间限制则关闭连接（当为零时，没有限制）")])])]),t._v(" "),e("p",[t._v("2、封装基础方法")]),t._v(" "),e("p",[t._v("文件内包含 Set、Exists、Get、Delete、LikeDeletes 用于支撑目前的业务逻辑，而在里面涉及到了如方法：")]),t._v(" "),e("p",[t._v("（1）"),e("code",[t._v("RedisConn.Get()")]),t._v("：在连接池中获取一个活跃连接")]),t._v(" "),e("p",[t._v("（2）"),e("code",[t._v("conn.Do(commandName string, args ...interface{})")]),t._v("：向 Redis 服务器发送命令并返回收到的答复")]),t._v(" "),e("p",[t._v("（3）"),e("code",[t._v("redis.Bool(reply interface{}, err error)")]),t._v("：将命令返回转为布尔值")]),t._v(" "),e("p",[t._v("（4）"),e("code",[t._v("redis.Bytes(reply interface{}, err error)")]),t._v("：将命令返回转为 Bytes")]),t._v(" "),e("p",[t._v("（5）"),e("code",[t._v("redis.Strings(reply interface{}, err error)")]),t._v("：将命令返回转为 []string")]),t._v(" "),e("p",[t._v("在 "),e("a",{attrs:{href:"https://godoc.org/github.com/gomodule/redigo/redis",target:"_blank",rel:"noopener noreferrer"}},[t._v("redigo"),e("OutboundLink")],1),t._v(" 中包含大量类似的方法，万变不离其宗，建议熟悉其使用规则和 "),e("a",{attrs:{href:"http://doc.redisfans.com/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis命令"),e("OutboundLink")],1),t._v(" 即可")]),t._v(" "),e("p",[t._v("到这里为止，Redis 就可以愉快的调用啦。另外受篇幅限制，这块的深入讲解会另外开设！")]),t._v(" "),e("h3",{attrs:{id:"拆解、分层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拆解、分层"}},[t._v("#")]),t._v(" 拆解、分层")]),t._v(" "),e("p",[t._v("在先前规划中，引出几个方法去优化我们的应用结构")]),t._v(" "),e("ul",[e("li",[t._v("错误提前返回")]),t._v(" "),e("li",[t._v("统一返回方法")]),t._v(" "),e("li",[t._v("抽离 Service，减轻 routers/api 的逻辑，进行分层")]),t._v(" "),e("li",[t._v("增加 gorm 错误判断，让错误提示更明确（增加内部错误码）")])]),t._v(" "),e("h4",{attrs:{id:"编写返回方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编写返回方法"}},[t._v("#")]),t._v(" 编写返回方法")]),t._v(" "),e("p",[t._v("要让错误提前返回，c.JSON 的侵入是不可避免的，但是可以让其更具可变性，指不定哪天就变 XML 了呢？")]),t._v(" "),e("p",[t._v("1、打开 pkg 目录，新建 app/request.go，写入文件内容：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('package app\n\nimport (\n\t"github.com/astaxie/beego/validation"\n\n\t"github.com/EDDYCJY/go-gin-example/pkg/logging"\n)\n\nfunc MarkErrors(errors []*validation.Error) {\n\tfor _, err := range errors {\n\t\tlogging.Info(err.Key, err.Message)\n\t}\n\n\treturn\n}\n')])])]),e("p",[t._v("2、打开 pkg 目录，新建 app/response.go，写入文件内容：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('package app\n\nimport (\n\t"github.com/gin-gonic/gin"\n\n\t"github.com/EDDYCJY/go-gin-example/pkg/e"\n)\n\ntype Gin struct {\n\tC *gin.Context\n}\n\nfunc (g *Gin) Response(httpCode, errCode int, data interface{}) {\n\tg.C.JSON(httpCode, gin.H{\n\t\t"code": errCode,\n\t\t"msg":  e.GetMsg(errCode),\n\t\t"data": data,\n\t})\n\n\treturn\n}\n')])])]),e("p",[t._v("这样子以后如果要变动，直接改动 app 包内的方法即可")]),t._v(" "),e("h4",{attrs:{id:"修改既有逻辑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改既有逻辑"}},[t._v("#")]),t._v(" 修改既有逻辑")]),t._v(" "),e("p",[t._v("打开 routers/api/v1/article.go，查看修改 GetArticle 方法后的代码为：")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetArticle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tappG "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Gin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tid "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("StrTo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Param")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("MustInt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tvalid "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" validation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Validation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tvalid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Min")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Message")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ID必须大于0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" valid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("HasErrors")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tapp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("MarkErrors")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Errors"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tappG"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Response")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusOK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INVALID_PARAMS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tarticleService "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" article_service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Article"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\texists"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" articleService"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ExistByID")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tappG"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Response")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusOK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ERROR_CHECK_EXIST_ARTICLE_FAIL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("exists "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tappG"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Response")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusOK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ERROR_NOT_EXIST_ARTICLE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tarticle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" articleService"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tappG"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Response")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusOK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ERROR_GET_ARTICLE_FAIL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tappG"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Response")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusOK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SUCCESS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" article"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("这里有几个值得变动点，主要是在内部增加了错误返回，如果存在错误则直接返回。另外进行了分层，业务逻辑内聚到了 service 层中去，而 routers/api（controller）显著减轻，代码会更加的直观")]),t._v(" "),e("p",[t._v("例如 service/article_service 下的 "),e("code",[t._v("articleService.Get()")]),t._v(" 方法：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("func (a *Article) Get() (*models.Article, error) {\n\tvar cacheArticle *models.Article\n\n\tcache := cache_service.Article{ID: a.ID}\n\tkey := cache.GetArticleKey()\n\tif gredis.Exists(key) {\n\t\tdata, err := gredis.Get(key)\n\t\tif err != nil {\n\t\t\tlogging.Info(err)\n\t\t} else {\n\t\t\tjson.Unmarshal(data, &cacheArticle)\n\t\t\treturn cacheArticle, nil\n\t\t}\n\t}\n\n\tarticle, err := models.GetArticle(a.ID)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tgredis.Set(key, article, 3600)\n\treturn article, nil\n}\n")])])]),e("p",[t._v("而对于 gorm 的 错误返回设置，只需要修改 models/article.go 如下:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('func GetArticle(id int) (*Article, error) {\n\tvar article Article\n\terr := db.Where("id = ? AND deleted_on = ? ", id, 0).First(&article).Related(&article.Tag).Error\n\tif err != nil && err != gorm.ErrRecordNotFound {\n\t\treturn nil, err\n\t}\n\n\treturn &article, nil\n}\n')])])]),e("p",[t._v("习惯性增加 .Error，把控绝大部分的错误。另外需要注意一点，在 gorm 中，查找不到记录也算一种 “错误” 哦")]),t._v(" "),e("h2",{attrs:{id:"最后"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),e("p",[t._v("显然，本章节并不是你跟着我敲系列。我给你的课题是 “实现 Redis 缓存并优化既有的业务逻辑代码”")]),t._v(" "),e("p",[t._v("让其能够不断地适应业务的发展，让代码更清晰易读，且呈层级和结构性")]),t._v(" "),e("p",[t._v("如果有疑惑，可以到 "),e("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-gin-example"),e("OutboundLink")],1),t._v(" 看看我是怎么写的，你是怎么写的，又分别有什么优势、劣势，取长补短一波？")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("h3",{attrs:{id:"本系列示例代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本系列示例代码"}},[t._v("#")]),t._v(" 本系列示例代码")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-gin-example"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"推荐阅读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读"}},[t._v("#")]),t._v(" 推荐阅读")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://coolshell.cn/articles/17757.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何重构“箭头型”代码"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"关于"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于"}},[t._v("#")]),t._v(" 关于")]),t._v(" "),e("h3",{attrs:{id:"修改记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改记录"}},[t._v("#")]),t._v(" 修改记录")]),t._v(" "),e("ul",[e("li",[t._v("第一版：2018年02月16日发布文章")]),t._v(" "),e("li",[t._v("第二版：2019年10月01日修改文章")])]),t._v(" "),e("h2",{attrs:{id:"？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#？"}},[t._v("#")]),t._v(" ？")]),t._v(" "),e("p",[t._v("如果有任何疑问或错误，欢迎在 "),e("a",{attrs:{href:"https://github.com/EDDYCJY/blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("issues"),e("OutboundLink")],1),t._v(" 进行提问或给予修正意见，如果喜欢或对你有所帮助，欢迎 Star，对作者是一种鼓励和推进。")]),t._v(" "),e("h3",{attrs:{id:"我的公众号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#我的公众号"}},[t._v("#")]),t._v(" 我的公众号")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://image.eddycjy.com/8d0b0c3a11e74efd5fdfd7910257e70b.jpg",alt:"image"}})])])}),[],!1,null,null,null);n.default=a.exports}}]);