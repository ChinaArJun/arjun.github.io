(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{644:function(t,e,a){"use strict";a.r(e);var r=a(44),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"实现导出、导入-excel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现导出、导入-excel"}},[t._v("#")]),t._v(" 实现导出、导入 Excel")]),t._v(" "),a("p",[t._v("项目地址：https://github.com/EDDYCJY/go-gin-example")]),t._v(" "),a("h2",{attrs:{id:"知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),a("ul",[a("li",[t._v("导出功能的实现")])]),t._v(" "),a("h2",{attrs:{id:"本文目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本文目标"}},[t._v("#")]),t._v(" 本文目标")]),t._v(" "),a("p",[t._v("在本节，我们将实现对标签信息的导出、导入功能，这是很标配功能了，希望你掌握基础的使用方式。")]),t._v(" "),a("p",[t._v("另外在本文我们使用了 2 个 Excel 的包，excelize 最初的 XML 格式文件的一些结构，是通过 tealeg/xlsx 格式文件结构演化而来的，因此特意在此都展示了，你可以根据自己的场景和喜爱去使用。")]),t._v(" "),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("p",[t._v("首先要指定导出的 Excel 文件的存储路径，在 app.ini 中增加配置：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[app]\n...\n\nExportSavePath = export/\n")])])]),a("p",[t._v("修改 setting.go 的 App struct：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" App "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tJwtSecret       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tPageSize        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\tPrefixUrl "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\n\tRuntimeRootPath "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\n\tImageSavePath  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tImageMaxSize   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\tImageAllowExts "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\n\tExportSavePath "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\n\tLogSavePath "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tLogSaveName "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tLogFileExt  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tTimeFormat  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在这里需增加 ExportSavePath 配置项，另外将先前 ImagePrefixUrl 改为 PrefixUrl 用于支撑两者的 HOST 获取")]),t._v(" "),a("p",[t._v("（注意修改 image.go 的 GetImageFullUrl 方法）")]),t._v(" "),a("h2",{attrs:{id:"pkg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pkg"}},[t._v("#")]),t._v(" pkg")]),t._v(" "),a("p",[t._v("新建 pkg/export/excel.go 文件，如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('package export\n\nimport "github.com/EDDYCJY/go-gin-example/pkg/setting"\n\nfunc GetExcelFullUrl(name string) string {\n\treturn setting.AppSetting.PrefixUrl + "/" + GetExcelPath() + name\n}\n\nfunc GetExcelPath() string {\n\treturn setting.AppSetting.ExportSavePath\n}\n\nfunc GetExcelFullPath() string {\n\treturn setting.AppSetting.RuntimeRootPath + GetExcelPath()\n}\n')])])]),a("p",[t._v("这里编写了一些常用的方法，以后取值方式如果有变动，直接改内部代码即可，对外不可见")]),t._v(" "),a("h2",{attrs:{id:"尝试一下标准库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#尝试一下标准库"}},[t._v("#")]),t._v(" 尝试一下标准库")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('f, err := os.Create(export.GetExcelFullPath() + "test.csv")\nif err != nil {\n\tpanic(err)\n}\ndefer f.Close()\n\nf.WriteString("\\xEF\\xBB\\xBF")\n\nw := csv.NewWriter(f)\ndata := [][]string{\n\t{"1", "test1", "test1-1"},\n\t{"2", "test2", "test2-1"},\n\t{"3", "test3", "test3-1"},\n}\n\nw.WriteAll(data)\n')])])]),a("p",[t._v("在 Go 提供的标准库 encoding/csv 中，天然的支持 csv 文件的读取和处理，在本段代码中，做了如下工作：")]),t._v(" "),a("p",[t._v("1、os.Create：")]),t._v(" "),a("p",[t._v("创建了一个 test.csv 文件")]),t._v(" "),a("p",[t._v('2、f.WriteString("\\xEF\\xBB\\xBF")：')]),t._v(" "),a("p",[a("code",[t._v("\\xEF\\xBB\\xBF")]),t._v(" 是 UTF-8 BOM 的 16 进制格式，在这里的用处是标识文件的编码格式，通常会出现在文件的开头，因此第一步就要将其写入。如果不标识 UTF-8 的编码格式的话，写入的汉字会显示为乱码")]),t._v(" "),a("p",[t._v("3、csv.NewWriter：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("func NewWriter(w io.Writer) *Writer {\n\treturn &Writer{\n\t\tComma: ',',\n\t\tw:     bufio.NewWriter(w),\n\t}\n}\n")])])]),a("p",[t._v("4、w.WriteAll：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("func (w *Writer) WriteAll(records [][]string) error {\n\tfor _, record := range records {\n\t\terr := w.Write(record)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn w.w.Flush()\n}\n")])])]),a("p",[t._v("WriteAll 实际是对 Write 的封装，需要注意在最后调用了 "),a("code",[t._v("w.w.Flush()")]),t._v("，这充分了说明了 WriteAll 的使用场景，你可以想想作者的设计用意")]),t._v(" "),a("h2",{attrs:{id:"导出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出"}},[t._v("#")]),t._v(" 导出")]),t._v(" "),a("h3",{attrs:{id:"service-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-方法"}},[t._v("#")]),t._v(" Service 方法")]),t._v(" "),a("p",[t._v("打开 service/tag.go，增加 Export 方法，如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('func (t *Tag) Export() (string, error) {\n\ttags, err := t.GetAll()\n\tif err != nil {\n\t\treturn "", err\n\t}\n\n\tfile := xlsx.NewFile()\n\tsheet, err := file.AddSheet("标签信息")\n\tif err != nil {\n\t\treturn "", err\n\t}\n\n\ttitles := []string{"ID", "名称", "创建人", "创建时间", "修改人", "修改时间"}\n\trow := sheet.AddRow()\n\n\tvar cell *xlsx.Cell\n\tfor _, title := range titles {\n\t\tcell = row.AddCell()\n\t\tcell.Value = title\n\t}\n\n\tfor _, v := range tags {\n\t\tvalues := []string{\n\t\t\tstrconv.Itoa(v.ID),\n\t\t\tv.Name,\n\t\t\tv.CreatedBy,\n\t\t\tstrconv.Itoa(v.CreatedOn),\n\t\t\tv.ModifiedBy,\n\t\t\tstrconv.Itoa(v.ModifiedOn),\n\t\t}\n\n\t\trow = sheet.AddRow()\n\t\tfor _, value := range values {\n\t\t\tcell = row.AddCell()\n\t\t\tcell.Value = value\n\t\t}\n\t}\n\n\ttime := strconv.Itoa(int(time.Now().Unix()))\n\tfilename := "tags-" + time + ".xlsx"\n\n\tfullPath := export.GetExcelFullPath() + filename\n\terr = file.Save(fullPath)\n\tif err != nil {\n\t\treturn "", err\n\t}\n\n\treturn filename, nil\n}\n')])])]),a("h2",{attrs:{id:"routers-入口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#routers-入口"}},[t._v("#")]),t._v(" routers 入口")]),t._v(" "),a("p",[t._v("打开 routers/api/v1/tag.go，增加如下方法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('func ExportTag(c *gin.Context) {\n\tappG := app.Gin{C: c}\n\tname := c.PostForm("name")\n\tstate := -1\n\tif arg := c.PostForm("state"); arg != "" {\n\t\tstate = com.StrTo(arg).MustInt()\n\t}\n\n\ttagService := tag_service.Tag{\n\t\tName:  name,\n\t\tState: state,\n\t}\n\n\tfilename, err := tagService.Export()\n\tif err != nil {\n\t\tappG.Response(http.StatusOK, e.ERROR_EXPORT_TAG_FAIL, nil)\n\t\treturn\n\t}\n\n\tappG.Response(http.StatusOK, e.SUCCESS, map[string]string{\n\t\t"export_url":      export.GetExcelFullUrl(filename),\n\t\t"export_save_url": export.GetExcelPath() + filename,\n\t})\n}\n')])])]),a("h3",{attrs:{id:"路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[t._v("#")]),t._v(" 路由")]),t._v(" "),a("p",[t._v("在 routers/router.go 文件中增加路由方法，如下")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('apiv1 := r.Group("/api/v1")\napiv1.Use(jwt.JWT())\n{\n\t...\n\t//导出标签\n\tr.POST("/tags/export", v1.ExportTag)\n}\n')])])]),a("h3",{attrs:{id:"验证接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证接口"}},[t._v("#")]),t._v(" 验证接口")]),t._v(" "),a("p",[t._v("访问 "),a("code",[t._v("http://127.0.0.1:8000/tags/export")]),t._v("，结果如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n    "code": 200,\n    "data": {\n        "export_save_url": "export/tags-1528903393.xlsx",\n        "export_url": "http://127.0.0.1:8000/export/tags-1528903393.xlsx"\n    },\n    "msg": "ok"\n}\n')])])]),a("p",[t._v("最终通过接口返回了导出文件的地址和保存地址")]),t._v(" "),a("h3",{attrs:{id:"staticfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#staticfs"}},[t._v("#")]),t._v(" StaticFS")]),t._v(" "),a("p",[t._v("那你想想，现在直接访问地址肯定是无法下载文件的，那么该如何做呢？")]),t._v(" "),a("p",[t._v("打开 router.go 文件，增加代码如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('r.StaticFS("/export", http.Dir(export.GetExcelFullPath()))\n')])])]),a("p",[t._v("若你不理解，强烈建议温习下前面的章节，举一反三")]),t._v(" "),a("h2",{attrs:{id:"验证下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证下载"}},[t._v("#")]),t._v(" 验证下载")]),t._v(" "),a("p",[t._v("再次访问上面的 export_url ，如："),a("code",[t._v("http://127.0.0.1:8000/export/tags-1528903393.xlsx")]),t._v("，是不是成功了呢？")]),t._v(" "),a("h2",{attrs:{id:"导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入"}},[t._v("#")]),t._v(" 导入")]),t._v(" "),a("h3",{attrs:{id:"service-方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-方法-2"}},[t._v("#")]),t._v(" Service 方法")]),t._v(" "),a("p",[t._v("打开 service/tag.go，增加 Import 方法，如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('func (t *Tag) Import(r io.Reader) error {\n\txlsx, err := excelize.OpenReader(r)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\trows := xlsx.GetRows("标签信息")\n\tfor irow, row := range rows {\n\t\tif irow > 0 {\n\t\t\tvar data []string\n\t\t\tfor _, cell := range row {\n\t\t\t\tdata = append(data, cell)\n\t\t\t}\n\n\t\t\tmodels.AddTag(data[1], 1, data[2])\n\t\t}\n\t}\n\n\treturn nil\n}\n')])])]),a("h2",{attrs:{id:"routers-入口-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#routers-入口-2"}},[t._v("#")]),t._v(" routers 入口")]),t._v(" "),a("p",[t._v("打开 routers/api/v1/tag.go，增加如下方法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('func ImportTag(c *gin.Context) {\n\tappG := app.Gin{C: c}\n\n\tfile, _, err := c.Request.FormFile("file")\n\tif err != nil {\n\t\tlogging.Warn(err)\n\t\tappG.Response(http.StatusOK, e.ERROR, nil)\n\t\treturn\n\t}\n\n\ttagService := tag_service.Tag{}\n\terr = tagService.Import(file)\n\tif err != nil {\n\t\tlogging.Warn(err)\n\t\tappG.Response(http.StatusOK, e.ERROR_IMPORT_TAG_FAIL, nil)\n\t\treturn\n\t}\n\n\tappG.Response(http.StatusOK, e.SUCCESS, nil)\n}\n')])])]),a("h3",{attrs:{id:"路由-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由-2"}},[t._v("#")]),t._v(" 路由")]),t._v(" "),a("p",[t._v("在 routers/router.go 文件中增加路由方法，如下")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('apiv1 := r.Group("/api/v1")\napiv1.Use(jwt.JWT())\n{\n\t...\n\t//导入标签\n\tr.POST("/tags/import", v1.ImportTag)\n}\n')])])]),a("h3",{attrs:{id:"验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/awRs9HA.jpg",alt:"image"}})]),t._v(" "),a("p",[t._v("在这里我们将先前导出的 Excel 文件作为入参，访问 "),a("code",[t._v("http://127.0.0.01:8000/tags/import")]),t._v("，检查返回和数据是否正确入库")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("在本文中，简单介绍了 Excel 的导入、导出的使用方式，使用了以下 2 个包：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tealeg/xlsx",target:"_blank",rel:"noopener noreferrer"}},[t._v("tealeg/xlsx"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/360EntSecGroup-Skylar/excelize",target:"_blank",rel:"noopener noreferrer"}},[t._v("360EntSecGroup-Skylar/excelize"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("你可以细细阅读一下它的实现和使用方式，对你的把控更有帮助 🤔")]),t._v(" "),a("h2",{attrs:{id:"课外"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课外"}},[t._v("#")]),t._v(" 课外")]),t._v(" "),a("ul",[a("li",[t._v("tag：导出使用 excelize 的方式去实现（可能你会发现更简单哦）")]),t._v(" "),a("li",[t._v("tag：导入去重功能实现")]),t._v(" "),a("li",[t._v("artice ：导入、导出功能实现")])]),t._v(" "),a("p",[t._v("也不失为你很好的练手机会，如果有兴趣，可以试试")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("h3",{attrs:{id:"本系列示例代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本系列示例代码"}},[t._v("#")]),t._v(" 本系列示例代码")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-gin-example"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"关于"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于"}},[t._v("#")]),t._v(" 关于")]),t._v(" "),a("h3",{attrs:{id:"修改记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改记录"}},[t._v("#")]),t._v(" 修改记录")]),t._v(" "),a("ul",[a("li",[t._v("第一版：2018年02月16日发布文章")]),t._v(" "),a("li",[t._v("第二版：2019年10月02日修改文章")])]),t._v(" "),a("h2",{attrs:{id:"？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#？"}},[t._v("#")]),t._v(" ？")]),t._v(" "),a("p",[t._v("如果有任何疑问或错误，欢迎在 "),a("a",{attrs:{href:"https://github.com/EDDYCJY/blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("issues"),a("OutboundLink")],1),t._v(" 进行提问或给予修正意见，如果喜欢或对你有所帮助，欢迎 Star，对作者是一种鼓励和推进。")]),t._v(" "),a("h3",{attrs:{id:"我的公众号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的公众号"}},[t._v("#")]),t._v(" 我的公众号")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.eddycjy.com/8d0b0c3a11e74efd5fdfd7910257e70b.jpg",alt:"image"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);