(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{645:function(t,e,r){"use strict";r.r(e);var n=r(44),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"生成二维码、合并海报"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#生成二维码、合并海报"}},[t._v("#")]),t._v(" 生成二维码、合并海报")]),t._v(" "),r("p",[t._v("项目地址：https://github.com/EDDYCJY/go-gin-example")]),t._v(" "),r("h2",{attrs:{id:"知识点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),r("ul",[r("li",[t._v("图片生成")]),t._v(" "),r("li",[t._v("二维码生成")])]),t._v(" "),r("h2",{attrs:{id:"本文目标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#本文目标"}},[t._v("#")]),t._v(" 本文目标")]),t._v(" "),r("p",[t._v("在文章的详情页中，我们常常会需要去宣传它，而目前最常见的就是发海报了，今天我们将实现如下功能：")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("生成二维码")])]),t._v(" "),r("li",[r("p",[t._v("合并海报（背景图 + 二维码）")])])]),t._v(" "),r("h2",{attrs:{id:"实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),r("p",[t._v("首先，你需要在 App 配置项中增加二维码及其海报的存储路径，我们约定配置项名称为 "),r("code",[t._v("QrCodeSavePath")]),t._v("，值为 "),r("code",[t._v("qrcode/")]),t._v("，经过多节连载的你应该能够完成，若有不懂可参照 "),r("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/master/conf/app.ini#L14",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-gin-example"),r("OutboundLink")],1),t._v("。")]),t._v(" "),r("h2",{attrs:{id:"生成二维码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#生成二维码"}},[t._v("#")]),t._v(" 生成二维码")]),t._v(" "),r("h3",{attrs:{id:"安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("$ go get -u github.com/boombuler/barcode\n")])])]),r("h3",{attrs:{id:"工具包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#工具包"}},[t._v("#")]),t._v(" 工具包")]),t._v(" "),r("p",[t._v("考虑生成二维码这一动作贴合工具包的定义，且有公用的可能性，新建  pkg/qrcode/qrcode.go 文件，写入内容：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('package qrcode\n\nimport (\n\t"image/jpeg"\n\n\t"github.com/boombuler/barcode"\n\t"github.com/boombuler/barcode/qr"\n\n\t"github.com/EDDYCJY/go-gin-example/pkg/file"\n\t"github.com/EDDYCJY/go-gin-example/pkg/setting"\n\t"github.com/EDDYCJY/go-gin-example/pkg/util"\n)\n\ntype QrCode struct {\n\tURL    string\n\tWidth  int\n\tHeight int\n\tExt    string\n\tLevel  qr.ErrorCorrectionLevel\n\tMode   qr.Encoding\n}\n\nconst (\n\tEXT_JPG = ".jpg"\n)\n\nfunc NewQrCode(url string, width, height int, level qr.ErrorCorrectionLevel, mode qr.Encoding) *QrCode {\n\treturn &QrCode{\n\t\tURL:    url,\n\t\tWidth:  width,\n\t\tHeight: height,\n\t\tLevel:  level,\n\t\tMode:   mode,\n\t\tExt:    EXT_JPG,\n\t}\n}\n\nfunc GetQrCodePath() string {\n\treturn setting.AppSetting.QrCodeSavePath\n}\n\nfunc GetQrCodeFullPath() string {\n\treturn setting.AppSetting.RuntimeRootPath + setting.AppSetting.QrCodeSavePath\n}\n\nfunc GetQrCodeFullUrl(name string) string {\n\treturn setting.AppSetting.PrefixUrl + "/" + GetQrCodePath() + name\n}\n\nfunc GetQrCodeFileName(value string) string {\n\treturn util.EncodeMD5(value)\n}\n\nfunc (q *QrCode) GetQrCodeExt() string {\n\treturn q.Ext\n}\n\nfunc (q *QrCode) CheckEncode(path string) bool {\n\tsrc := path + GetQrCodeFileName(q.URL) + q.GetQrCodeExt()\n\tif file.CheckNotExist(src) == true {\n\t\treturn false\n\t}\n\n\treturn true\n}\n\nfunc (q *QrCode) Encode(path string) (string, string, error) {\n\tname := GetQrCodeFileName(q.URL) + q.GetQrCodeExt()\n\tsrc := path + name\n\tif file.CheckNotExist(src) == true {\n\t\tcode, err := qr.Encode(q.URL, q.Level, q.Mode)\n\t\tif err != nil {\n\t\t\treturn "", "", err\n\t\t}\n\n\t\tcode, err = barcode.Scale(code, q.Width, q.Height)\n\t\tif err != nil {\n\t\t\treturn "", "", err\n\t\t}\n\n\t\tf, err := file.MustOpen(name, path)\n\t\tif err != nil {\n\t\t\treturn "", "", err\n\t\t}\n\t\tdefer f.Close()\n\n\t\terr = jpeg.Encode(f, code, nil)\n\t\tif err != nil {\n\t\t\treturn "", "", err\n\t\t}\n\t}\n\n\treturn name, path, nil\n}\n')])])]),r("p",[t._v("这里主要聚焦 "),r("code",[t._v("func (q *QrCode) Encode")]),t._v(" 方法，做了如下事情：")]),t._v(" "),r("ul",[r("li",[t._v("获取二维码生成路径")]),t._v(" "),r("li",[t._v("创建二维码")]),t._v(" "),r("li",[t._v("缩放二维码到指定大小")]),t._v(" "),r("li",[t._v("新建存放二维码图片的文件")]),t._v(" "),r("li",[t._v("将图像（二维码）以 JPEG 4：2：0 基线格式写入文件")])]),t._v(" "),r("p",[t._v("另外在 "),r("code",[t._v("jpeg.Encode(f, code, nil)")]),t._v(" 中，第三个参数可设置其图像质量，默认值为 75")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("// DefaultQuality is the default quality encoding parameter.\nconst DefaultQuality = 75\n\n// Options are the encoding parameters.\n// Quality ranges from 1 to 100 inclusive, higher is better.\ntype Options struct {\n\tQuality int\n}\n")])])]),r("h3",{attrs:{id:"路由方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#路由方法"}},[t._v("#")]),t._v(" 路由方法")]),t._v(" "),r("p",[t._v("1、第一步")]),t._v(" "),r("p",[t._v("在 routers/api/v1/article.go 新增 GenerateArticlePoster 方法用于接口开发")]),t._v(" "),r("p",[t._v("2、第二步")]),t._v(" "),r("p",[t._v("在 routers/router.go 的 apiv1 中新增 "),r("code",[t._v('apiv1.POST("/articles/poster/generate", v1.GenerateArticlePoster)')]),t._v(" 路由")]),t._v(" "),r("p",[t._v("3、第三步")]),t._v(" "),r("p",[t._v("修改 GenerateArticlePoster 方法，编写对应的生成逻辑，如下：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('const (\n\tQRCODE_URL = "https://github.com/EDDYCJY/blog#gin%E7%B3%BB%E5%88%97%E7%9B%AE%E5%BD%95"\n)\n\nfunc GenerateArticlePoster(c *gin.Context) {\n\tappG := app.Gin{c}\n\tqrc := qrcode.NewQrCode(QRCODE_URL, 300, 300, qr.M, qr.Auto)\n\tpath := qrcode.GetQrCodeFullPath()\n\t_, _, err := qrc.Encode(path)\n\tif err != nil {\n\t\tappG.Response(http.StatusOK, e.ERROR, nil)\n\t\treturn\n\t}\n\n\tappG.Response(http.StatusOK, e.SUCCESS, nil)\n}\n')])])]),r("h3",{attrs:{id:"验证"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),r("p",[t._v("通过 POST 方法访问  "),r("code",[t._v("http://127.0.0.1:8000/api/v1/articles/poster/generate?token=$token")]),t._v("（注意 $token）")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://i.imgur.com/a6Ju16L.jpg",alt:"image"}})]),t._v(" "),r("p",[t._v("通过检查两个点确定功能是否正常，如下：")]),t._v(" "),r("p",[t._v("1、访问结果是否 200")]),t._v(" "),r("p",[t._v("2、本地目录是否成功生成二维码图片")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://i.imgur.com/FdVf4z4.jpg",alt:"image"}})]),t._v(" "),r("h2",{attrs:{id:"合并海报"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#合并海报"}},[t._v("#")]),t._v(" 合并海报")]),t._v(" "),r("p",[t._v("在这一节，将实现二维码图片与背景图合并成新的一张图，可用于常见的宣传海报等业务场景")]),t._v(" "),r("h3",{attrs:{id:"背景图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#背景图"}},[t._v("#")]),t._v(" 背景图")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://i.imgur.com/Zm13Wgv.jpg",alt:"image"}})]),t._v(" "),r("p",[t._v("将背景图另存为 runtime/qrcode/bg.jpg（实际应用，可存在 OSS 或其他地方）")]),t._v(" "),r("h3",{attrs:{id:"service-方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#service-方法"}},[t._v("#")]),t._v(" service 方法")]),t._v(" "),r("p",[t._v("打开 service/article_service 目录，新建 article_poster.go 文件，写入内容：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('package article_service\n\nimport (\n\t"image"\n\t"image/draw"\n\t"image/jpeg"\n\t"os"\n\n\t"github.com/EDDYCJY/go-gin-example/pkg/file"\n\t"github.com/EDDYCJY/go-gin-example/pkg/qrcode"\n)\n\ntype ArticlePoster struct {\n\tPosterName string\n\t*Article\n\tQr *qrcode.QrCode\n}\n\nfunc NewArticlePoster(posterName string, article *Article, qr *qrcode.QrCode) *ArticlePoster {\n\treturn &ArticlePoster{\n\t\tPosterName: posterName,\n\t\tArticle:    article,\n\t\tQr:         qr,\n\t}\n}\n\nfunc GetPosterFlag() string {\n\treturn "poster"\n}\n\nfunc (a *ArticlePoster) CheckMergedImage(path string) bool {\n\tif file.CheckNotExist(path+a.PosterName) == true {\n\t\treturn false\n\t}\n\n\treturn true\n}\n\nfunc (a *ArticlePoster) OpenMergedImage(path string) (*os.File, error) {\n\tf, err := file.MustOpen(a.PosterName, path)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn f, nil\n}\n\ntype ArticlePosterBg struct {\n\tName string\n\t*ArticlePoster\n\t*Rect\n\t*Pt\n}\n\ntype Rect struct {\n\tName string\n\tX0   int\n\tY0   int\n\tX1   int\n\tY1   int\n}\n\ntype Pt struct {\n\tX int\n\tY int\n}\n\nfunc NewArticlePosterBg(name string, ap *ArticlePoster, rect *Rect, pt *Pt) *ArticlePosterBg {\n\treturn &ArticlePosterBg{\n\t\tName:          name,\n\t\tArticlePoster: ap,\n\t\tRect:          rect,\n\t\tPt:            pt,\n\t}\n}\n\nfunc (a *ArticlePosterBg) Generate() (string, string, error) {\n\tfullPath := qrcode.GetQrCodeFullPath()\n\tfileName, path, err := a.Qr.Encode(fullPath)\n\tif err != nil {\n\t\treturn "", "", err\n\t}\n\n\tif !a.CheckMergedImage(path) {\n\t\tmergedF, err := a.OpenMergedImage(path)\n\t\tif err != nil {\n\t\t\treturn "", "", err\n\t\t}\n\t\tdefer mergedF.Close()\n\n\t\tbgF, err := file.MustOpen(a.Name, path)\n\t\tif err != nil {\n\t\t\treturn "", "", err\n\t\t}\n\t\tdefer bgF.Close()\n\n\t\tqrF, err := file.MustOpen(fileName, path)\n\t\tif err != nil {\n\t\t\treturn "", "", err\n\t\t}\n\t\tdefer qrF.Close()\n\n\t\tbgImage, err := jpeg.Decode(bgF)\n\t\tif err != nil {\n\t\t\treturn "", "", err\n\t\t}\n\t\tqrImage, err := jpeg.Decode(qrF)\n\t\tif err != nil {\n\t\t\treturn "", "", err\n\t\t}\n\n\t\tjpg := image.NewRGBA(image.Rect(a.Rect.X0, a.Rect.Y0, a.Rect.X1, a.Rect.Y1))\n\n\t\tdraw.Draw(jpg, jpg.Bounds(), bgImage, bgImage.Bounds().Min, draw.Over)\n\t\tdraw.Draw(jpg, jpg.Bounds(), qrImage, qrImage.Bounds().Min.Sub(image.Pt(a.Pt.X, a.Pt.Y)), draw.Over)\n\n\t\tjpeg.Encode(mergedF, jpg, nil)\n\t}\n\n\treturn fileName, path, nil\n}\n')])])]),r("p",[t._v("这里重点留意 "),r("code",[t._v("func (a *ArticlePosterBg) Generate()")]),t._v(" 方法，做了如下事情：")]),t._v(" "),r("ul",[r("li",[t._v("获取二维码存储路径")]),t._v(" "),r("li",[t._v("生成二维码图像")]),t._v(" "),r("li",[t._v("检查合并后图像（指的是存放合并后的海报）是否存在")]),t._v(" "),r("li",[t._v("若不存在，则生成待合并的图像 mergedF")]),t._v(" "),r("li",[t._v("打开事先存放的背景图 bgF")]),t._v(" "),r("li",[t._v("打开生成的二维码图像 qrF")]),t._v(" "),r("li",[t._v("解码 bgF 和 qrF 返回 image.Image")]),t._v(" "),r("li",[t._v("创建一个新的 RGBA 图像")]),t._v(" "),r("li",[t._v("在 RGBA 图像上绘制 背景图（bgF）")]),t._v(" "),r("li",[t._v("在已绘制背景图的 RGBA 图像上，在指定 Point 上绘制二维码图像（qrF）")]),t._v(" "),r("li",[t._v("将绘制好的 RGBA 图像以 JPEG 4：2：0 基线格式写入合并后的图像文件（mergedF）")])]),t._v(" "),r("h3",{attrs:{id:"错误码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#错误码"}},[t._v("#")]),t._v(" 错误码")]),t._v(" "),r("p",[t._v("新增 "),r("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/master/pkg/e/code.go#L27",target:"_blank",rel:"noopener noreferrer"}},[t._v("错误码"),r("OutboundLink")],1),t._v("，"),r("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/master/pkg/e/msg.go#L25",target:"_blank",rel:"noopener noreferrer"}},[t._v("错误提示"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"路由方法-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#路由方法-2"}},[t._v("#")]),t._v(" 路由方法")]),t._v(" "),r("p",[t._v("打开 routers/api/v1/article.go 文件，修改 GenerateArticlePoster 方法，编写最终的业务逻辑（含生成二维码及合并海报），如下：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('const (\n\tQRCODE_URL = "https://github.com/EDDYCJY/blog#gin%E7%B3%BB%E5%88%97%E7%9B%AE%E5%BD%95"\n)\n\nfunc GenerateArticlePoster(c *gin.Context) {\n\tappG := app.Gin{c}\n\tarticle := &article_service.Article{}\n\tqr := qrcode.NewQrCode(QRCODE_URL, 300, 300, qr.M, qr.Auto) // 目前写死 gin 系列路径，可自行增加业务逻辑\n\tposterName := article_service.GetPosterFlag() + "-" + qrcode.GetQrCodeFileName(qr.URL) + qr.GetQrCodeExt()\n\tarticlePoster := article_service.NewArticlePoster(posterName, article, qr)\n\tarticlePosterBgService := article_service.NewArticlePosterBg(\n\t\t"bg.jpg",\n\t\tarticlePoster,\n\t\t&article_service.Rect{\n\t\t\tX0: 0,\n\t\t\tY0: 0,\n\t\t\tX1: 550,\n\t\t\tY1: 700,\n\t\t},\n\t\t&article_service.Pt{\n\t\t\tX: 125,\n\t\t\tY: 298,\n\t\t},\n\t)\n\n\t_, filePath, err := articlePosterBgService.Generate()\n\tif err != nil {\n\t\tappG.Response(http.StatusOK, e.ERROR_GEN_ARTICLE_POSTER_FAIL, nil)\n\t\treturn\n\t}\n\n\tappG.Response(http.StatusOK, e.SUCCESS, map[string]string{\n\t\t"poster_url":      qrcode.GetQrCodeFullUrl(posterName),\n\t\t"poster_save_url": filePath + posterName,\n\t})\n}\n')])])]),r("p",[t._v("这块涉及到大量知识，强烈建议阅读下，如下：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://golang.org/pkg/image/#Rect",target:"_blank",rel:"noopener noreferrer"}},[t._v("image.Rect"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://golang.org/pkg/image/#Pt",target:"_blank",rel:"noopener noreferrer"}},[t._v("image.Pt"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://golang.org/pkg/image/#NewRGBA",target:"_blank",rel:"noopener noreferrer"}},[t._v("image.NewRGBA"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://golang.org/pkg/image/jpeg/#Encode",target:"_blank",rel:"noopener noreferrer"}},[t._v("jpeg.Encode"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://golang.org/pkg/image/jpeg/#Decode",target:"_blank",rel:"noopener noreferrer"}},[t._v("jpeg.Decode"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://golang.org/pkg/image/draw/#Op",target:"_blank",rel:"noopener noreferrer"}},[t._v("draw.Op"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://golang.org/pkg/image/draw/#Draw",target:"_blank",rel:"noopener noreferrer"}},[t._v("draw.Draw"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.golang.org/go-imagedraw-package",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-imagedraw-package"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("其所涉及、关联的库都建议研究一下")]),t._v(" "),r("h3",{attrs:{id:"staticfs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#staticfs"}},[t._v("#")]),t._v(" StaticFS")]),t._v(" "),r("p",[t._v("在 routers/router.go 文件，增加如下代码:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('r.StaticFS("/qrcode", http.Dir(qrcode.GetQrCodeFullPath()))\n')])])]),r("h3",{attrs:{id:"验证-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#验证-2"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://i.imgur.com/kR1sqR6.jpg",alt:"image"}})]),t._v(" "),r("p",[t._v("访问完整的 URL 路径，返回合成后的海报并扫除二维码成功则正确 🤓")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://i.imgur.com/0Mhmr44.jpg",alt:"image"}})]),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("p",[t._v("在本章节实现了两个很常见的业务功能，分别是生成二维码和合并海报。希望你能够仔细阅读我给出的链接，这块的知识量不少，想要用好图像处理的功能，必须理解对应的思路，举一反三")]),t._v(" "),r("p",[t._v("最后希望对你有所帮助  👌")]),t._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),r("h3",{attrs:{id:"本系列示例代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#本系列示例代码"}},[t._v("#")]),t._v(" 本系列示例代码")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-gin-example"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"关于"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于"}},[t._v("#")]),t._v(" 关于")]),t._v(" "),r("h3",{attrs:{id:"修改记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#修改记录"}},[t._v("#")]),t._v(" 修改记录")]),t._v(" "),r("ul",[r("li",[t._v("第一版：2018年02月16日发布文章")]),t._v(" "),r("li",[t._v("第二版：2019年10月02日修改文章")])]),t._v(" "),r("h2",{attrs:{id:"？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#？"}},[t._v("#")]),t._v(" ？")]),t._v(" "),r("p",[t._v("如果有任何疑问或错误，欢迎在 "),r("a",{attrs:{href:"https://github.com/EDDYCJY/blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("issues"),r("OutboundLink")],1),t._v(" 进行提问或给予修正意见，如果喜欢或对你有所帮助，欢迎 Star，对作者是一种鼓励和推进。")]),t._v(" "),r("h3",{attrs:{id:"我的公众号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#我的公众号"}},[t._v("#")]),t._v(" 我的公众号")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://image.eddycjy.com/8d0b0c3a11e74efd5fdfd7910257e70b.jpg",alt:"image"}})])])}),[],!1,null,null,null);e.default=a.exports}}]);