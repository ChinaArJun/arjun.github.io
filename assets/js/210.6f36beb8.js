(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{646:function(t,e,r){"use strict";r.r(e);var a=r(44),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"在图片上绘制文字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在图片上绘制文字"}},[t._v("#")]),t._v(" 在图片上绘制文字")]),t._v(" "),r("p",[t._v("项目地址：https://github.com/EDDYCJY/go-gin-example")]),t._v(" "),r("h2",{attrs:{id:"知识点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),r("ul",[r("li",[t._v("字体库使用")]),t._v(" "),r("li",[t._v("图片合成")])]),t._v(" "),r("h2",{attrs:{id:"本文目标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#本文目标"}},[t._v("#")]),t._v(" 本文目标")]),t._v(" "),r("p",[t._v("主要实现"),r("strong",[t._v("合并后的海报上绘制文字")]),t._v("的功能（这个需求也是常见的很了），内容比较简单。")]),t._v(" "),r("h2",{attrs:{id:"实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),r("p",[t._v("这里使用的是 "),r("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example/blob/master/runtime/fonts/msyhbd.ttc",target:"_blank",rel:"noopener noreferrer"}},[t._v("微软雅黑"),r("OutboundLink")],1),t._v(" 的字体，请点击进行下载并"),r("strong",[t._v("存放到 runtime/fonts 目录")]),t._v("下（字体文件占 16 MB 大小）")]),t._v(" "),r("h3",{attrs:{id:"安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("$ go get -u github.com/golang/freetype\n")])])]),r("h3",{attrs:{id:"绘制文字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#绘制文字"}},[t._v("#")]),t._v(" 绘制文字")]),t._v(" "),r("p",[t._v("打开 service/article_service/article_poster.go 文件，增加绘制文字的业务逻辑，如下：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("type DrawText struct {\n\tJPG    draw.Image\n\tMerged *os.File\n\n\tTitle string\n\tX0    int\n\tY0    int\n\tSize0 float64\n\n\tSubTitle string\n\tX1       int\n\tY1       int\n\tSize1    float64\n}\n\nfunc (a *ArticlePosterBg) DrawPoster(d *DrawText, fontName string) error {\n\tfontSource := setting.AppSetting.RuntimeRootPath + setting.AppSetting.FontSavePath + fontName\n\tfontSourceBytes, err := ioutil.ReadFile(fontSource)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\ttrueTypeFont, err := freetype.ParseFont(fontSourceBytes)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tfc := freetype.NewContext()\n\tfc.SetDPI(72)\n\tfc.SetFont(trueTypeFont)\n\tfc.SetFontSize(d.Size0)\n\tfc.SetClip(d.JPG.Bounds())\n\tfc.SetDst(d.JPG)\n\tfc.SetSrc(image.Black)\n\n\tpt := freetype.Pt(d.X0, d.Y0)\n\t_, err = fc.DrawString(d.Title, pt)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tfc.SetFontSize(d.Size1)\n\t_, err = fc.DrawString(d.SubTitle, freetype.Pt(d.X1, d.Y1))\n\tif err != nil {\n\t\treturn err\n\t}\n\n\terr = jpeg.Encode(d.Merged, d.JPG, nil)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n")])])]),r("p",[t._v("这里主要使用了 freetype 包，分别涉及如下细项：")]),t._v(" "),r("p",[t._v("1、freetype.NewContext：创建一个新的 Context，会对其设置一些默认值")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("func NewContext() *Context {\n\treturn &Context{\n\t\tr:        raster.NewRasterizer(0, 0),\n\t\tfontSize: 12,\n\t\tdpi:      72,\n\t\tscale:    12 << 6,\n\t}\n}\n")])])]),r("p",[t._v("2、fc.SetDPI：设置屏幕每英寸的分辨率")]),t._v(" "),r("p",[t._v("3、fc.SetFont：设置用于绘制文本的字体")]),t._v(" "),r("p",[t._v("4、fc.SetFontSize：以磅为单位设置字体大小")]),t._v(" "),r("p",[t._v("5、fc.SetClip：设置剪裁矩形以进行绘制")]),t._v(" "),r("p",[t._v("6、fc.SetDst：设置目标图像")]),t._v(" "),r("p",[t._v("7、fc.SetSrc：设置绘制操作的源图像，通常为 "),r("a",{attrs:{href:"https://golang.org/pkg/image/#Uniform",target:"_blank",rel:"noopener noreferrer"}},[t._v("image.Uniform"),r("OutboundLink")],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("var (\n        // Black is an opaque black uniform image.\n        Black = NewUniform(color.Black)\n        // White is an opaque white uniform image.\n        White = NewUniform(color.White)\n        // Transparent is a fully transparent uniform image.\n        Transparent = NewUniform(color.Transparent)\n        // Opaque is a fully opaque uniform image.\n        Opaque = NewUniform(color.Opaque)\n)\n")])])]),r("p",[t._v("8、fc.DrawString：根据 Pt 的坐标值绘制给定的文本内容")]),t._v(" "),r("h3",{attrs:{id:"业务逻辑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#业务逻辑"}},[t._v("#")]),t._v(" 业务逻辑")]),t._v(" "),r("p",[t._v("打开 service/article_service/article_poster.go 方法，在 Generate 方法增加绘制文字的代码逻辑，如下：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('func (a *ArticlePosterBg) Generate() (string, string, error) {\n\tfullPath := qrcode.GetQrCodeFullPath()\n\tfileName, path, err := a.Qr.Encode(fullPath)\n\tif err != nil {\n\t\treturn "", "", err\n\t}\n\n\tif !a.CheckMergedImage(path) {\n\t\t...\n\n\t\tdraw.Draw(jpg, jpg.Bounds(), bgImage, bgImage.Bounds().Min, draw.Over)\n\t\tdraw.Draw(jpg, jpg.Bounds(), qrImage, qrImage.Bounds().Min.Sub(image.Pt(a.Pt.X, a.Pt.Y)), draw.Over)\n\n\t\terr = a.DrawPoster(&DrawText{\n\t\t\tJPG:    jpg,\n\t\t\tMerged: mergedF,\n\n\t\t\tTitle: "Golang Gin 系列文章",\n\t\t\tX0:    80,\n\t\t\tY0:    160,\n\t\t\tSize0: 42,\n\n\t\t\tSubTitle: "---煎鱼",\n\t\t\tX1:       320,\n\t\t\tY1:       220,\n\t\t\tSize1:    36,\n\t\t}, "msyhbd.ttc")\n\n\t\tif err != nil {\n\t\t\treturn "", "", err\n\t\t}\n\t}\n\n\treturn fileName, path, nil\n}\n')])])]),r("h2",{attrs:{id:"验证"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),r("p",[t._v("访问生成文章海报的接口 "),r("code",[t._v("$HOST/api/v1/articles/poster/generate?token=$token")]),t._v("，检查其生成结果，如下图")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://i.imgur.com/qaaG0LE.jpg",alt:"image"}})]),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("p",[t._v("在本章节在 "),r("a",{attrs:{href:"https://github.com/EDDYCJY/blog/blob/master/golang/gin/2018-07-04-Gin%E5%AE%9E%E8%B7%B5-%E8%BF%9E%E8%BD%BD%E5%8D%81%E4%BA%94-%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81-%E5%90%88%E5%B9%B6%E6%B5%B7%E6%8A%A5.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("连载十五"),r("OutboundLink")],1),t._v(" 的基础上增加了绘制文字，在实现上并不困难，而这两块需求一般会同时出现，大家可以多加练习，了解里面的逻辑和其他 API 😁")]),t._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),r("h3",{attrs:{id:"本系列示例代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#本系列示例代码"}},[t._v("#")]),t._v(" 本系列示例代码")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/EDDYCJY/go-gin-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-gin-example"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"关于"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于"}},[t._v("#")]),t._v(" 关于")]),t._v(" "),r("h3",{attrs:{id:"修改记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#修改记录"}},[t._v("#")]),t._v(" 修改记录")]),t._v(" "),r("ul",[r("li",[t._v("第一版：2018年02月16日发布文章")]),t._v(" "),r("li",[t._v("第二版：2019年10月02日修改文章")])]),t._v(" "),r("h2",{attrs:{id:"？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#？"}},[t._v("#")]),t._v(" ？")]),t._v(" "),r("p",[t._v("如果有任何疑问或错误，欢迎在 "),r("a",{attrs:{href:"https://github.com/EDDYCJY/blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("issues"),r("OutboundLink")],1),t._v(" 进行提问或给予修正意见，如果喜欢或对你有所帮助，欢迎 Star，对作者是一种鼓励和推进。")]),t._v(" "),r("h3",{attrs:{id:"我的公众号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#我的公众号"}},[t._v("#")]),t._v(" 我的公众号")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://image.eddycjy.com/8d0b0c3a11e74efd5fdfd7910257e70b.jpg",alt:"image"}})])])}),[],!1,null,null,null);e.default=n.exports}}]);