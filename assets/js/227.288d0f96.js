(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{662:function(t,v,_){"use strict";_.r(v);var r=_(44),e=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"_4-1-grpc及相关介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-grpc及相关介绍"}},[t._v("#")]),t._v(" 4.1 gRPC及相关介绍")]),t._v(" "),_("p",[t._v("项目地址：https://github.com/EDDYCJY/go-grpc-example")]),t._v(" "),_("p",[t._v("作为开篇章，将会介绍 gRPC 相关的一些知识。简单来讲 gRPC 是一个 基于 HTTP/2 协议设计的 RPC 框架，它采用了 Protobuf 作为 IDL")]),t._v(" "),_("p",[t._v("你是否有过疑惑，它们都是些什么？本文将会介绍一些常用的知识和概念，更详细的会给出手册地址去深入")]),t._v(" "),_("h2",{attrs:{id:"一、rpc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、rpc"}},[t._v("#")]),t._v(" 一、RPC")]),t._v(" "),_("h3",{attrs:{id:"什么是-rpc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是-rpc"}},[t._v("#")]),t._v(" 什么是 RPC")]),t._v(" "),_("p",[t._v("RPC 代指远程过程调用（Remote Procedure Call），它的调用包含了传输协议和编码（对象序列号）协议等等。允许运行于一台计算机的程序调用另一台计算机的子程序，而开发人员无需额外地为这个交互作用编程")]),t._v(" "),_("h4",{attrs:{id:"实际场景："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实际场景："}},[t._v("#")]),t._v(" 实际场景：")]),t._v(" "),_("p",[t._v("有两台服务器，分别是A、B。在 A 上的应用 C 想要调用 B 服务器上的应用 D，它们可以直接本地调用吗？"),_("br"),t._v("\n答案是不能的，但走 RPC 的话，十分方便。因此常有人称使用 RPC，就跟本地调用一个函数一样简单")]),t._v(" "),_("h3",{attrs:{id:"rpc-框架"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#rpc-框架"}},[t._v("#")]),t._v(" RPC 框架")]),t._v(" "),_("p",[t._v("我认为，一个完整的 RPC 框架，应包含负载均衡、服务注册和发现、服务治理等功能，并具有可拓展性便于流量监控系统等接入"),_("br"),t._v("\n那么它才算完整的，当然了。有些较单一的 RPC 框架，通过组合多组件也能达到这个标准")]),t._v(" "),_("p",[t._v("你认为呢？")]),t._v(" "),_("h3",{attrs:{id:"常见-rpc-框架"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见-rpc-框架"}},[t._v("#")]),t._v(" 常见 RPC 框架")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://grpc.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://github.com/apache/thrift",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thrift"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://github.com/smallnest/rpcx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rpcx"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://github.com/apache/incubator-dubbo",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dubbo"),_("OutboundLink")],1)])]),t._v(" "),_("h3",{attrs:{id:"比较一下"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#比较一下"}},[t._v("#")]),t._v(" 比较一下")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("\\")]),t._v(" "),_("th",[t._v("跨语言")]),t._v(" "),_("th",[t._v("多 IDL")]),t._v(" "),_("th",[t._v("服务治理")]),t._v(" "),_("th",[t._v("注册中心")]),t._v(" "),_("th",[t._v("服务管理")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("gRPC")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("×")])]),t._v(" "),_("tr",[_("td",[t._v("Thrift")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("×")])]),t._v(" "),_("tr",[_("td",[t._v("Rpcx")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("√")])]),t._v(" "),_("tr",[_("td",[t._v("Dubbo")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("√")])])])]),t._v(" "),_("h3",{attrs:{id:"为什么要-rpc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要-rpc"}},[t._v("#")]),t._v(" 为什么要 RPC")]),t._v(" "),_("p",[t._v("简单、通用、安全、效率")]),t._v(" "),_("h3",{attrs:{id:"rpc-可以基于-http-吗"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#rpc-可以基于-http-吗"}},[t._v("#")]),t._v(" RPC 可以基于 HTTP 吗")]),t._v(" "),_("p",[t._v("RPC 是代指远程过程调用，是可以基于 HTTP 协议的")]),t._v(" "),_("p",[t._v("肯定会有人说效率优势，我可以告诉你，那是基于 HTTP/1.1 来讲的，HTTP/2 优化了许多问题（当然也存在新的问题），所以你看到了本文的主题 gRPC")]),t._v(" "),_("h2",{attrs:{id:"二、protobuf"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、protobuf"}},[t._v("#")]),t._v(" 二、Protobuf")]),t._v(" "),_("h3",{attrs:{id:"介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),_("p",[t._v("Protocol Buffers 是一种与语言、平台无关，可扩展的序列化结构化数据的方法，常用于通信协议，数据存储等等。相较于 JSON、XML，它更小、更快、更简单，因此也更受开发人员的青眯")]),t._v(" "),_("h3",{attrs:{id:"语法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v('syntax = "proto3";\n\nservice SearchService {\n    rpc Search (SearchRequest) returns (SearchResponse);\n}\n\nmessage SearchRequest {\n  string query = 1;\n  int32 page_number = 2;\n  int32 result_per_page = 3;\n}\n\nmessage SearchResponse {\n    ...\n}\n')])])]),_("p",[t._v("1、第一行（非空的非注释行）声明使用 "),_("code",[t._v("proto3")]),t._v(" 语法。如果不声明，将默认使用 "),_("code",[t._v("proto2")]),t._v(" 语法。同时我建议用 v2 还是 v3，都应当声明其使用的版本")]),t._v(" "),_("p",[t._v("2、定义 "),_("code",[t._v("SearchService")]),t._v(" RPC 服务，其包含 RPC 方法 "),_("code",[t._v("Search")]),t._v("，入参为 "),_("code",[t._v("SearchRequest")]),t._v(" 消息，出参为 "),_("code",[t._v("SearchResponse")]),t._v(" 消息")]),t._v(" "),_("p",[t._v("3、定义 "),_("code",[t._v("SearchRequest")]),t._v("、"),_("code",[t._v("SearchResponse")]),t._v(" 消息，前者定义了三个字段，每一个字段包含三个属性：类型、字段名称、字段编号")]),t._v(" "),_("p",[t._v("4、Protobuf 编译器会根据选择的语言不同，生成相应语言的 Service Interface Code  和 Stubs")]),t._v(" "),_("p",[t._v("最后，这里只是简单的语法介绍，详细的请右拐 "),_("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3",target:"_blank",rel:"noopener noreferrer"}},[t._v("\nLanguage Guide (proto3)"),_("OutboundLink")],1)]),t._v(" "),_("h3",{attrs:{id:"数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v(".proto Type")]),t._v(" "),_("th",[t._v("C++ Type")]),t._v(" "),_("th",[t._v("Java Type")]),t._v(" "),_("th",[t._v("Go Type")]),t._v(" "),_("th",[t._v("PHP Type")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("double")]),t._v(" "),_("td",[t._v("double")]),t._v(" "),_("td",[t._v("double")]),t._v(" "),_("td",[t._v("float64")]),t._v(" "),_("td",[t._v("float")])]),t._v(" "),_("tr",[_("td",[t._v("float")]),t._v(" "),_("td",[t._v("float")]),t._v(" "),_("td",[t._v("float")]),t._v(" "),_("td",[t._v("float32")]),t._v(" "),_("td",[t._v("float")])]),t._v(" "),_("tr",[_("td",[t._v("int32")]),t._v(" "),_("td",[t._v("int32")]),t._v(" "),_("td",[t._v("int")]),t._v(" "),_("td",[t._v("int32")]),t._v(" "),_("td",[t._v("integer")])]),t._v(" "),_("tr",[_("td",[t._v("int64")]),t._v(" "),_("td",[t._v("int64")]),t._v(" "),_("td",[t._v("long")]),t._v(" "),_("td",[t._v("int64")]),t._v(" "),_("td",[t._v("integer/string")])]),t._v(" "),_("tr",[_("td",[t._v("uint32")]),t._v(" "),_("td",[t._v("uint32")]),t._v(" "),_("td",[t._v("int")]),t._v(" "),_("td",[t._v("uint32")]),t._v(" "),_("td",[t._v("integer")])]),t._v(" "),_("tr",[_("td",[t._v("uint64")]),t._v(" "),_("td",[t._v("uint64")]),t._v(" "),_("td",[t._v("long")]),t._v(" "),_("td",[t._v("uint64")]),t._v(" "),_("td",[t._v("integer/string")])]),t._v(" "),_("tr",[_("td",[t._v("sint32")]),t._v(" "),_("td",[t._v("int32")]),t._v(" "),_("td",[t._v("int")]),t._v(" "),_("td",[t._v("int32")]),t._v(" "),_("td",[t._v("integer")])]),t._v(" "),_("tr",[_("td",[t._v("sint64")]),t._v(" "),_("td",[t._v("int64")]),t._v(" "),_("td",[t._v("long")]),t._v(" "),_("td",[t._v("int64")]),t._v(" "),_("td",[t._v("integer/string")])]),t._v(" "),_("tr",[_("td",[t._v("fixed32")]),t._v(" "),_("td",[t._v("uint32")]),t._v(" "),_("td",[t._v("int")]),t._v(" "),_("td",[t._v("uint32")]),t._v(" "),_("td",[t._v("integer")])]),t._v(" "),_("tr",[_("td",[t._v("fixed64")]),t._v(" "),_("td",[t._v("uint64")]),t._v(" "),_("td",[t._v("long")]),t._v(" "),_("td",[t._v("uint64")]),t._v(" "),_("td",[t._v("integer/string")])]),t._v(" "),_("tr",[_("td",[t._v("sfixed32")]),t._v(" "),_("td",[t._v("int32")]),t._v(" "),_("td",[t._v("int")]),t._v(" "),_("td",[t._v("int32")]),t._v(" "),_("td",[t._v("integer")])]),t._v(" "),_("tr",[_("td",[t._v("sfixed64")]),t._v(" "),_("td",[t._v("int64")]),t._v(" "),_("td",[t._v("long")]),t._v(" "),_("td",[t._v("int64")]),t._v(" "),_("td",[t._v("integer/string")])]),t._v(" "),_("tr",[_("td",[t._v("bool")]),t._v(" "),_("td",[t._v("bool")]),t._v(" "),_("td",[t._v("boolean")]),t._v(" "),_("td",[t._v("bool")]),t._v(" "),_("td",[t._v("boolean")])]),t._v(" "),_("tr",[_("td",[t._v("string")]),t._v(" "),_("td",[t._v("string")]),t._v(" "),_("td",[t._v("String")]),t._v(" "),_("td",[t._v("string")]),t._v(" "),_("td",[t._v("string")])]),t._v(" "),_("tr",[_("td",[t._v("bytes")]),t._v(" "),_("td",[t._v("string")]),t._v(" "),_("td",[t._v("ByteString")]),t._v(" "),_("td",[t._v("[]byte")]),t._v(" "),_("td",[t._v("string")])])])]),t._v(" "),_("h3",{attrs:{id:"v2-和-v3-主要区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#v2-和-v3-主要区别"}},[t._v("#")]),t._v(" v2 和 v3 主要区别")]),t._v(" "),_("ul",[_("li",[t._v("删除原始值字段的字段存在逻辑")]),t._v(" "),_("li",[t._v("删除 required 字段")]),t._v(" "),_("li",[t._v("删除 optional 字段，默认就是")]),t._v(" "),_("li",[t._v("删除 default 字段")]),t._v(" "),_("li",[t._v("删除扩展特性，新增 Any 类型来替代它")]),t._v(" "),_("li",[t._v("删除 unknown 字段的支持")]),t._v(" "),_("li",[t._v("新增 "),_("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#json",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON Mapping"),_("OutboundLink")],1)]),t._v(" "),_("li",[t._v("新增 Map 类型的支持")]),t._v(" "),_("li",[t._v("修复 enum 的 unknown 类型")]),t._v(" "),_("li",[t._v("repeated 默认使用 packed 编码")]),t._v(" "),_("li",[t._v("引入了新的语言实现（C＃，JavaScript，Ruby，Objective-C）")])]),t._v(" "),_("p",[t._v("以上是日常涉及的常见功能，如果还想详细了解可阅读 "),_("a",{attrs:{href:"https://github.com/protocolbuffers/protobuf/releases?after=v3.2.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Protobuf Version 3.0.0"),_("OutboundLink")],1)]),t._v(" "),_("h3",{attrs:{id:"相较-protobuf，为什么不使用xml？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相较-protobuf，为什么不使用xml？"}},[t._v("#")]),t._v(" 相较 Protobuf，为什么不使用XML？")]),t._v(" "),_("ul",[_("li",[t._v("更简单")]),t._v(" "),_("li",[t._v("数据描述文件只需原来的1/10至1/3")]),t._v(" "),_("li",[t._v("解析速度是原来的20倍至100倍")]),t._v(" "),_("li",[t._v("减少了二义性")]),t._v(" "),_("li",[t._v("生成了更易使用的数据访问类")])]),t._v(" "),_("h2",{attrs:{id:"三、grpc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、grpc"}},[t._v("#")]),t._v(" 三、gRPC")]),t._v(" "),_("h3",{attrs:{id:"介绍-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#介绍-2"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),_("p",[t._v("gRPC 是一个高性能、开源和通用的 RPC 框架，面向移动和 HTTP/2 设计")]),t._v(" "),_("h4",{attrs:{id:"多语言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多语言"}},[t._v("#")]),t._v(" 多语言")]),t._v(" "),_("ul",[_("li",[t._v("C++")]),t._v(" "),_("li",[t._v("C#")]),t._v(" "),_("li",[t._v("Dart")]),t._v(" "),_("li",[t._v("Go")]),t._v(" "),_("li",[t._v("Java")]),t._v(" "),_("li",[t._v("Node.js")]),t._v(" "),_("li",[t._v("Objective-C")]),t._v(" "),_("li",[t._v("PHP")]),t._v(" "),_("li",[t._v("Python")]),t._v(" "),_("li",[t._v("Ruby")])]),t._v(" "),_("h4",{attrs:{id:"特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),_("p",[t._v("1、HTTP/2")]),t._v(" "),_("p",[t._v("2、Protobuf")]),t._v(" "),_("p",[t._v("3、客户端、服务端基于同一份 IDL")]),t._v(" "),_("p",[t._v("4、移动网络的良好支持")]),t._v(" "),_("p",[t._v("5、支持多语言")]),t._v(" "),_("h3",{attrs:{id:"概览"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[t._v("#")]),t._v(" 概览")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://image.eddycjy.com/7dcac5be0a34636c699025368242d3f3.png",alt:"image"}})]),t._v(" "),_("h3",{attrs:{id:"讲解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#讲解"}},[t._v("#")]),t._v(" 讲解")]),t._v(" "),_("p",[t._v("1、客户端（gRPC Sub）调用 A 方法，发起 RPC 调用")]),t._v(" "),_("p",[t._v("2、对请求信息使用 Protobuf 进行对象序列化压缩（IDL）")]),t._v(" "),_("p",[t._v("3、服务端（gRPC Server）接收到请求后，解码请求体，进行业务逻辑处理并返回")]),t._v(" "),_("p",[t._v("4、对响应结果使用 Protobuf 进行对象序列化压缩（IDL）")]),t._v(" "),_("p",[t._v("5、客户端接受到服务端响应，解码请求体。回调被调用的 A 方法，唤醒正在等待响应（阻塞）的客户端调用并返回响应结果")]),t._v(" "),_("h3",{attrs:{id:"示例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),_("p",[t._v("在这一小节，将简单的给大家展示 gRPC 的客户端和服务端的示例代码，希望大家先有一个基础的印象，将会在下一章节详细介绍 🤔")]),t._v(" "),_("h4",{attrs:{id:"构建和启动服务端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#构建和启动服务端"}},[t._v("#")]),t._v(" 构建和启动服务端")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v('lis, err := net.Listen("tcp", fmt.Sprintf(":%d", *port))\nif err != nil {\n        log.Fatalf("failed to listen: %v", err)\n}\n\ngrpcServer := grpc.NewServer()\n...\npb.RegisterSearchServer(grpcServer, &SearchServer{})\ngrpcServer.Serve(lis)\n')])])]),_("p",[t._v("1、监听指定 TCP 端口，用于接受客户端请求")]),t._v(" "),_("p",[t._v("2、创建 gRPC Server 的实例对象")]),t._v(" "),_("p",[t._v("3、gRPC Server 内部服务和路由的注册")]),t._v(" "),_("p",[t._v("4、Serve() 调用服务器以执行阻塞等待，直到进程被终止或被 Stop() 调用")]),t._v(" "),_("h4",{attrs:{id:"创建客户端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#创建客户端"}},[t._v("#")]),t._v(" 创建客户端")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v('var opts []grpc.DialOption\n...\nconn, err := grpc.Dial(*serverAddr, opts...)\nif err != nil {\n    log.Fatalf("fail to dial: %v", err)\n}\n\ndefer conn.Close()\nclient := pb.NewSearchClient(conn)\n...\n')])])]),_("p",[t._v("1、创建 gRPC Channel 与 gRPC Server 进行通信（需服务器地址和端口作为参数）")]),t._v(" "),_("p",[t._v("2、设置 DialOptions 凭证（例如，TLS，GCE凭据，JWT凭证）")]),t._v(" "),_("p",[t._v("3、创建 Search Client Stub")]),t._v(" "),_("p",[t._v("4、调用对应的服务方法")]),t._v(" "),_("h2",{attrs:{id:"思考题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#思考题"}},[t._v("#")]),t._v(" 思考题")]),t._v(" "),_("p",[t._v("1、什么场景下不适合使用 Protobuf，而适合使用 JSON、XML？")]),t._v(" "),_("p",[t._v("2、Protobuf 一节中提到的 packed 编码，是什么？")]),t._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),_("p",[t._v("在开篇内容中，我利用了尽量简短的描述给你介绍了接下来所必须、必要的知识点\n希望你能够有所收获，建议能到我给的参考资料处进行深入学习，是最好的了")]),t._v(" "),_("h2",{attrs:{id:"参考资料"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3",target:"_blank",rel:"noopener noreferrer"}},[t._v("Protocol Buffers"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://grpc.io/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=e.exports}}]);