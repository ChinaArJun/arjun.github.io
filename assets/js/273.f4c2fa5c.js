(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{710:function(r,e,t){"use strict";t.r(e);var n=t(44),o=Object(n.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"_01开篇：微服务架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_01开篇：微服务架构"}},[r._v("#")]),r._v(" 01开篇：微服务架构")]),r._v(" "),t("p",[r._v("此系列教程正在更新中，通过本系列教程的学习，你可以从理论、框架、开发、运维等各个维度对微服务架构有一个整体的认识：了解并掌握微服务原理、RPC 框架 Go Micro、服务接口开发流程、以及常见注册中心、集群部署、服务监控、服务追踪、服务治理、性能测试等微服务基础组件，从而能够独立操刀并主持中小型微服务系统的搭建。")]),r._v(" "),t("p",[t("strong",[r._v("概念篇和框架篇可免费阅读，实战篇及运维篇需要升级为订阅用户才能阅读")]),r._v("，你可以扫描下面的二维码通过加入“学院君和他的朋友们”星球升级为订阅用户：")]),r._v(" "),t("h3",{attrs:{id:"概念篇（免费）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念篇（免费）"}},[r._v("#")]),r._v(" 概念篇（免费）")]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/20964",target:"_blank",rel:"noopener noreferrer"}},[r._v("开篇：什么是微服务架构"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/20965",target:"_blank",rel:"noopener noreferrer"}},[r._v("微服务架构总体实现概述"),t("OutboundLink")],1),r._v("（总体框架图、一次完整的调用链路以及涉及到的组件）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/20966",target:"_blank",rel:"noopener noreferrer"}},[r._v("微服务架构的优缺点和适用场景"),t("OutboundLink")],1),r._v("（适用于复杂系统，但也不是银弹，提高了系统的复杂度）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/20967",target:"_blank",rel:"noopener noreferrer"}},[r._v("服务拆分的维度和拆分前的技术保障"),t("OutboundLink")],1)])]),r._v(" "),t("h3",{attrs:{id:"框架篇（免费）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#框架篇（免费）"}},[r._v("#")]),r._v(" 框架篇（免费）")]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21014",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Micro 框架初探及底层架构"),t("OutboundLink")],1),r._v("（微服务框架选型）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21015",target:"_blank",rel:"noopener noreferrer"}},[r._v("基于 Go Micro 构建第一个微服务接口"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21016",target:"_blank",rel:"noopener noreferrer"}},[r._v("通过 HTTP 请求调用 Go Micro 微服务接口"),t("OutboundLink")],1),r._v("（基于 API 网关）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21174",target:"_blank",rel:"noopener noreferrer"}},[r._v("服务注册的底层实现"),t("OutboundLink")],1),r._v("（以 Go Micro + Consul 为例）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21175",target:"_blank",rel:"noopener noreferrer"}},[r._v("服务发现的底层实现"),t("OutboundLink")],1),r._v("（以 Go Micro + Consul 为例，分两部分实现：Registry 和 Selector）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21180",target:"_blank",rel:"noopener noreferrer"}},[r._v("微服务 API 网关实现（上）：基本原理篇"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21181",target:"_blank",rel:"noopener noreferrer"}},[r._v("微服务 API 网关实现（中）：Micro API 网关架构模式和参数解析"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21182",target:"_blank",rel:"noopener noreferrer"}},[r._v("微服务 API 网关实现（下）：Micro API 网关初始化、请求监听及处理实现"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21189",target:"_blank",rel:"noopener noreferrer"}},[r._v("通过 Micro Web 查看、测试所有微服务接口"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21191",target:"_blank",rel:"noopener noreferrer"}},[r._v("通过 Micro Proxy 实现微服务之间的接口调用"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21196",target:"_blank",rel:"noopener noreferrer"}},[r._v("微服务架构模式之 sidecar 模式（上）：原理概述"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21197",target:"_blank",rel:"noopener noreferrer"}},[r._v("微服务架构模式之 sidecar 模式（下）：应用实例（基于 Micro Proxy 实现 PHP 微服务）"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21198",target:"_blank",rel:"noopener noreferrer"}},[r._v("通过 Micro CLI 与 Go Micro 微服务进行交互"),t("OutboundLink")],1),r._v("（命令行）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21205",target:"_blank",rel:"noopener noreferrer"}},[r._v("通过 Micro Bot 与 Go Micro 微服务进行交互"),t("OutboundLink")],1),r._v("（机器人）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21206",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Micro 组件底层实现源码剖析之 Registry 篇"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21212",target:"_blank",rel:"noopener noreferrer"}},[r._v("注册中心篇（一）：Consul 简介和原理概述以及启动模式分析"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21213",target:"_blank",rel:"noopener noreferrer"}},[r._v("注册中心篇（二）：基于 Consul 进行服务注册、删除和健康检查"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21214",target:"_blank",rel:"noopener noreferrer"}},[r._v("注册中心篇（三）：基于 Consul 进行服务节点查询和请求处理"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21215",target:"_blank",rel:"noopener noreferrer"}},[r._v("注册中心篇（四）：基于 Vagrant 模拟 Consul 集群实现服务注册与发现"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21218",target:"_blank",rel:"noopener noreferrer"}},[r._v("注册中心篇（五）：Etcd 简介及使用入门"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21219",target:"_blank",rel:"noopener noreferrer"}},[r._v("注册中心篇（六）：基于 Etcd 作为注册中心进行服务注册与发现"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21225",target:"_blank",rel:"noopener noreferrer"}},[r._v("注册中心篇（七）：Zookeeper 简介及安装使用入门"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21226",target:"_blank",rel:"noopener noreferrer"}},[r._v("注册中心篇（八）：将 Zookeeper 集群作为注册中心并集成到 Go Micro"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21227",target:"_blank",rel:"noopener noreferrer"}},[r._v("注册中心篇（九）：基于 Zookeeper 作为注册中心服务注册与发现的底层实现"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21231",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Micro 组件底层实现源码剖析之 Selector 篇"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21238",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Micro 组件底层实现源码剖析之 Transport 篇（上）：服务端路由注册与请求监听"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21239",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Micro 组件底层实现源码剖析之 Transport 篇（下）：客户端连接建立、请求发送与响应接收"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21274",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Micro 组件底层实现源码剖析之 Codec 篇"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21275",target:"_blank",rel:"noopener noreferrer"}},[r._v("通过 Broker 组件在 Go Micro 中实现基于事件驱动的异步通信"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21276",target:"_blank",rel:"noopener noreferrer"}},[r._v("Go Micro 组件底层实现源码剖析之 Broker 篇"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21282",target:"_blank",rel:"noopener noreferrer"}},[r._v("增补篇：数据格式序列化工具 Protobuf 简介及使用入门"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21283",target:"_blank",rel:"noopener noreferrer"}},[r._v("增补篇：在 Go Micro 中集成 gRPC 网关对外提供服务"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21284",target:"_blank",rel:"noopener noreferrer"}},[r._v("增补篇：基于 Thrift 框架构建 PHP 微服务接口示例"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21291",target:"_blank",rel:"noopener noreferrer"}},[r._v("增补篇：基于 Thrift + Laravel 构建微服务（一）：远程 RPC 调用"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21292",target:"_blank",rel:"noopener noreferrer"}},[r._v("增补篇：基于 Thrift + Laravel 构建微服务（二）：通过 Swoole 构建高性能服务端"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21293",target:"_blank",rel:"noopener noreferrer"}},[r._v("增补篇：基于 Thrift + Laravel 构建微服务（三）：基于 Zookeeper 进行服务注册和发现"),t("OutboundLink")],1)])]),r._v(" "),t("h3",{attrs:{id:"实战篇（付费）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实战篇（付费）"}},[r._v("#")]),r._v(" 实战篇（付费）")]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/20954",target:"_blank",rel:"noopener noreferrer"}},[r._v("PHP 电商单体应用准备"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/20981",target:"_blank",rel:"noopener noreferrer"}},[r._v("服务拆分原则及系统架构设计"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21017",target:"_blank",rel:"noopener noreferrer"}},[r._v("微服务系统基础组件技术选型"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21033",target:"_blank",rel:"noopener noreferrer"}},[r._v("创建微服务之间调用的 gRPC/Protobuf 演示接口"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21047",target:"_blank",rel:"noopener noreferrer"}},[r._v("创建客户端与微服务之间调用的 HTTP/JSON 演示接口"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21064",target:"_blank",rel:"noopener noreferrer"}},[r._v("通过 Docker 容器化微服务接口"),t("OutboundLink")],1),r._v("（Dockerize）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21097",target:"_blank",rel:"noopener noreferrer"}},[r._v("引入 Go Micro 框架并通过 Go Modules 管理包依赖"),t("OutboundLink")],1),r._v("（包含通过代理加速包下载速度）")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21105",target:"_blank",rel:"noopener noreferrer"}},[r._v("拆分客户端服务与 Dockerfile 多阶段构建"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21107",target:"_blank",rel:"noopener noreferrer"}},[r._v("创建第一个微服务接口 —— 用户注册接口"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21115",target:"_blank",rel:"noopener noreferrer"}},[r._v("引入 Docker Compose 编排多个容器 & 客户端远程调用服务端用户接口演示"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21129",target:"_blank",rel:"noopener noreferrer"}},[r._v("基于 JWT 实现用户认证接口"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21139",target:"_blank",rel:"noopener noreferrer"}},[r._v("通过 Micro API 网关对外提供 HTTP JSON API"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21143",target:"_blank",rel:"noopener noreferrer"}},[r._v("在 PHP 电商项目中基于 Micro API 网关调用用户微服务接口"),t("OutboundLink")],1),r._v("‘")]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21159",target:"_blank",rel:"noopener noreferrer"}},[r._v("Laravel 客户端代码重构（上）：基于微服务接口自定义邮箱唯一性验证规则"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21160",target:"_blank",rel:"noopener noreferrer"}},[r._v("Laravel 客户端代码重构（下）：自定义 User Provider 和 Guard 组件实现基于微服务接口的用户认证"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21193",target:"_blank",rel:"noopener noreferrer"}},[r._v("新增用户更新和密码重置相关服务接口"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21199",target:"_blank",rel:"noopener noreferrer"}},[r._v("客户端用户退出功能实现及密码重置业务逻辑梳理"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21207",target:"_blank",rel:"noopener noreferrer"}},[r._v("基于微服务接口重构客户端密码重置功能"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21220",target:"_blank",rel:"noopener noreferrer"}},[r._v("创建独立的 GORM 模型类映射 Protobuf"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21288",target:"_blank",rel:"noopener noreferrer"}},[r._v("基于 Broker + NATS 在客户端和服务端实现基于事件驱动的异步通信（上）"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21296",target:"_blank",rel:"noopener noreferrer"}},[r._v("基于 Broker + NATS 在客户端和服务端实现基于事件驱动的异步通信（下）"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21333",target:"_blank",rel:"noopener noreferrer"}},[r._v("基于微服务接口重构客户端用户详情页"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21335",target:"_blank",rel:"noopener noreferrer"}},[r._v("构建商品服务接口（一）：商品主表"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21359",target:"_blank",rel:"noopener noreferrer"}},[r._v("构建商品服务接口（二）：商品关联表及关联查询"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21361",target:"_blank",rel:"noopener noreferrer"}},[r._v("构建商品服务接口（三）：在一个微服务中注册多个服务处理器"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21372",target:"_blank",rel:"noopener noreferrer"}},[r._v("构建商品服务接口（四）：基于 Etcd 作为注册中心并通过 Micro Web 测试服务接口"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21376",target:"_blank",rel:"noopener noreferrer"}},[r._v("构建商品服务接口（五）：客户端商品接口调用代码重构"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21386",target:"_blank",rel:"noopener noreferrer"}},[r._v("基于 Docker Compose 搭建 Etcd 集群"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21394",target:"_blank",rel:"noopener noreferrer"}},[r._v("基于 Prometheus + Grafana 构建可视化服务监控系统"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://xueyuanjun.com/post/21401",target:"_blank",rel:"noopener noreferrer"}},[r._v("基于 OpenTracing + Jaeger 构建分布式服务追踪系统"),t("OutboundLink")],1)]),r._v(" "),t("li",[r._v("服务治理")]),r._v(" "),t("li",[r._v("配置中心")]),r._v(" "),t("li",[r._v("持续交付")]),r._v(" "),t("li",[r._v("容器编排")])]),r._v(" "),t("h4",{attrs:{id:"项目代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目代码"}},[r._v("#")]),r._v(" 项目代码")]),r._v(" "),t("ul",[t("li",[r._v("Go Micro 服务端项目代码：https://github.com/nonfu/laracom")]),r._v(" "),t("li",[r._v("PHP 客户端项目代码（基于 Laravel）：https://github.com/nonfu/laracom-php")])])])}),[],!1,null,null,null);e.default=o.exports}}]);