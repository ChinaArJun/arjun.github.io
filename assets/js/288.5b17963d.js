(window.webpackJsonp=window.webpackJsonp||[]).push([[288],{725:function(t,a,e){"use strict";e.r(a);var v=e(44),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"go-开发技巧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#go-开发技巧"}},[t._v("#")]),t._v(" Go 开发技巧")]),t._v(" "),e("h2",{attrs:{id:"说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),e("p",[t._v("本小节是拓展内容，笔者会不定期更新 Go 开发技巧，使该技巧的内容尽可能全，并保证技巧的实用性。")]),t._v(" "),e("h2",{attrs:{id:"go-开发技巧-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#go-开发技巧-2"}},[t._v("#")]),t._v(" Go 开发技巧")]),t._v(" "),e("ol",[e("li",[t._v("package 的名字和目录名一样，main 除外")]),t._v(" "),e("li",[t._v("string 表示的是不可变的字符串变量，对 string 的修改是比较重的操作，基本上都需要重新申请内存，如果没有特殊需要，需要修改时多使用 []byte")]),t._v(" "),e("li",[t._v("尽量使用 strings 库操作 string，这样做可以提高性能")]),t._v(" "),e("li",[t._v("append 要小心自动分配内存，append 返回的可能是新分配的地址")]),t._v(" "),e("li",[t._v("如果要直接修改 map 的 value 值，则 value 只能是指针，否则要覆盖原来的值")]),t._v(" "),e("li",[t._v("map 在并发中需要加锁")]),t._v(" "),e("li",[t._v("编译过程无法检查 interface{} 的转换，只有运行时检查，小心引起 panic")]),t._v(" "),e("li",[t._v("使用 defer，保证退出函数时释放资源")]),t._v(" "),e("li",[t._v("尽量少用全局变量，通过参数传递，使每个函数都是“无状态”的，这样减少耦合，也方便分工和单元测试")]),t._v(" "),e("li",[t._v("参数如果比较多，将相关参数定义成结构体传递")])])])}),[],!1,null,null,null);a.default=r.exports}}]);