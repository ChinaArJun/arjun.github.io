(window.webpackJsonp=window.webpackJsonp||[]).push([[397],{835:function(v,_,t){"use strict";t.r(_);var o=t(44),e=Object(o.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"go-包依赖管理工具-govendor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go-包依赖管理工具-govendor"}},[v._v("#")]),v._v(" Go 包依赖管理工具 - govendor")]),v._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://github.com/kardianos/govendor",target:"_blank",rel:"noopener noreferrer"}},[v._v("govendor"),t("OutboundLink")],1),v._v(" 是一个基于 "),t("code",[v._v("vendor")]),v._v(" 机制实现的 Go 包依赖管理命令行工具。与原生 vendor 无侵入性融合，也支持从其他依赖管理工具迁移，可以很方便的实现同一个包在不同项目中不同版本、以及无相互侵入的开发和管理。")])]),v._v(" "),t("h2",{attrs:{id:"vendor-特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vendor-特性"}},[v._v("#")]),v._v(" vendor 特性")]),v._v(" "),t("p",[v._v("最开始的时候，Go 并没有提供较为妥当的包管理工具。从 1.5 版本开始提供了 vendor 特性，但需要手动设置环境变量 "),t("code",[v._v("GO15VENDOREXPERIMENT=1")]),v._v("。")]),v._v(" "),t("p",[v._v("在执行 "),t("code",[v._v("go build")]),v._v(" 或 "),t("code",[v._v("go run")]),v._v(" 命令时，会按照以下顺序去查找包：")]),v._v(" "),t("ul",[t("li",[v._v("当前包下的 vendor 目录")]),v._v(" "),t("li",[v._v("向上级目录查找，直到找到 src 下的 vendor 目录")]),v._v(" "),t("li",[v._v("在 GOROOT 目录下查找")]),v._v(" "),t("li",[v._v("在 GOPATH 下面查找依赖包")])]),v._v(" "),t("p",[v._v("在发布 1.6 版本时，该环境变量的值已经默认设置为 1 了，该值可以使用 "),t("code",[v._v("go env")]),v._v(" 命令查看。")]),v._v(" "),t("p",[v._v("在发布 1.7 版本时，已去掉该环境变量，默认开启 "),t("code",[v._v("vendor")]),v._v(" 特性。")]),v._v(" "),t("h2",{attrs:{id:"vendor-使用建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vendor-使用建议"}},[v._v("#")]),v._v(" vendor 使用建议")]),v._v(" "),t("ul",[t("li",[v._v("一个库工程（不包含 "),t("code",[v._v("main")]),v._v(" 的 "),t("code",[v._v("package")]),v._v("）不应该在自己的版本控制中存储外部的包在 "),t("code",[v._v("vendor")]),v._v(" 目录中，除非有特殊原因并且知道为什么要这么做。")]),v._v(" "),t("li",[v._v("在一个应用中，（包含 "),t("code",[v._v("main")]),v._v(" 的 "),t("code",[v._v("package")]),v._v("），建议只有一个 "),t("code",[v._v("vendor")]),v._v(" 目录，且在代码库一级目录。")])]),v._v(" "),t("h2",{attrs:{id:"govendor-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#govendor-简介"}},[v._v("#")]),v._v(" govendor 简介")]),v._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/kardianos/govendor",target:"_blank",rel:"noopener noreferrer"}},[v._v("govendor"),t("OutboundLink")],1),v._v(" 是一个基于 "),t("code",[v._v("vendor")]),v._v(" 目录机制的包管理工具。")]),v._v(" "),t("ul",[t("li",[v._v("支持从项目源码中分析出依赖的包，并从 "),t("code",[v._v("$GOPATH")]),v._v(" 复制到项目的 "),t("code",[v._v("vendor")]),v._v(" 目录下")]),v._v(" "),t("li",[v._v("支持包的指定版本，并用 "),t("code",[v._v("vendor/vendor.json")]),v._v(" 进行包和版本管理，这点与 PHP 的 "),t("code",[v._v("Composer")]),v._v(" 类似")]),v._v(" "),t("li",[v._v("支持用 "),t("code",[v._v("govendor add/update")]),v._v(" 命令从 "),t("code",[v._v("$GOPATH")]),v._v(" 中复制依赖包")]),v._v(" "),t("li",[v._v("如果忽略了 "),t("code",[v._v("vendor/*/")]),v._v(" 文件，可用 "),t("code",[v._v("govendor sync")]),v._v(" 恢复依赖包")]),v._v(" "),t("li",[v._v("可直接用 "),t("code",[v._v("govendor fetch")]),v._v(" 添加或更新依赖包")]),v._v(" "),t("li",[v._v("可用 "),t("code",[v._v("govendor migrate")]),v._v(" 从其他 "),t("code",[v._v("vendor")]),v._v(" 包管理工具中一键迁移到 "),t("code",[v._v("govendor")])]),v._v(" "),t("li",[v._v("支持 Linux，macOS，Windows，甚至现有所有操作系统")]),v._v(" "),t("li",[v._v("支持 Git、Hg、SVN，BZR（必须指定一个路径）")])]),v._v(" "),t("h2",{attrs:{id:"govendor-使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#govendor-使用"}},[v._v("#")]),v._v(" govendor 使用")]),v._v(" "),t("p",[v._v("要求： - 项目必须在 "),t("code",[v._v("$GOPATH/src")]),v._v(" 目录下 - 如果 Go 版本为 1.5，则必须手动设置环境变量 "),t("code",[v._v("set GO15VENDOREXPERIMENT=1")])]),v._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[v._v("#")]),v._v(" 安装")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("go get -u github.com/kardianos/govendor")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])]),v._v(" "),t("p",[v._v("为了方便快捷使用 "),t("code",[v._v("govendor")]),v._v("，建议将 "),t("code",[v._v("$GOPATH/bin")]),v._v(" 添加到 PATH 中。Linux/macOS 如下设置：")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v('export PATH="$GOPATH/bin:$PATH"')])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])]),v._v(" "),t("h3",{attrs:{id:"初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[v._v("#")]),v._v(" 初始化")]),v._v(" "),t("p",[v._v("在项目根目录下执行以下命令进行 "),t("code",[v._v("vendor")]),v._v(" 初始化：")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor init")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])]),v._v(" "),t("p",[v._v("项目根目录下即会自动生成 "),t("code",[v._v("vendor")]),v._v(" 目录和 "),t("code",[v._v("vendor.json")]),v._v(" 文件。此时 "),t("code",[v._v("vendor.json")]),v._v(" 文件内容为：")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1 2 3 4 5 6")])]),v._v(" "),t("th",[t("code",[v._v('{ "comment": "", "ignore": "test", "package": [], "rootPath": "govendor-example" }')])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])]),v._v(" "),t("h3",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[v._v("#")]),v._v(" 常用命令")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("将已被引用且在 "),t("code",[v._v("$GOPATH")]),v._v(" 下的所有包复制到 "),t("code",[v._v("vendor")]),v._v(" 目录")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor add +external")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("仅从 "),t("code",[v._v("$GOPATH")]),v._v(" 中复制指定包")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor add gopkg.in/yaml.v2")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("列出代码中所有被引用到的包及其状态")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor list")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1 2 3 4 5 6 7 8 9 10 11 12 13")])]),v._v(" "),t("th",[t("code",[v._v("e github.com/gin-contrib/sse e github.com/gin-gonic/gin e github.com/gin-gonic/gin/binding e github.com/gin-gonic/gin/internal/json e github.com/gin-gonic/gin/render e github.com/golang/protobuf/proto e github.com/mattn/go-isatty e github.com/ugorji/go/codec e gopkg.in/go-playground/validator.v8 e gopkg.in/yaml.v2 pl govendor-example m github.com/json-iterator/go m golang.org/x/sys/unix")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("列出一个包被哪些包引用")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor list -v fmt")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1 2 3 4 5 6 7 8 9")])]),v._v(" "),t("th",[t("code",[v._v("s fmt ├── e github.com/gin-contrib/sse ├── e github.com/gin-gonic/gin ├── e github.com/gin-gonic/gin/render ├── e github.com/golang/protobuf/proto ├── e github.com/ugorji/go/codec ├── e gopkg.in/go-playground/validator.v8 ├── e gopkg.in/yaml.v2 └── pl govendor-example")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("从远程仓库添加或更新某个包("),t("strong",[v._v("不会")]),v._v("在 "),t("code",[v._v("$GOPATH")]),v._v(" 也存一份)")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor fetch golang.org/x/net/context")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("安装指定版本的包")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1 2 3")])]),v._v(" "),t("th",[t("code",[v._v('govendor fetch golang.org/x/net/context@a4bbce9fcae005b22ae5443f6af064d80a6f5a55 govendor fetch golang.org/x/net/context@v1 # Get latest v1.*.* tag or branch. govendor fetch golang.org/x/net/context@=v1 # Get the tag or branch named "v1".')])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("只格式化项目自身代码("),t("code",[v._v("vendor")]),v._v(" 目录下的不变动)")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor fmt +local")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("只构建编译项目内部的包")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor install +local")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("只测试项目内部的测试案例")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor test +local")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("构建所有 "),t("code",[v._v("vendor")]),v._v(" 包")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor install +vendor,^program")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("拉取所有依赖的包到 "),t("code",[v._v("vendor")]),v._v(" 目录(包括 "),t("code",[v._v("$GOPATH")]),v._v(" 存在或不存在的包)")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor fetch +out")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("包已在 "),t("code",[v._v("vendor")]),v._v(" 目录，但想从 "),t("code",[v._v("$GOPATH")]),v._v(" 更新")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor update +vendor")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("已修改了 "),t("code",[v._v("$GOPATH")]),v._v(" 里的某个包，现在想将已修改且未提交的包更新到 "),t("code",[v._v("vendor")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor update -uncommitted")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])]),v._v(" "),t("li",[t("p",[v._v("Fork 了某个包，但尚未合并，该如何引用到最新的代码包")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor fetch github.com/normal/pkg::github.com/myfork/pkg")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])])]),v._v(" "),t("p",[v._v("此时将从 "),t("code",[v._v("myfork")]),v._v(" 拉取代码，而不是 "),t("code",[v._v("normal")]),v._v("。")]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("vendor.json")]),v._v(" 中记录了依赖包信息，该如何拉取更新")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("1")])]),v._v(" "),t("th",[t("code",[v._v("govendor sync")])])])]),v._v(" "),t("tbody",[t("tr",[t("td"),v._v(" "),t("td")])])])])]),v._v(" "),t("h2",{attrs:{id:"govendor-子命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#govendor-子命令"}},[v._v("#")]),v._v(" govendor 子命令")]),v._v(" "),t("p",[v._v("各子命令详细用法可通过 "),t("code",[v._v("govendor COMMAND -h")]),v._v(" 或阅读 "),t("code",[v._v("github.com/kardianos/govendor/context")]),v._v(" 查看源码包如何实现的。")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("子命令")]),v._v(" "),t("th",[v._v("功能")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("init")]),v._v(" "),t("td",[v._v("创建 "),t("code",[v._v("vendor")]),v._v(" 目录和 "),t("code",[v._v("vendor.json")]),v._v(" 文件")])]),v._v(" "),t("tr",[t("td",[v._v("list")]),v._v(" "),t("td",[v._v("列出&过滤依赖包及其状态")])]),v._v(" "),t("tr",[t("td",[v._v("add")]),v._v(" "),t("td",[v._v("从 "),t("code",[v._v("$GOPATH")]),v._v(" 复制包到项目 "),t("code",[v._v("vendor")]),v._v(" 目录")])]),v._v(" "),t("tr",[t("td",[v._v("update")]),v._v(" "),t("td",[v._v("从 "),t("code",[v._v("$GOPATH")]),v._v(" 更新依赖包到项目 "),t("code",[v._v("vendor")]),v._v(" 目录")])]),v._v(" "),t("tr",[t("td",[v._v("remove")]),v._v(" "),t("td",[v._v("从 "),t("code",[v._v("vendor")]),v._v(" 目录移除依赖的包")])]),v._v(" "),t("tr",[t("td",[v._v("status")]),v._v(" "),t("td",[v._v("列出所有缺失、过期和修改过的包")])]),v._v(" "),t("tr",[t("td",[v._v("fetch")]),v._v(" "),t("td",[v._v("从远程仓库添加或更新包到项目 "),t("code",[v._v("vendor")]),v._v(" 目录(不会存储到 "),t("code",[v._v("$GOPATH")]),v._v(")")])]),v._v(" "),t("tr",[t("td",[v._v("sync")]),v._v(" "),t("td",[v._v("根据 "),t("code",[v._v("vendor.json")]),v._v(" 拉取相匹配的包到 "),t("code",[v._v("vendor")]),v._v(" 目录")])]),v._v(" "),t("tr",[t("td",[v._v("migrate")]),v._v(" "),t("td",[v._v("从其他基于 "),t("code",[v._v("vendor")]),v._v(" 实现的包管理工具中一键迁移")])]),v._v(" "),t("tr",[t("td",[v._v("get")]),v._v(" "),t("td",[v._v("与 "),t("code",[v._v("go get")]),v._v(" 类似，将包下载到 "),t("code",[v._v("$GOPATH")]),v._v("，再将依赖包复制到 "),t("code",[v._v("vendor")]),v._v(" 目录")])]),v._v(" "),t("tr",[t("td",[v._v("license")]),v._v(" "),t("td",[v._v("列出所有依赖包的 LICENSE")])]),v._v(" "),t("tr",[t("td",[v._v("shell")]),v._v(" "),t("td",[v._v("可一次性运行多个 "),t("code",[v._v("govendor")]),v._v(" 命令")])])])]),v._v(" "),t("h2",{attrs:{id:"govendor-状态参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#govendor-状态参数"}},[v._v("#")]),v._v(" govendor 状态参数")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("状态")]),v._v(" "),t("th",[v._v("缩写")]),v._v(" "),t("th",[v._v("含义")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("+local")]),v._v(" "),t("td",[v._v("l")]),v._v(" "),t("td",[v._v("本地包，即项目内部编写的包")])]),v._v(" "),t("tr",[t("td",[v._v("+external")]),v._v(" "),t("td",[v._v("e")]),v._v(" "),t("td",[v._v("外部包，即在 "),t("code",[v._v("GOPATH")]),v._v(" 中、却不在项目 "),t("code",[v._v("vendor")]),v._v(" 目录")])]),v._v(" "),t("tr",[t("td",[v._v("+vendor")]),v._v(" "),t("td",[v._v("v")]),v._v(" "),t("td",[v._v("已在 "),t("code",[v._v("vendor")]),v._v(" 目录下的包")])]),v._v(" "),t("tr",[t("td",[v._v("+std")]),v._v(" "),t("td",[v._v("s")]),v._v(" "),t("td",[v._v("标准库里的包")])]),v._v(" "),t("tr",[t("td",[v._v("+excluded")]),v._v(" "),t("td",[v._v("x")]),v._v(" "),t("td",[v._v("明确被排除的外部包")])]),v._v(" "),t("tr",[t("td",[v._v("+unused")]),v._v(" "),t("td",[v._v("u")]),v._v(" "),t("td",[v._v("未使用的包，即在 "),t("code",[v._v("vendor")]),v._v(" 目录下，但项目中并未引用到")])]),v._v(" "),t("tr",[t("td",[v._v("+missing")]),v._v(" "),t("td",[v._v("m")]),v._v(" "),t("td",[v._v("被引用了但却找不到的包")])]),v._v(" "),t("tr",[t("td",[v._v("+program")]),v._v(" "),t("td",[v._v("p")]),v._v(" "),t("td",[v._v("主程序包，即可被编译为执行文件的包")])]),v._v(" "),t("tr",[t("td",[v._v("+outside")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("相当于状态为 "),t("code",[v._v("+external +missing")])])]),v._v(" "),t("tr",[t("td",[v._v("+all")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("所有包")])])])]),v._v(" "),t("p",[v._v("支持状态参数的子命令有："),t("code",[v._v("list")]),v._v("、"),t("code",[v._v("add")]),v._v("、"),t("code",[v._v("update")]),v._v("、"),t("code",[v._v("remove")]),v._v("、"),t("code",[v._v("fetch")])]),v._v(" "),t("h2",{attrs:{id:"go-modules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go-modules"}},[v._v("#")]),v._v(" Go modules")]),v._v(" "),t("p",[v._v("普大喜奔的是，从 Go 1.11 版本开始，官方已内置了更为强大的 "),t("a",{attrs:{href:"https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more",target:"_blank",rel:"noopener noreferrer"}},[v._v("Go modules"),t("OutboundLink")],1),v._v(" 来一统多年来 Go 包依赖管理混乱的局面(Go 官方之前推出的 "),t("a",{attrs:{href:"https://github.com/golang/dep",target:"_blank",rel:"noopener noreferrer"}},[v._v("dep"),t("OutboundLink")],1),v._v(" 工具也几乎胎死腹中)，并且将在 1.13 版本中正式默认开启。")]),v._v(" "),t("p",[v._v("目前已受到社区的看好和强烈推荐，建议新项目采用 Go modules。")]),v._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/kardianos/govendor",target:"_blank",rel:"noopener noreferrer"}},[v._v("govendor 项目"),t("OutboundLink")],1)]),v._v(" "),t("li",[t("a",{attrs:{href:"https://www.jianshu.com/p/e52e3e1ad1c0",target:"_blank",rel:"noopener noreferrer"}},[v._v("golang使用vendor目录来管理依赖包"),t("OutboundLink")],1)]),v._v(" "),t("li",[t("a",{attrs:{href:"https://www.cnblogs.com/liuzhongchao/p/9233177.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("Golang包管理工具之govendor的使用"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=e.exports}}]);