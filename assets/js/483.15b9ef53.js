(window.webpackJsonp=window.webpackJsonp||[]).push([[483],{922:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型"}},[t._v("#")]),t._v(" 模型")]),t._v(" "),a("h2",{attrs:{id:"模型定义-md"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型定义-md"}},[t._v("#")]),t._v(" 模型定义 {#md}")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gorm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Model\n    Birthday     time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n    Age          "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    Name         "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"size:255"`')]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string默认长度为255, 使用这种tag重设。")]),t._v("\n    Num          "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"AUTO_INCREMENT"`')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自增")]),t._v("\n\n    CreditCard        CreditCard      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// One-To-One (拥有一个 - CreditCard表的UserID作外键)")]),t._v("\n    Emails            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Email         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// One-To-Many (拥有多个 - Email表的UserID作外键)")]),t._v("\n\n    BillingAddress    Address         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// One-To-One (属于 - 本表的BillingAddressID作外键)")]),t._v("\n    BillingAddressID  sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NullInt64\n\n    ShippingAddress   Address         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// One-To-One (属于 - 本表的ShippingAddressID作外键)")]),t._v("\n    ShippingAddressID "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n    IgnoreMe          "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"-"`')]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 忽略这个字段")]),t._v("\n    Languages         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Language "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"many2many:user_languages;"`')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Many-To-Many , 'user_languages'是连接表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Email "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ID      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    UserID  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"index"`')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 外键 (属于), tag `index`是为该列创建索引")]),t._v("\n    Email   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"type:varchar(100);unique_index"`')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `type`设置sql类型, `unique_index` 为该列设置唯一索引")]),t._v("\n    Subscribed "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ID       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    Address1 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"not null;unique"`')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置字段为非空并唯一")]),t._v("\n    Address2 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"type:varchar(100);unique"`')]),t._v("\n    Post     sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NullString "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"not null"`')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Language "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ID   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    Name "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"index:idx_name_code"`')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建索引并命名，如果找到其他相同名称的索引则创建组合索引")]),t._v("\n    Code "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"index:idx_name_code"`')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `unique_index` also works")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" CreditCard "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gorm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Model\n    UserID  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("\n    Number  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"约定-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#约定-c"}},[t._v("#")]),t._v(" 约定 {#c}")]),t._v(" "),a("h3",{attrs:{id:"gorm-model-结构体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gorm-model-结构体"}},[t._v("#")]),t._v(" "),a("code",[t._v("gorm.Model")]),t._v(" 结构体")]),t._v(" "),a("p",[t._v("基本模型定义"),a("code",[t._v("gorm.Model")]),t._v("，包括字段"),a("code",[t._v("ID")]),t._v("，"),a("code",[t._v("CreatedAt")]),t._v("，"),a("code",[t._v("UpdatedAt")]),t._v("，"),a("code",[t._v("DeletedAt")]),t._v("，你可以将它嵌入你的模型，或者只写你想要的字段")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基本模型的定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Model "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ID        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"primary_key"`')]),t._v("\n  CreatedAt time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n  UpdatedAt time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n  DeletedAt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加字段 `ID`, `CreatedAt`, `UpdatedAt`, `DeletedAt`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  gorm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Model\n  Name "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只需要字段 `ID`, `CreatedAt`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ID        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("\n  CreatedAt time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n  Name      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"表名是结构体名称的复数形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表名是结构体名称的复数形式"}},[t._v("#")]),t._v(" 表名是结构体名称的复数形式")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认表名是`users`")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置User的表名为`profiles`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TableName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"profiles"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TableName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Role "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin_users"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"users"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局禁用表名复数")]),t._v("\ndb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SingularTable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果设置为true,`User`的默认表名为`user`,使用`TableName`设置的表名不受影响")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"更改默认表名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更改默认表名"}},[t._v("#")]),t._v(" 更改默认表名")]),t._v(" "),a("p",[t._v("您可以通过定义"),a("code",[t._v("DefaultTableNameHandler")]),t._v("对默认表名应用任何规则。")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("gorm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DefaultTableNameHandler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gorm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" defaultTableName "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prefix_"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" defaultTableName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"列名是字段名的蛇形小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列名是字段名的蛇形小写"}},[t._v("#")]),t._v(" 列名是字段名的蛇形小写")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ID "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 列名为 `id`")]),t._v("\n  Name "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 列名为 `name`")]),t._v("\n  Birthday time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 列名为 `birthday`")]),t._v("\n  CreatedAt time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 列名为 `created_at`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重设列名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Animal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    AnimalId    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"column:beast_id"`')]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置列名为`beast_id`")]),t._v("\n    Birthday    time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"column:day_of_the_beast"`')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置列名为`day_of_the_beast`")]),t._v("\n    Age         "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"column:age_of_the_beast"`')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置列名为`age_of_the_beast`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"字段id为主键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字段id为主键"}},[t._v("#")]),t._v(" 字段"),a("code",[t._v("ID")]),t._v("为主键")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ID   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字段`ID`为默认主键")]),t._v("\n  Name "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用tag`primary_key`用来设置主键")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Animal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  AnimalId "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gorm:"primary_key"`')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置AnimalId为主键")]),t._v("\n  Name     "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  Age      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"字段createdat用于存储记录的创建时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字段createdat用于存储记录的创建时间"}},[t._v("#")]),t._v(" 字段"),a("code",[t._v("CreatedAt")]),t._v("用于存储记录的创建时间")]),t._v(" "),a("p",[t._v("创建具有"),a("code",[t._v("CreatedAt")]),t._v("字段的记录将被设置为当前时间")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将会设置`CreatedAt`为当前时间")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 要更改它的值, 你需要使用`Update`")]),t._v("\ndb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Model")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CreatedAt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"字段updatedat用于存储记录的修改时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字段updatedat用于存储记录的修改时间"}},[t._v("#")]),t._v(" 字段"),a("code",[t._v("UpdatedAt")]),t._v("用于存储记录的修改时间")]),t._v(" "),a("p",[t._v("保存具有"),a("code",[t._v("UpdatedAt")]),t._v("字段的记录将被设置为当前时间")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Save")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将会设置`UpdatedAt`为当前时间")]),t._v("\ndb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Model")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jinzhu"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将会设置`UpdatedAt`为当前时间")]),t._v("\n")])])]),a("h3",{attrs:{id:"字段deletedat用于存储记录的删除时间，如果字段存在"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字段deletedat用于存储记录的删除时间，如果字段存在"}},[t._v("#")]),t._v(" 字段"),a("code",[t._v("DeletedAt")]),t._v("用于存储记录的删除时间，如果字段存在")]),t._v(" "),a("p",[t._v("删除具有"),a("code",[t._v("DeletedAt")]),t._v("字段的记录，它不会冲数据库中删除，但只将字段"),a("code",[t._v("DeletedAt")]),t._v("设置为当前时间，并在查询时无法找到记录，请参阅"),a("RouterLink",{attrs:{to:"/golang/gobook/gormdoc/crud.html#sd"}},[t._v("软删除")])],1)])}),[],!1,null,null,null);s.default=e.exports}}]);