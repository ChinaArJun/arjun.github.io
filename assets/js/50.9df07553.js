(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{488:function(t,s,a){"use strict";a.r(s);var e=a(44),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-生成fabric证书"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-生成fabric证书"}},[t._v("#")]),t._v(" 1. 生成Fabric证书")]),t._v(" "),a("blockquote",[a("p",[t._v("我们可以自己组建一个Fabric网路, 网络结构如下:")]),t._v(" "),a("p",[t._v("网络中唯一的通道:   itcastchannel")]),t._v(" "),a("ul",[a("li",[t._v("排序节点 1 个 -> 测试\n"),a("ul",[a("li",[t._v("排序节点组织名: OrgOrderer")]),t._v(" "),a("li",[t._v(".....组织ID:  OrgOrdererMSP")]),t._v(" "),a("li",[t._v("排序节点组织访问的根域名:\n"),a("ul",[a("li",[t._v("itcast.com")])])]),t._v(" "),a("li",[t._v("排序节点组织中唯一的节点访问二级域名:\n"),a("ul",[a("li",[t._v("orderer.itcast.com")])])])])]),t._v(" "),a("li",[t._v("组织个数 2 个, 分别为go和cpp, 每个组织分别有两个peer节点, 用户个数为3\n"),a("ul",[a("li",[t._v("go组织\n"),a("ul",[a("li",[t._v("组织名: OrgGo")]),t._v(" "),a("li",[t._v("组织ID: OrgGoMSP")]),t._v(" "),a("li",[t._v("访问组织的域名: orggo.itcast.com")]),t._v(" "),a("li",[t._v("锚节点: peer0这个节点")])])]),t._v(" "),a("li",[t._v("cpp组织\n"),a("ul",[a("li",[t._v("组织名: OrgCpp")]),t._v(" "),a("li",[t._v("组织ID: OrgCppMSP")]),t._v(" "),a("li",[t._v("访问组织的域名: orgcpp.itcast.com")]),t._v(" "),a("li",[t._v("锚节点: peer1这个节点")])])])])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("机构名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("组织标识符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("组织ID")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("Go学科")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("OrgGo")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("OrgGoMSP")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("CPP")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("OrgCpp")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("OrgCppMSP")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-1-命令介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-命令介绍"}},[t._v("#")]),t._v(" 1.1 命令介绍")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ cryptogen --help\n$ cryptogen generate --config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("配置文件\n")])])]),a("h3",{attrs:{id:"_1-2-配置文件的编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-配置文件的编写"}},[t._v("#")]),t._v(" 1.2 配置文件的编写")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# crypto-config.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "OrdererOrgs" - Definition of organizations managing orderer nodes')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OrdererOrgs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Orderer")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgOrderer\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Domain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" itcast.com\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "Specs" - See PeerOrgs below for complete description')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Specs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Hostname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orderer\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "PeerOrgs" - Definition of organizations managing peer nodes')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("PeerOrgs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Org1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgGo\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Domain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("EnableNodeOUs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "CA"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment this section to enable the explicit definition of the CA for this")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# organization.  This entry is a Spec.  See "Specs" section below for details.')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CA:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    Hostname: ca # implicitly ca.org1.example.com")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    Country: US")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    Province: California")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    Locality: San Francisco")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    OrganizationalUnit: Hyperledger Fabric")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    StreetAddress: address for org # default nil")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    PostalCode: postalCode for org # default nil")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "Specs"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment this section to enable the explicit definition of hosts in your")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# configuration.  Most users will want to use Template, below")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specs is an array of Spec entries.  Each Spec entry consists of two fields:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - Hostname:   (Required) The desired hostname, sans the domain.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - CommonName: (Optional) Specifies the template or explicit override for")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                 the CN.  By default, this is the template:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#                              "{{.Hostname}}.{{.Domain}}"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                 which obtains its values from the Spec.Hostname and")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                 Org.Domain, respectively.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - SANS:       (Optional) Specifies one or more Subject Alternative Names")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                 to be set in the resulting x509. Accepts template")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                 variables {{.Hostname}}, {{.Domain}}, {{.CommonName}}. IP")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                 addresses provided here will be properly recognized. Other")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                 values will be taken as DNS names.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                 NOTE: Two implicit entries are created for you:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                     - {{ .CommonName }}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                     - {{ .Hostname }}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specs:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   - Hostname: foo # implicitly "foo.org1.example.com"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     CommonName: foo27.org5.example.com # overrides Hostname-based FQDN set above")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     SANS:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#       - "bar.{{.Domain}}"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#       - "altfoo.{{.Domain}}"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#       - "{{.Hostname}}.org6.net"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       - 172.16.10.31")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - Hostname: bar")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - Hostname: baz")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "Template"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Allows for the definition of 1 or more hosts that are created sequentially")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# from a template. By default, this looks like "peer%d" from 0 to Count-1.')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You may override the number of nodes (Count), the starting index (Start)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or the template used to construct the name (Hostname).")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Note: Template and Specs are not mutually exclusive.  You may define both")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sections and the aggregate nodes will be created for you.  Take care with")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# name collisions")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start: 5")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Hostname: {{.Prefix}}{{.Index}} # default")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SANS:")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   - "{{.Hostname}}.alt.{{.Domain}}"')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "Users"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Count: The number of user accounts _in addition_ to Admin")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Users")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Org2: See "Org1" for full specification')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------------------------------------------------")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgCpp\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Domain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("EnableNodeOUs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Users")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-3-证书文件的生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-证书文件的生成"}},[t._v("#")]),t._v(" 1.3 证书文件的生成")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\n")])])]),a("h2",{attrs:{id:"_2-创始块文件和通道文件的生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创始块文件和通道文件的生成"}},[t._v("#")]),t._v(" 2. 创始块文件和通道文件的生成")]),t._v(" "),a("h3",{attrs:{id:"_2-1-命令介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-命令介绍"}},[t._v("#")]),t._v(" 2.1 命令介绍")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ configtxgen --help \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定生成的创始块文件的名字")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-outputBlock string"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定创建的通道的名字/ID")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-channelID string"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定生成的通道文件的名字")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-outputCreateChannelTx string"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定configtx.yaml的Profiles中的关键字")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-profile string"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成锚节点更新文件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-outputAnchorPeersUpdate string"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定组织的名字")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-asOrg string"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-2-配置文件编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-配置文件编写"}},[t._v("#")]),t._v(" 2.2 配置文件编写")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# configtx.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Section: Organizations")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - This section defines the different organizational identities which will")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Section: Organizations")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - This section defines the different organizational identities which will")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   be referenced later in the configuration.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SampleOrg defines an MSP using the sampleconfig.  It should never be used")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in production but may be used as a template for other definitions")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrdererOrg")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DefaultOrg defines the organization which is used in the sampleconfig")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# of the fabric.git development environment")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgOrderer\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ID to load the MSP definition as")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgOrdererMSP\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# MSPDir is the filesystem path which contains the MSP configuration")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MSPDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/ordererOrganizations/itcast.com/msp\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrgGo")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DefaultOrg defines the organization which is used in the sampleconfig")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# of the fabric.git development environment")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgGo\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ID to load the MSP definition as")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgGoMSP\n\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MSPDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.itcast.com/msp\n\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("AnchorPeers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# AnchorPeers defines the location of peers which can be used")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for cross org gossip communication.  Note, this value is only")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# encoded in the genesis block in the Application section context")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orggo.itcast.com\n              "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrgCpp")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DefaultOrg defines the organization which is used in the sampleconfig")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ID to load the MSP definition as")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgGoMSP\n\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MSPDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.itcast.com/msp\n\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("AnchorPeers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# AnchorPeers defines the location of peers which can be used")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for cross org gossip communication.  Note, this value is only")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# encoded in the genesis block in the Application section context")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orggo.itcast.com\n              "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrgCpp")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DefaultOrg defines the organization which is used in the sampleconfig")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# of the fabric.git development environment")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgCpp\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ID to load the MSP definition as")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgCppMSP\n\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MSPDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orgcpp.itcast.com/msp\n\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("AnchorPeers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# AnchorPeers defines the location of peers which can be used")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for cross org gossip communication.  Note, this value is only")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# encoded in the genesis block in the Application section context")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orgcpp.itcast.com\n              "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   SECTION: Capabilities")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - This section defines the capabilities of fabric network. This is a new")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   concept as of v1.1.0 and should not be utilized in mixed networks with")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   v1.0.x peers and orderers.  Capabilities define features which must be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   present in a fabric binary for that binary to safely participate in the")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   fabric network.  For instance, if a new MSP type is added, newer binaries")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   might recognize and validate the signatures from this type, while older")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   binaries without this support would be unable to validate those")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   transactions.  This could lead to different versions of the fabric binaries")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   having different world states.  Instead, defining a capability for a channel")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   informs those binaries without this capability that they must cease")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   processing transactions until they have been upgraded.  For v1.0.x if any")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   capabilities are defined (including a map with all capabilities turned off)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   then the v1.0.x peer will deliberately crash.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Capabilities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Channel capabilities apply to both the orderers and the peers and must be")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# supported by both.  Set the value of the capability to true to require it.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Global")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&ChannelCapabilities")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# V1.1 for Global is a catchall flag for behavior which has been")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# determined to be desired for all orderers and peers running v1.0.x,")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# but the modification of which would cause incompatibilities.  Users")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# should leave this flag set to true.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("V1_1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Orderer capabilities apply only to the orderers, and may be safely")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# manipulated without concern for upgrading peers.  Set the value of the")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# capability to true to require it.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Orderer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrdererCapabilities")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# V1.1 for Order is a catchall flag for behavior which has been")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# determined to be desired for all orderers running v1.0.x, but the")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# modification of which  would cause incompatibilities.  Users should")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# leave this flag set to true.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("V1_1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Application capabilities apply only to the peer network, and may be safely")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# manipulated without concern for upgrading orderers.  Set the value of the")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# capability to true to require it.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&ApplicationCapabilities")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# V1.2 for Application is a catchall flag for behavior which has been")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# determined to be desired for all peers running v1.0.x, but the")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# modification of which would cause incompatibilities.  Users should")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# leave this flag set to true.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("V1_2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   SECTION: Application")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - This section defines the values to encode into a config transaction or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   genesis block for application related parameters")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&ApplicationDefaults")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Organizations is the list of orgs which are defined as participants on")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the application side of the network")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   SECTION: Orderer")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - This section defines the values to encode into a config transaction or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   genesis block for orderer related parameters")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Orderer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrdererDefaults")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Orderer Type: The orderer implementation to start")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Available types are "solo" and "kafka"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OrdererType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solo\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Addresses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" orderer.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7050")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Orderer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrdererDefaults")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Orderer Type: The orderer implementation to start")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Available types are "solo" and "kafka"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OrdererType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solo\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Addresses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" orderer.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7050")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Batch Timeout: The amount of time to wait before creating a batch")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BatchTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2s\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Batch Size: Controls the number of messages batched into a block")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BatchSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Max Message Count: The maximum number of messages to permit in a batch")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MaxMessageCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Absolute Max Bytes: The absolute maximum number of bytes allowed for")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the serialized messages in a batch.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("AbsoluteMaxBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 32 MB\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Preferred Max Bytes: The preferred maximum number of bytes allowed for")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the serialized messages in a batch. A message larger than the preferred")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# max bytes will result in a batch larger than preferred max bytes.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("PreferredMaxBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 512 KB\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Kafka")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Brokers: A list of Kafka brokers to which the orderer connects")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NOTE: Use IP:port notation")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Brokers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9092")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Organizations is the list of orgs which are defined as participants on")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the orderer side of the network")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Profile")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - Different configuration profiles may be encoded here to be specified")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   as parameters to the configtxgen tool")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Profiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Genesis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Capabilities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*ChannelCapabilities")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Orderer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrdererDefaults")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrdererOrg")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Capabilities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrdererCapabilities")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Consortiums")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SampleConsortium")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrgGo")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrgCpp")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Channel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Consortium")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SampleConsortium\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*ApplicationDefaults")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrgGo")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrgCpp")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Capabilities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*ApplicationCapabilities")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-3-文件生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-文件生成"}},[t._v("#")]),t._v(" 2.3 文件生成")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("生成创始块文件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创始块文件的名字自己指定, 后缀 block")]),t._v("\n$ configtxgen -profile Genesis -outputBlock genesis.block\n")])])])]),t._v(" "),a("li",[a("p",[t._v("生成通道文件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通道文件名字字节指定, 后缀 tx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -channelID 对应的通道名, 如果没有指定, 会使用默认的名字 -> mychannel")]),t._v("\n$ configtxgen -profile Channel -outputCreateChannelTx channel.tx -channelID itcastchannel\n")])])])]),t._v(" "),a("li",[a("p",[t._v("生成锚节点更新文件 -> "),a("font",{attrs:{color:"red"}},[t._v("这个操作可选, 不是必须做的, 锚节点发生变化, 必须要做")])],1),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ configtxgen -profile Channel -outputAnchorPeersUpdate goAnchorPeer.tx -channelID itcastchannel -asOrg OrgGo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("这是组织名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新cpp组织")]),t._v("\nconfigtxgen -profile Channel -outputAnchorPeersUpdate cppAnchorPeer.tx -channelID itcastchannel -asOrg OrgCpp\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"_3-docker-compose启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-compose启动容器"}},[t._v("#")]),t._v(" 3. docker-compose启动容器")]),t._v(" "),a("h3",{attrs:{id:"_3-1-orderer节点使用的环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-orderer节点使用的环境变量"}},[t._v("#")]),t._v(" 3.1 orderer节点使用的环境变量")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("ORDERER_GENERAL_LOGLEVEL\n - 日志级别, 级别越高, 写的日志越少\n - `critical "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" error "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" warning "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" notice "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" debug\nORDERER_GENERAL_LISTENADDRESS\n - 当前orderer节点监听的地址, 指定当前orderer节点对应的主机地址即可, 也可以写0.0.0.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" 自动绑定\nORDERER_GENERAL_GENESISMETHOD\n - 生成创始区块的时候, 数据来源\n - 帮赋值为 file, 数据来自于文件\nORDERER_GENERAL_GENESISFILE\n - 创始块文件, 从宿主机挂载到orderer节点的\nORDERER_GENERAL_LOCALMSPID\n - 当前orderer节点的组织ID, 从configtx.yaml中找\nORDERER_GENERAL_LOCALMSPDIR\n - 当前orderer节点的msp账号目录\n - crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp\nORDERER_GENERAL_TLS_ENABLED\n - 通信过程中是否需要加密, 值: true/false\nORDERER_GENERAL_TLS_PRIVATEKEY\n - TLS通信使用的私钥\nORDERER_GENERAL_TLS_CERTIFICATE\n - TLS通信的证书文件\nORDERER_GENERAL_TLS_ROOTCAS\n - TLS通信的根证书\n查找目录参考:\ncrypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls\n")])])]),a("h3",{attrs:{id:"_3-2-peer节点使用的环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-peer节点使用的环境变量"}},[t._v("#")]),t._v(" 3.2 peer节点使用的环境变量")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("CORE_PEER_ID\n - 当前peer节点的名字, 随便起名\nCORE_PEER_ADDRESS\n - 当前peer节点的地址, 书写格式: IP/域名:端口"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCORE_PEER_GOSSIP_BOOTSTRAP\n - 当前节点连接那个节点进行数据传播\n - 值是一个节点的地址: ip/域名:端口\n - 如果当前peer节点是组织中启动的第一个节点: 需要指定自己的地址\n - 如果当前peer节点不是组织中启动的第一个节点: 可以是自己, 或者是当前组织中任意其他节点\nCORE_PEER_GOSSIP_EXTERNALENDPOINT\n - 设置当前节点是否被外部感知\n - 值就是当前节点的地址: IP/域名:端口"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCORE_PEER_LOCALMSPID\n - 当前节点所属的组织的组织ID\n - 在configtx.yaml\nCORE_VM_ENDPOINT\n - 对应是本地的一个套接字文件: docker.sock, 这个文件是给docker服务器使用的\n - 值是固定的: unix:///host/var/run/docker.sock\nCORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE\n - 容器启动所在的网络的名字\n - 通过docker network "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" 查看\nCORE_LOGGING_LEVEL\n - 日志级别\nCORE_PEER_TLS_ENABLED\n - 是否使用tls加密\nCORE_PEER_GOSSIP_USELEADERELECTION\n - 是不是自动选择leader节点\n - leader节点: 代表组织和orderer节点通信\n - 选择leader节点有两种方式: \n    - 系统选择: 选择的挂了, 重新选择一个\n    - 手动指定: 指定的挂了, leader节点就没有了\n - true: 系统选择, false: 手动指定\nCORE_PEER_GOSSIP_ORGLEADER\n - 当前peer节点是不是leader节点\n - 值true/false\n - 如果CORE_PEER_GOSSIP_USELEADERELECTION"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n  \tCORE_PEER_GOSSIP_ORGLEADER "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n - 如果CORE_PEER_GOSSIP_USELEADERELECTION"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n    CORE_PEER_GOSSIP_ORGLEADER "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 在某一个节点中指定为true, 其余false\nCORE_PEER_PROFILE_ENABLED\n - 值为true/fasle\n - 在peer内部又一PROFILE服务器, 指定这个服务器默认开启还是关闭, 一般设置为true\nCORE_PEER_TLS_CERT_FILE\n - tls通信使用的证书\nCORE_PEER_TLS_KEY_FILE\n - tls通信私钥文件\nCORE_PEER_TLS_ROOTCERT_FILE\n - tls根证书文件\n")])])]),a("h3",{attrs:{id:"_3-3-客户端节点使用的环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-客户端节点使用的环境变量"}},[t._v("#")]),t._v(" 3.3 客户端节点使用的环境变量")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("GOPATH\n - 在客户端容器中 go 的工作目录\nCORE_VM_ENDPOINT\n - 对用宿主机的本地套接字文件 docker.sock\n - unix:///host/var/run/docker.sock, 值 是固定的\nCORE_LOGGING_LEVEL\n - 客户端日志级别\nCORE_PEER_ID\n - 当前客户端节点的名字, 字节起名\nCORE_PEER_ADDRESS\n - 当前客户端要连接的peer节点的地址\n - IP/域名:端口"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nCORE_PEER_LOCALMSPID\n - 要连接的peer节点所属的组织的组织ID\nCORE_PEER_TLS_ENABLED\n - 通信的时候是不是使用tls加密\nCORE_PEER_TLS_CERT_FILE\n - tls通信的证书\nCORE_PEER_TLS_KEY_FILE\n - tls通信使用的私钥文件\nCORE_PEER_TLS_ROOTCERT_FILE\n - tls通信根证书文件\nCORE_PEER_MSPCONFIGPATH\n - 访问peer节点对用的用户的账号信息\n - 示例目录: crypto-config/peerOrganizations/orggo.example.com/users/Admin@orggo.example.com/msp\n")])])]),a("h3",{attrs:{id:"_3-4-配置文件编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-配置文件编写"}},[t._v("#")]),t._v(" 3.4 配置文件编写")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Copyright IBM Corp. All Rights Reserved.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SPDX-License-Identifier: Apache-2.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("orderer.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("byfn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("orderer.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orderer.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orderer.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cli")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cli\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hyperledger/fabric"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tools\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stdin_open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" GOPATH=/opt/gopath\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_VM_ENDPOINT=unix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("///host/var/run/docker.sock\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#- CORE_LOGGING_LEVEL=DEBUG")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_LOGGING_LEVEL=INFO\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ID=cli\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ADDRESS=peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_LOCALMSPID=OrgGoMSP\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_ENABLED=true\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/server.crt\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/server.key\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/ca.crt\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/users/Admin@orggo.itcast.com/msp\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("working_dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/gopath/src/github.com/hyperledger/fabric/peer\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /bin/bash\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/host/var/run/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./chaincode/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/opt/gopath/src/github.com/chaincode\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifacts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifacts\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" orderer.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer0.orggo.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer1.orggo.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer0.orgcpp.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer1.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n")])])]),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose-base.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Copyright IBM Corp. All Rights Reserved.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SPDX-License-Identifier: Apache-2.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("orderer.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orderer.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hyperledger/fabric"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("orderer\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_LOGLEVEL=INFO\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_LISTENADDRESS=0.0.0.0\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_GENESISMETHOD=file\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_LOCALMSPID=OrgOrdererMSP\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enabled TLS")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_TLS_ENABLED=true\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_TLS_ROOTCAS="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("/var/hyperledger/orderer/tls/ca.crt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("working_dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/gopath/src/github.com/hyperledger/fabric\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orderer\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifacts/genesis.block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/orderer/orderer.genesis.block\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/ordererOrganizations/itcast.com/orderers/orderer.itcast.com/msp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/orderer/msp\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/ordererOrganizations/itcast.com/orderers/orderer.itcast.com/tls/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/orderer/tls\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" orderer.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/production/orderer\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 7050"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7050")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ID=peer0.orggo.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ADDRESS=peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_BOOTSTRAP=peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_LOCALMSPID=OrgGoMSP\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/host/var/run/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/msp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/msp\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/tls\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/production\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 7051"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 7053"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ID=peer1.orggo.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ADDRESS=peer1.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_BOOTSTRAP=peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_LOCALMSPID=OrgGoMSP\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/host/var/run/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.itcast.com/peers/peer1.orggo.itcast.com/msp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/msp\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.itcast.com/peers/peer1.orggo.itcast.com/tls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/tls\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer1.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/production\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8051"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8053"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ID=peer0.orgcpp.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ADDRESS=peer0.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_BOOTSTRAP=peer0.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_LOCALMSPID=OrgCppMSP\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/host/var/run/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orgcpp.itcast.com/peers/peer0.orgcpp.itcast.com/msp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/msp\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orgcpp.itcast.com/peers/peer0.orgcpp.itcast.com/tls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/tls\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer0.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/production\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 9051"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 9053"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ID=peer1.orgcpp.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ADDRESS=peer1.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_BOOTSTRAP=peer0.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_LOCALMSPID=OrgCppMSP\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/host/var/run/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orgcpp.itcast.com/peers/peer1.orgcpp.itcast.com/msp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/msp\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orgcpp.itcast.com/peers/peer1.orgcpp.itcast.com/tls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/tls\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer1.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/production\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 10051"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 10053"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("\n\n")])])]),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# peer-base.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Copyright IBM Corp. All Rights Reserved.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SPDX-License-Identifier: Apache-2.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer-base")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hyperledger/fabric"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("peer\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_VM_ENDPOINT=unix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("///host/var/run/docker.sock\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the following setting starts chaincode containers on the same")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bridge network as the peers")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://docs.docker.com/compose/networking/")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("COMPOSE_PROJECT_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("_byfn\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_LOGGING_LEVEL=INFO\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#- CORE_LOGGING_LEVEL=DEBUG")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_ENABLED=true\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_USELEADERELECTION=true\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_ORGLEADER=false\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_PROFILE_ENABLED=true\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("working_dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/gopath/src/github.com/hyperledger/fabric/peer\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer node start\n\n")])])]),a("h3",{attrs:{id:"_3-5-启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-启动容器"}},[t._v("#")]),t._v(" 3.5 启动容器")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动")]),t._v("\n$ docker-compose up -d\nCreating network "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_byfn"')]),t._v(" with the default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer1.orggo.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer0.orgcpp.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_orderer.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer0.orggo.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer1.orgcpp.itcast.com"')]),t._v(" with default driver\nCreating peer0.orgcpp.itcast.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating peer1.orgcpp.itcast.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating peer0.orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating peer1.orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating orderer.itcast.com      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating cli                     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器查看")]),t._v("\n$ docker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n         Name                 Command       State                        Ports                      \n----------------------------------------------------------------------------------------------------\ncli                       /bin/bash         Up                                                      \norderer.itcast.com        orderer           Up      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:7050-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7050")]),t._v("/tcp                          \npeer0.orgcpp.itcast.com   peer node start   Up      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:9051-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("/tcp, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:9053-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("/tcp  \npeer0.orggo.itcast.com    peer node start   Up      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:7051-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("/tcp, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:7053-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("/tcp  \npeer1.orgcpp.itcast.com   peer node start   Up      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:10051-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("/tcp, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:10053-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("/tcp\npeer1.orggo.itcast.com    peer node start   Up      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:8051-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("/tcp, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:8053-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("/tcp\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭")]),t._v("\n$ docker-compose down -v   \nStopping cli                     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nStopping peer1.orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nStopping orderer.itcast.com      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nStopping peer0.orgcpp.itcast.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nStopping peer1.orgcpp.itcast.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nStopping peer0.orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nRemoving cli                     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nRemoving peer1.orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nRemoving orderer.itcast.com      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nRemoving peer0.orgcpp.itcast.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nRemoving peer1.orgcpp.itcast.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nRemoving peer0.orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nRemoving network itcast_byfn\nRemoving volume itcast_peer1.orggo.itcast.com\nRemoving volume itcast_peer0.orgcpp.itcast.com\nRemoving volume itcast_orderer.itcast.com\nRemoving volume itcast_peer0.orggo.itcast.com\nRemoving volume itcast_peer1.orgcpp.itcast.com\ngo@kevin:~/itcast$ docker-compose up -d\nCreating network "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_byfn"')]),t._v(" with the default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer1.orggo.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer0.orgcpp.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_orderer.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer0.orggo.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer1.orgcpp.itcast.com"')]),t._v(" with default driver\nCreating peer0.orgcpp.itcast.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating peer1.orgcpp.itcast.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating peer0.orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating peer1.orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating orderer.itcast.com      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating cli                     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("WARNING: The COMPOSE_PROJECT_NAME variable is not set. Defaulting to a blank string.\nCreating network "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_byfn"')]),t._v(" with the default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer1.orggo.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer0.orgcpp.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_orderer.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer0.orggo.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"itcast_peer1.orgcpp.itcast.com"')]),t._v(" with default driver\n-- 创建的网络命名:\n - 根据当前docker-compose启动的目录来对网络进行命名的\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("itcast_byfn  -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 创建出来的网络名\n")])])]),a("h2",{attrs:{id:"_4-peer操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-peer操作"}},[t._v("#")]),t._v(" 4. Peer操作")]),t._v(" "),a("blockquote",[a("p",[t._v("对peer节点的操作, 都是通过客户端连接对应的peer节点,")]),t._v(" "),a("ul",[a("li",[t._v("完成通道的创建")]),t._v(" "),a("li",[t._v("加入通道")]),t._v(" "),a("li",[t._v("安装链码")]),t._v(" "),a("li",[t._v("初始化链码")]),t._v(" "),a("li",[t._v("链码调用")]),t._v(" "),a("li",[t._v("数据查询")])]),t._v(" "),a("p",[t._v("而不是直接进入到peer节点上进行操作的")]),t._v(" "),a("p",[t._v("docker exec -it peer节点容器名 bash   -> 不这样操作")]),t._v(" "),a("p",[t._v("首先要进入到客户端容器中")]),t._v(" "),a("p",[t._v("docker exec -it cli bash")]),t._v(" "),a("p",[t._v("通过客户端连接到任意一个peer节点上就可以进行创建通道的操作了")])]),t._v(" "),a("h3",{attrs:{id:"_4-1-创建通道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-创建通道"}},[t._v("#")]),t._v(" 4.1 创建通道")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通道创建操作, 只需要操作一次")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建通道的操作执行一次就可以了, 执行完成之后, 会生成一个通道文件")]),t._v("\n$ peer channel create "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", 常用参数为:\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-o, --orderer: orderer节点的地址\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-c, --channelID: 要创建的通道的ID, 必须小写, 在250个字符以内\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-f, --file: 由configtxgen 生成的通道文件, 用于提交给orderer\n\t-t, --timeout: 创建通道的超时时长, 默认为5s\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("--tls: 通信时是否使用tls加密\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("--cafile: 当前orderer节点pem格式的tls证书文件, 要使用绝对路径.\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# orderer节点pem格式的tls证书文件路径参考: ")]),t._v("\ncrypto-config/ordererOrganizations/itcast.com/orderers/orderer.itcast.com/msp/tlscacerts/tlsca.itcast.com-cert.pem\n\n$ peer channel create -o orderer节点地址"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("orderer.itcast.com:7050"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -c itcastchannel -f channel.tx --tls "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" --cafile \n\t-o: orderer节点地址, orderer.itcast.com:7050\n\t-c: itcastchannel\n\t-f: 通道文件, ./channel-artifacts/channel.tx -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 容器路径\n\t--tls: true/false\n\t--cafile: 根据容器路径进行查找, 要用绝对路径\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CAFILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/itcast.com/orderers/orderer.itcast.com/msp/tlscacerts/tlsca.itcast.com-cert.pem\n$ peer channel create -o orderer.itcast.com:7050 -c itcastchannel -f ./channel-artifacts/channel.tx --tls "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" --cafile $CAFILE\n\n$ root@f409ce0ade91:/opt/gopath/src/github.com/hyperledger/fabric/peer"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\nchannel-artifacts  crypto  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("itcastchannel.block -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 通道创建成功之后, 生成的文件\n")])])]),a("h3",{attrs:{id:"_4-2-加入通道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-加入通道"}},[t._v("#")]),t._v(" 4.2 加入通道")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前网络中所有peer节点都需要加入到通道中, 都是通过客户端操作来完成的")]),t._v("\n$ peer channel join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", 常用参数为:\n\t`-b, --blockpath: 通过 peer channel create 命令生成的通道文件 \n$ peer channel "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" -b itcastchannel.block -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 当前节点加入到了通道中\n")])])]),a("h3",{attrs:{id:"_4-3-更新锚节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-更新锚节点"}},[t._v("#")]),t._v(" 4.3 更新锚节点")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前组织的锚节点发生变化的时候, 才需要更新")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个组织的锚节点更新需要依次做")]),t._v("\n$ peer channel update "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", 常用参数为:\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-o, --orderer: orderer节点的地址\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-c, --channelID: 要创建的通道的ID, 必须小写, 在250个字符以内\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-f, --file: 由configtxgen 生成的组织锚节点文件, 用于提交给orderer\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("--tls: 通信时是否使用tls加密\n\t`--cafile: 当前orderer节点pem格式的tls证书文件, 要使用绝对路径.\n$ peer channel update -o orderer.itcast.com:7050 -c itcastchannel -f ./channel-artifacts/goAnchorPeer.tx --tls "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" --cafile "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CAFILE")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-4-安装链码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-安装链码"}},[t._v("#")]),t._v(" 4.4 安装链码")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个peer节点都需要安装链码, 链码安装完成, peer节点才能根据业务逻辑对账本进程操作")]),t._v("\n$ peer chaincode "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", 常用参数为:\n\t-c, --ctor: JSON格式的构造参数, 默认是"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{}"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-l, --lang: 编写chaincode的编程语言, 默认值是 golang\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-n, --name: chaincode的名字\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-p, --path: chaincode源代码的目录, 从 $GOPATH/src 路径后开始写\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-v, --version: 当前操作的chaincode的版本, 适用这些命令install/instantiate/upgrade\n$ peer chaincode "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -l golang -n itcastcc -p github.com/chaincode -v v1.0\n")])])]),a("h3",{attrs:{id:"_4-5-链码初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-链码初始化"}},[t._v("#")]),t._v(" 4.5 链码初始化")]),t._v(" "),a("blockquote",[a("p",[t._v("背书策略:")]),t._v(" "),a("ul",[a("li",[t._v("背书: 交易被确认的过程")]),t._v(" "),a("li",[t._v("fabric网络中交易执行需要先模拟交易, 模拟交易的过程就是背书的过程, 这个过程会按照指定的背书策略来执行")])]),t._v(" "),a("p",[t._v("两个组织,")]),t._v(" "),a("ul",[a("li",[t._v("go\n"),a("ul",[a("li",[t._v("peer0.orggo.itcast.com")]),t._v(" "),a("li",[t._v("peer1.orggo.itcast.com")])])]),t._v(" "),a("li",[t._v("cpp\n"),a("ul",[a("li",[t._v("peer0.orgcpp.itcast.com")]),t._v(" "),a("li",[t._v("peer1.orgcpp.itcast.com")])])])]),t._v(" "),a("p",[t._v("交易方式：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Go组织里边的节点同意， 即可完成")]),t._v(" "),a("p",[t._v("OR （go组织.成员）")]),t._v(" "),a("p",[t._v("​\t组织ID.member")])]),t._v(" "),a("li",[a("p",[t._v("Cpp组织里边的节点同意， 即可完成")]),t._v(" "),a("p",[t._v("OR（cpp组织.成员）")])]),t._v(" "),a("li",[a("p",[t._v("Go组织和Cpp组织里边的节点同意， 即可完成")]),t._v(" "),a("p",[t._v("AND (go组织.成员, cpp组织.成员)")])])])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 链码的初始化, 只需要做一次")]),t._v("\n$ peer chaincode instantiate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", 常用参数为:\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-o, --orderer: orderer节点的地址\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-C，--channelID：当前命令运行的通道，默认值是“testchainid"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"。\n\t'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-c, --ctor：JSON格式的构造参数，默认值是“"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n\t'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-l，--lang：编写Chaincode的编程语言，默认值是golang\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-n，--name：Chaincode的名字。\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-P，--policy：当前Chaincode的背书策略。\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-v，--version：当前操作的Chaincode的版本，适用于install/instantiate/upgrade等命令\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("--tls: 通信时是否使用tls加密\n\t`--cafile: 当前orderer节点pem格式的tls证书文件, 要使用绝对路径.\n $ peer chaincode instantiate -o orderer.itcast.com:7050 -C itcastchannel -l golang -n itcastcc -v v1.0 --tls true --cafile "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CAFILE")]),t._v(' -P "')]),t._v("AND "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OrgGoMSP.member'")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OrgCppMSP.member'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" -c \'{"')]),t._v("Args"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":["')]),t._v("init"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("a"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("b"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]}\'\n   - init -> 链码中的初始化函数\n   - "')]),t._v("a"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("b"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" -> init函数的参数\n   - 链码中的操作:\n     "')]),t._v("a"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":100\n     "')]),t._v("b"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":200\n     将这两个数据写入账本中\n     \nCAFILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/itcast.com/orderers/orderer.itcast.com/msp/tlscacerts/tlsca.itcast.com-cert.pem\npeer chaincode instantiate -o orderer.itcast.com:7050 -C testchannel -l golang -n testcc -v 1.0 --tls true --cafile '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CAFILE")]),t._v(' -P "')]),t._v("AND "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OrgGoMSP.member'")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OrgCppMSP.member'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" -c \'{"')]),t._v("Args"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":["')]),t._v("init"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("a"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v("b"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("'     \n")])])]),a("h3",{attrs:{id:"_4-6-查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-查询"}},[t._v("#")]),t._v(" 4.6 查询")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ peer chaincode query "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", 常用参数为:\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-n，--name：Chaincode的名字。\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-C，--channelID：当前命令运行的通道，默认值是“testchainid"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\n\t`-c, --ctor：JSON格式的构造参数，默认值是“{}"')]),t._v("\n\t-x，--hex：是否对输出的内容进行编码处理\n\t-r，--raw：是否输出二进制内容\n\t-t, --tid: 指定当前查询的编号\n$ peer chaincode query -n itcastcc -C itcastchannel -c "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"Args":["query", "a"]}\'')]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-7-交易"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-交易"}},[t._v("#")]),t._v(" 4.7 交易")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ peer chaincode invoke "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", 常用参数为:\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-o, --orderer: orderer节点的地址\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-C，--channelID：当前命令运行的通道，默认值是“testchainid"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\n\t'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("-c, --ctor：JSON格式的构造参数，默认值是“"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n\t'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-n，--name：Chaincode的名字\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("--tls: 通信时是否使用tls加密\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("--cafile: 当前orderer节点pem格式的tls证书文件, 要使用绝对路径.\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("--peerAddresses: 指定要连接的peer节点的地址\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("--tlsRootCertFiles: 连接的peer节点的TLS根证书, 必须是绝对路径\n# 连接的peer节点的TLS根证书查找路径参考:\n/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/ca.crt\n# example\n# -c '{\"")]),t._v("Args"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":["')]),t._v("invoke"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v("a"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v("b"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"]}'\nROORCERT1=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/ca.crt\nROORCERT2=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/peers/peer1.orgcpp.itcast.com/tls/ca.crt\n$ peer chaincode invoke -o orderer.itcast.com:7050 --tls true --cafile "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CAFILE")]),t._v(" -C itcastchannel -n itcastcc -c '{\"")]),t._v("Args"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":["')]),t._v("invoke"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v("a"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v("b"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"]}' --peerAddresses peer0.orggo.itcast.com:7051 --tlsRootCertFiles "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ROORCERT1")]),t._v(" --peerAddresses peer1.orgcpp.itcast.com:7051 --tlsRootCertFiles "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ROORCERT2")]),t._v("\n\n# 因为只给一个节点安装了链码\nError: error endorsing invoke: rpc error: code = Unknown desc = access denied: channel [itcastchannel] creator org [OrgGoMSP] - proposal response: <nil>\n\nCAFILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/itcast.com/orderers/orderer.itcast.com/msp/tlscacerts/tlsca.itcast.com-cert.pem\nROORCERT1=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/ca.crt\nROORCERT2=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/peers/peer0.orgcpp.itcast.com/tls/ca.crt\npeer chaincode invoke -o orderer.itcast.com:7050 --tls true --cafile "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CAFILE")]),t._v(" -C testchannel -n testcc -c '{\"")]),t._v("Args"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":["')]),t._v("invoke"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v("a"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v("b"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("' --peerAddresses peer0.orggo.itcast.com:7051 --tlsRootCertFiles "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ROORCERT1")]),t._v(" --peerAddresses peer0.orgcpp.itcast.com:7051 --tlsRootCertFiles "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ROORCERT2")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5-通过客户端切换操作的节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-通过客户端切换操作的节点"}},[t._v("#")]),t._v(" 5. 通过客户端切换操作的节点")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 看docker-compose 配置文件中关于 客户端容器的设置 -> 环境变量")]),t._v("\n- "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("peer0.orggo.itcast.com:7051 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 客户端连接的peer节点")]),t._v("\n- "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_LOCALMSPID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("OrgGoMSP\n- "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_ENABLED")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n- "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_CERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/server.crt\n- "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_KEY_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/server.key\n- "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_ROOTCERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/ca.crt\n- "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_MSPCONFIGPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/users/Admin@orggo.itcast.com/msp\n")])])]),a("ul",[a("li",[a("p",[t._v("go组织的peer0")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("peer0.orggo.itcast.com:7051\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_LOCALMSPID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("OrgGoMSP\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_MSPCONFIGPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/users/Admin@orggo.itcast.com/msp\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_ROOTCERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/ca.crt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_CERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/server.crt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_KEY_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/server.key\n")])])])]),t._v(" "),a("li",[a("p",[t._v("go组织的peer1")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("peer1.orggo.itcast.com:7051\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_LOCALMSPID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("OrgGoMSP\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_MSPCONFIGPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/users/Admin@orggo.itcast.com/msp\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_ROOTCERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer1.orggo.itcast.com/tls/ca.crt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_CERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer1.orggo.itcast.com/tls/server.crt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_KEY_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer1.orggo.itcast.com/tls/server.key\n")])])])]),t._v(" "),a("li",[a("p",[t._v("cpp组织的peer0")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("peer0.orgcpp.itcast.com:7051\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_LOCALMSPID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("OrgCppMSP\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_MSPCONFIGPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/users/Admin@orgcpp.itcast.com/msp\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_ROOTCERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/peers/peer0.orgcpp.itcast.com/tls/ca.crt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_CERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/peers/peer0.orgcpp.itcast.com/tls/server.crt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_KEY_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/peers/peer0.orgcpp.itcast.com/tls/server.key\n")])])])]),t._v(" "),a("li",[a("p",[t._v("cpp组织的peer1")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("peer1.orgcpp.itcast.com:7051\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_LOCALMSPID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("OrgCppMSP\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_MSPCONFIGPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/users/Admin@orgcpp.itcast.com/msp\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_ROOTCERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/peers/peer1.orgcpp.itcast.com/tls/ca.crt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_CERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/peers/peer1.orgcpp.itcast.com/tls/server.crt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_KEY_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/peers/peer1.orgcpp.itcast.com/tls/server.key\n")])])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);