(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{492:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_4-搭建第一个自己的网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-搭建第一个自己的网络"}},[t._v("#")]),t._v(" 4 搭建第一个自己的网络")]),t._v(" "),a("blockquote",[a("p",[t._v("下面让我们手动搭建一个自己的fabric 网络:")]),t._v(" "),a("ul",[a("li",[t._v("创建一个项目目录: 如 "),a("code",[t._v("mkdir ~/Demo")])]),t._v(" "),a("li",[t._v("orderer节点个数为1个")]),t._v(" "),a("li",[t._v("组织个数2个\n"),a("ul",[a("li",[t._v("OrgGo")]),t._v(" "),a("li",[t._v("OrgCPP")])])]),t._v(" "),a("li",[t._v("OrgGo有两个peer节点, 该组织有3个用户")]),t._v(" "),a("li",[t._v("OrgCpp有两个peer节点, 该组织有4个用户")])])]),t._v(" "),a("h3",{attrs:{id:"_4-1-生成fabric的证书"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-生成fabric的证书"}},[t._v("#")]),t._v(" 4.1 生成Fabric的证书")]),t._v(" "),a("blockquote",[a("p",[t._v("编写生成组织节点证书的配置文件,我们将其命名为: crypto-config.yaml。在里边指定组织的名称, 节点个数, 用户个数和访问节点的域名信息。")]),t._v(" "),a("p",[t._v("将如下写好的配置文件放入目录: "),a("code",[t._v("~/Demo")]),t._v(" 中")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# crypto-config.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OrdererOrgs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 排序组织")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Orderer  \t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 排序节点组织名称")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Domain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" itcast.com  \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 排序节点组织的根域名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Specs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Hostname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 排序节点主机名, 访问该排序节点的域名: ubuntu.itcast.com")]),t._v("\n                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# “Spec”的作用是不受下面的Template模板生成规则影响，个性化指定一个域名")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("PeerOrgs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgGo    \t\t\t  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 组织Org1名称")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Domain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 组织Org1的域名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("EnableNodeOUs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("  \t  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Node.js支持，java的sdk里面默认是注释掉的")]),t._v("\n   \n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据上面注释的模板生成2套公私钥+证书，默认生成规则是peer0-9.组织的域名")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 即生成peer0.orggo.itcast.com、peer1.orggo.itcast.com 两个节点的公私钥和证     ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Users")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 除了admin用户，额外生成一个普通用户")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 普通用户个数为3")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgCPP\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Domain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("EnableNodeOUs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Users")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置文件编写完成, 在Demo目录下执行该命令:")]),t._v("\n$ cryptogen generate --config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./crypto-config.yaml\norggo.itcast.com\norgcpp.itcast.com\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Demo目录中的文件")]),t._v("\n$ tree -L "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── crypto-config\n│   ├── "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("ordererOrganizations\n│   │   └── itcast.com\n│   │       ├── ca\n│   │       │   ├── 4d61535a2dd55ff1641d7331e3037d59c590feb2abc21a9be04de678b28480cb_sk\n│   │       │   └── ca.itcast.com-cert.pem\n│   │       ├── msp\n│   │       │   ├── admincerts\n│   │       │   │   └── Admin@itcast.com-cert.pem\n│   │       │   ├── cacerts\n│   │       │   │   └── ca.itcast.com-cert.pem\n│   │       │   └── tlscacerts\n│   │       │       └── tlsca.itcast.com-cert.pem\n│   │       ├── orderers\n│   │       │   └── ubuntu.itcast.com\n│   │       │       ├── msp\n│   │       │       └── tls\n│   │       ├── tlsca\n│   │       │   ├── e2cf6010c4360cdcf89b636789543dc8e12073ba6035fe811f6e68901370f62d_sk\n│   │       │   └── tlsca.itcast.com-cert.pem\n│   │       └── "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n│   │           └── Admin@itcast.com\n│   │               ├── msp\n│   │               └── tls\n│   └── "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("peerOrganizations\n│       ├── "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("orgcpp.itcast.com\n│       │   ├── ca\n│       │   │   ├── b1d3411e8616a50f8d88bde7a68259972565541e0937294b67b09e155468c3cd_sk\n│       │   │   └── ca.orgcpp.itcast.com-cert.pem\n│       │   ├── msp\n│       │   │   ├── admincerts\n│       │   │   │   └── Admin@orgcpp.itcast.com-cert.pem\n│       │   │   ├── cacerts\n│       │   │   │   └── ca.orgcpp.itcast.com-cert.pem\n│       │   │   ├── config.yaml\n│       │   │   └── tlscacerts\n│       │   │       └── tlsca.orgcpp.itcast.com-cert.pem\n│       │   ├── "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("peers\n│       │   │   ├── "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("peer0.orgcpp.itcast.com\n│       │   │   │   ├── msp\n│       │   │   │   └── tls\n│       │   │   └── "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("peer1.orgcpp.itcast.com\n│       │   │       ├── msp\n│       │   │       └── tls\n│       │   ├── tlsca\n│       │   │   ├── 1732fcf1ac3ccfab09c6acbe767af2442b0711ea1128c1d6c1ce059b563266c8_sk\n│       │   │   └── tlsca.orgcpp.itcast.com-cert.pem\n│       │   └── "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n│       │       ├── Admin@orgcpp.itcast.com\n│       │       │   ├── msp\n│       │       │   └── tls\n│       │       ├── User1@orgcpp.itcast.com\n│       │       │   ├── msp\n│       │       │   └── tls\n│       │       ├── User2@orgcpp.itcast.com\n│       │       │   ├── msp\n│       │       │   └── tls\n│       │       ├── User3@orgcpp.itcast.com\n│       │       │   ├── msp\n│       │       │   └── tls\n│       │       └── User4@orgcpp.itcast.com\n│       │           ├── msp\n│       │           └── tls\n│       └── "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("orggo.itcast.com\n│           ├── ca\n│           │   ├── 33dbbd366922252ee8689e0444e8b6ffb3df3389219ad0716ee9708c2c18953d_sk\n│           │   └── ca.orggo.itcast.com-cert.pem\n│           ├── msp\n│           │   ├── admincerts\n│           │   │   └── Admin@orggo.itcast.com-cert.pem\n│           │   ├── cacerts\n│           │   │   └── ca.orggo.itcast.com-cert.pem\n│           │   ├── config.yaml\n│           │   └── tlscacerts\n│           │       └── tlsca.orggo.itcast.com-cert.pem\n│           ├── "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("peers\n│           │   ├── "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("peer0.orggo.itcast.com\n│           │   │   ├── msp\n│           │   │   └── tls\n│           │   └── "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("peer1.orggo.itcast.com\n│           │       ├── msp\n│           │       └── tls\n│           ├── tlsca\n│           │   ├── ab7a23f336678f1d8799a44aaeb8894503abb6177d6ba1740037fda952ff9bdb_sk\n│           │   └── tlsca.orggo.itcast.com-cert.pem\n│           └── "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n│               ├── Admin@orggo.itcast.com\n│               │   ├── msp\n│               │   └── tls\n│               ├── User1@orggo.itcast.com\n│               │   ├── msp\n│               │   └── tls\n│               ├── User2@orggo.itcast.com\n│               │   ├── msp\n│               │   └── tls\n│               └── User3@orggo.itcast.com\n│                   ├── msp\n│                   └── tls\n└── crypto-config.yaml\n")])])]),a("h3",{attrs:{id:"_4-2-创始块和通道文件的创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-创始块和通道文件的创建"}},[t._v("#")]),t._v(" 4.2 创始块和通道文件的创建")]),t._v(" "),a("blockquote",[a("p",[t._v("Fabric是基于区块链的分布式账本, 每个账本都有自己的区块, 账本的区块链中会存储账本的交易数据，但账本的第一个区块是一个例外，该区块不存储交易数据而是存储配置信息，通常账本的第一个区块称为创始块。")]),t._v(" "),a("p",[t._v("我们需要些编写生成创始块文件的配置文件，配置文件名字为"),a("code",[t._v("configtx.yaml, 该名字不要修改")]),t._v(", 写好之后放入"),a("code",[t._v("Demo")]),t._v("目录中")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# configtx.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Section: Organizations")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - This section defines the different organizational identities which will")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   be referenced later in the configuration.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrdererOrg")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrdererOrg\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrdererMSP\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MSPDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/ordererOrganizations/itcast.com/msp\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrgGo")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgGoMSP\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgGoMSP\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MSPDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.itcast.com/msp\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("AnchorPeers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orggo.itcast.com\n              "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrgCPP")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgCppMSP\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrgCppMSP\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MSPDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orgcpp.itcast.com/msp\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("AnchorPeers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orgcpp.itcast.com\n              "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   SECTION: Capabilities")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - This section defines the capabilities of fabric network. This is a new")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   concept as of v1.1.0 and should not be utilized in mixed networks with")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   v1.0.x peers and orderers.  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Capabilities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Global")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&ChannelCapabilities")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("V1_1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Orderer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrdererCapabilities")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("V1_1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&ApplicationCapabilities")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("V1_2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   SECTION: Application")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - This section defines the values to encode into a config transaction or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   genesis block for application related parameters")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&ApplicationDefaults")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   SECTION: Orderer")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - This section defines the values to encode into a config transaction or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   genesis block for orderer related parameters")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Orderer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&OrdererDefaults")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Available types are "solo" and "kafka"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OrdererType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solo\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Addresses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ubuntu.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7050")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Batch Timeout: The amount of time to wait before creating a batch")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BatchTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2s\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Batch Size: Controls the number of messages batched into a block")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BatchSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Max Message Count: The maximum number of messages to permit in a batch")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MaxMessageCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("AbsoluteMaxBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 99 MB\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("PreferredMaxBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 512 KB\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Kafka")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Brokers: A list of Kafka brokers to which the orderer connects")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NOTE: Use IP:port notation")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Brokers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9092")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Profile")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - Different configuration profiles may be encoded here to be specified")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   as parameters to the configtxgen tool")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("################################################################################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Profiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ItcastOrdererGenesis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Capabilities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*ChannelCapabilities")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Orderer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrdererDefaults")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrdererOrg")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Capabilities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrdererCapabilities")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Consortiums")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SampleConsortium")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrgGo")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrgCPP")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TwoOrgsChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Consortium")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SampleConsortium\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*ApplicationDefaults")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Organizations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrgGo")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*OrgCPP")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Capabilities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*ApplicationCapabilities")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 在Demo目录下创建新目录 channel-artifacts, 将生成的创始块和通道文件存储在该目录中")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" channel-artifacts\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成创始块文件")]),t._v("\n$ configtxgen -profile ItcastOrdererGenesis -outputBlock ./channel-artifacts/genesis.block\n")])])]),a("blockquote",[a("p",[t._v("通道（频道）在Fabric中称为channel， 一个channel表示一个账本。fabric和其他区块链平台最大的区别是支持多账本。每个fabric中至少包含一个channel，下边我们将通过命令将通道创建出来。")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建channel")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# channel.tx中包含了用于生产channel的信息")]),t._v("\n$ configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID mychannel\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成相关的锚点文件 - 组织1: Go")]),t._v("\n$ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/OrgGoMSPanchors.tx -channelID mychannel -asOrg OrgGoMSP\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成相关的锚点文件 - 组织2: CPP")]),t._v("\n$ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/OrgCppMSPanchors.tx -channelID mychannel -asOrg OrgCppMSP\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看channel-artifacts目录下生成的文件")]),t._v("\n$ tree channel-artifacts/\nchannel-artifacts/\n├── channel.tx\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通道文件")]),t._v("\n├── genesis.block\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创始块文件")]),t._v("\n├── orgCppMSPanchors.tx\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cpp组织锚点文件")]),t._v("\n└── orgGoMSPanchors.tx\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Go组织锚点文件")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-3-启动docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-启动docker-compose"}},[t._v("#")]),t._v(" 4.3 启动docker-compose")]),t._v(" "),a("h4",{attrs:{id:"_4-3-1-编写配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-编写配置文件"}},[t._v("#")]),t._v(" 4.3.1 编写配置文件")]),t._v(" "),a("blockquote",[a("p",[t._v("编写docker-compose启动时加载的配置文件，默认加载的文件名为：``docker-compose.yml/yaml"),a("code",[t._v("，可通过命令")]),t._v("docker-compose --help"),a("code",[t._v("查看。我们将该文件放到项目目录")]),t._v("~/Demo`中。")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose.yml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Copyright IBM Corp. All Rights Reserved.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SPDX-License-Identifier: Apache-2.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# compose 版本号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数据卷映射, 本地 -> docker镜像")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ubuntu.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定容器运行的网络, 同一网络中的容器才能相互通信")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("byfn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ubuntu.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的第1个服务名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 继承自当前yaml文件或者其它文件中定义的服务")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   base/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要继承上述file文件中对应的名字叫做 ubuntu.itcast.com 的服务")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu.itcast.com  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名称, 可以自定义")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定容器启动后运行的网络名")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的第2个服务名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  base/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的第3个服务名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  base/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的第4个服务名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  base/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的第5个服务名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  base/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cli")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的第6个服务名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cli\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hyperledger/fabric"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tools"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定服务的镜像名称或镜像 ID")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stdin_open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境变量设置")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" GOPATH=/opt/gopath\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_VM_ENDPOINT=unix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("///host/var/run/docker.sock\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_LOGGING_LEVEL=DEBUG\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#- CORE_LOGGING_LEVEL=INFO")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ID=cli\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ADDRESS=peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_LOCALMSPID=OrgGoMSP\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_ENABLED=true\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/server.crt\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/server.key\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/ca.crt\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/users/Admin@orggo.itcast.com/msp\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("working_dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/gopath/src/github.com/hyperledger/fabric/peer   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 工作目录")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /bin/bash  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器启动后执行的命令")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本地数据卷内容挂载到容器, 挂载到容器中的数据是只读的")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/host/var/run/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./chaincode/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/opt/gopath/src/github.com/chaincode\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./scripts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifacts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifacts\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定了容器的启动顺序, 下边5个服务全部启动之后, 启动cli服务")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ubuntu.itcast.com         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的服务器名1")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer0.orggo.itcast.com    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的服务器名2")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer1.orggo.itcast.com    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的服务器名3")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer0.orgcpp.itcast.com   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的服务器名4")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer1.orgcpp.itcast.com   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义的服务器名5")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" byfn\n")])])]),a("blockquote",[a("p",[t._v("接下来就上面 "),a("code",[t._v("docker-compose.yaml")]),t._v(" 文件中依赖的文件"),a("code",[t._v("docker-compose-base.yaml")]),t._v("，根据上面的指定可以知道该文件是放到base目录中，也就是说需要在Demo目录中创建子目录base："),a("code",[t._v("mkdir base")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~/Demo/base/docker-compose-base.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Copyright IBM Corp. All Rights Reserved.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SPDX-License-Identifier: Apache-2.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ubuntu.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 排序节点服务名称")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hyperledger/fabric"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("orderer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_LOGLEVEL=INFO\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_LISTENADDRESS=0.0.0.0\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_GENESISMETHOD=file\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_LOCALMSPID=OrdererMSP\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enabled TLS")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_TLS_ENABLED=true\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ORDERER_GENERAL_TLS_ROOTCAS="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("/var/hyperledger/orderer/tls/ca.crt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("working_dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/gopath/src/github.com/hyperledger/fabric\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orderer\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifacts/genesis.block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/orderer/orderer.genesis.block\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/ordererOrganizations/example.com/orderers/orderer.example.com/msp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/orderer/msp\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/orderer/tls\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" orderer.example.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/production/orderer\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 7050"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7050")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ID=peer0.orggo.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ADDRESS=peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_BOOTSTRAP=peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_LOCALMSPID=OrgGoMSP\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/host/var/run/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.example.com/peers/peer0.orggo.itcast.com/msp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/msp\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.example.com/peers/peer0.orggo.itcast.com/tls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/tls\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer0.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/production\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 7051"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 7053"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orggo.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orggo.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ID=peer1.orggo.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ADDRESS=peer1.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_BOOTSTRAP=peer1.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_LOCALMSPID=OrgGoMSP\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/host/var/run/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.itcast.com/peers/peer1.orggo.itcast.com/msp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/msp\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orggo.itcast.com/peers/peer1.orggo.itcast.com/tls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/tls\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer1.orggo.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/production\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8051"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8053"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer0.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer0.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ID=peer0.orgcpp.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ADDRESS=peer0.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_BOOTSTRAP=peer0.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_LOCALMSPID=OrgCppMSP\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/host/var/run/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orgcpp.itcast.com/peers/peer0.orgcpp.itcast.com/msp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/msp\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orgcpp.itcast.com/peers/peer0.orgcpp.itcast.com/tls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/tls\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer0.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/production\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 9051"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 9053"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer1.orgcpp.itcast.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer1.orgcpp.itcast.com\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base.yaml\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("base\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ID=peer1.orgcpp.itcast.com\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_ADDRESS=peer1.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_BOOTSTRAP=peer1.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_LOCALMSPID=Org2MSP\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/host/var/run/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orgcpp.example.com/peers/peer1.orgcpp.itcast.com/msp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/msp\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/peerOrganizations/orgcpp.example.com/peers/peer1.orgcpp.itcast.com/tls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/hyperledger/fabric/tls\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" peer1.orgcpp.itcast.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/hyperledger/production\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 10051"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 10053"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("在上面的docker-compose-base.yaml文件中又引用了文件"),a("code",[t._v("peer-base.yaml")]),t._v("，接下来我们对该文件进行修改。")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~/Demo/base/peer-base.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("peer-base")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hyperledger/fabric"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("peer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_VM_ENDPOINT=unix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("///host/var/run/docker.sock\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the following setting starts chaincode containers on the same")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bridge network as the peers")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://docs.docker.com/compose/networking/")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=Demo_byfn\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_LOGGING_LEVEL=INFO\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#- CORE_LOGGING_LEVEL=DEBUG")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_ENABLED=true\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_USELEADERELECTION=true\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_GOSSIP_ORGLEADER=false\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_PROFILE_ENABLED=true\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("working_dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/gopath/src/github.com/hyperledger/fabric/peer\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peer node start\n")])])]),a("h4",{attrs:{id:"_4-3-2-通过docker-compose启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-通过docker-compose启动容器"}},[t._v("#")]),t._v(" 4.3.2 通过docker-compose启动容器")]),t._v(" "),a("blockquote",[a("p",[t._v("docker-compose的配置文件编写完成之后, 我们就可以通过配置文件中的配置将所有节点的容器全部启动起来.")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动容器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 ~/Demo目录下启动docker-compose, 该目录下有编写好的docker-compose.yaml文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命令启动之后, 会自动加载该文件, 也可以通过-f指定要加载的yaml文件")]),t._v("\n$ docker-compose up -d \nCreating network "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo_byfn"')]),t._v(" with the default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo_peer1.orggo.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo_ubuntu.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo_peer0.orgcpp.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo_peer0.orggo.itcast.com"')]),t._v(" with default driver\nCreating volume "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo_peer1.orgcpp.itcast.com"')]),t._v(" with default driver\nCreating peer0.orgcpp.itcast.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating peer1.orgcpp.itcast.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating peer1.orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating peer0.orggo.itcast.com  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating ubuntu.itcast.com       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\nCreating cli                     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已启动的容器")]),t._v("\n$ docker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n    Name                 Command       State                    Ports                   \n-------------------------------------------------------------------------------------------\ncli                      /bin/bash      Up   \npeer0.orgcpp.itcast.com peer node start Up  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:9051-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("/tcp, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:9053-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("/tcp\npeer0.orggo.itcast.com  peer node start Up  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:7051-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("/tcp, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:7053-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("/tcp \npeer1.orgcpp.itcast.com peer node start Up  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:10051-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("/tcp,0.0.0.0:10053-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("/tcp\npeer1.orggo.itcast.com  peer node start Up  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:8051-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7051")]),t._v("/tcp, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:8053-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7053")]),t._v("/tcp\nubuntu.itcast.com       orderer         Up  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:7050-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7050")]),t._v("/tcp\n")])])]),a("h3",{attrs:{id:"_4-4-channel管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-channel管理"}},[t._v("#")]),t._v(" 4.4 channel管理")]),t._v(" "),a("h4",{attrs:{id:"_4-4-1-操作步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-操作步骤"}},[t._v("#")]),t._v(" 4.4.1 操作步骤")]),t._v(" "),a("blockquote",[a("p",[t._v("这个动作需要在cli容器中运行")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建channel")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入cli容器")]),t._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it cli "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n$ peer channel create -o ubuntu.itcast.com:7050 -c "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(" -f ./channel-artifacts/channel.tx --tls "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v(" --cafile "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORDERER_CA")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参数说明: ")]),t._v("\n\t- ubuntu.itcast.com: 连接的orderer的地址，hostname:port\n\t- "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" channel的名称，如果没有指定,默认为mychannel, 通道创建成功之后会在磁盘生成\n\t\t\t\t\t 一个文件, 名字为"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(".block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("通道名.block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t- "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 和orderer通信时是否启用tls\n\t- "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORDERER_CA")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 使用tls时，所使用的orderer的证书\n")])])]),a("blockquote",[a("p",[t._v("该命令执行过程:")]),t._v(" "),a("ul",[a("li",[t._v("发送消息，创建了channel，名字为"),a("code",[t._v("$CHANNEL_NAME")])]),t._v(" "),a("li",[t._v("获取创始区块，并且用protobuf进行序列化，本地生成了一个文件"),a("code",[t._v("$CHANNEL_NAME.block")])])])])]),t._v(" "),a("li",[a("p",[t._v("将peer节点添加到channel中")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ peer channel "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" -b "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(".block\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参数说明:")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(".block, 创建出的通道文件的名字\n")])])])]),t._v(" "),a("li",[a("p",[t._v("将每个组织的锚节点（anchor peer）更新到orderer")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ peer channel update -o ubuntu.itcast.com:7050 -c "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(" -f ./channel-artifacts/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${CORE_PEER_LOCALMSPID}")]),t._v("anchors.tx --tls "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v(" --cafile "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORDERER_CA")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参数说明:")]),t._v("\n\t- ubuntu.itcast.com: 连接的orderer的地址，hostname:port\n\t- "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${CORE_PEER_LOCALMSPID}")]),t._v("anchors.tx: 组织的锚节点文件, 是通过configtxgen指令生成的\n\t- "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 和orderer通信时是否启用tls\n\t- "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORDERER_CA")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 使用tls时，所使用的orderer的证书\t\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_4-4-2-脚本编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-脚本编写"}},[t._v("#")]),t._v(" 4.4.2 脚本编写")]),t._v(" "),a("blockquote",[a("p",[t._v("上述操作需要对多个节点进行操作，因此我们可以写一个脚本文件， 对这些操作进行统一处理，方便使用者进行操作。为了对编写的脚本统一管理，可以将其放入一个目录中。")]),t._v(" "),a("p",[t._v("我们可以在"),a("code",[t._v("~/Demo")]),t._v("目录下创建新的子目录"),a("code",[t._v("scripts")]),t._v(", 将所有的脚本文件放到里边。编写的脚本如下：")])]),t._v(" "),a("p",[t._v("会被调用多次的操作, 我们将其放到一个单独的脚本文件中")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该脚本文件我们命名为 utils.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~/Demo/utils.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义一些变量, 下边的代码中会使用 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# orderer 节点的证书")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ORDERER_CA")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/itcast.com/orderers/ubuntu.itcast.com/msp/tlscacerts/tlsca.itcast.com-cert.pem\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Go组织peer0节点证书")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PEER0_ORGGO_CA")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orggo.itcast.com/peers/peer0.orggo.itcast.com/tls/ca.crt\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPP组织peer0节点证书")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PEER0_ORGCPP_CA")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgcpp.itcast.com/peers/peer0.orgcpp.itcast.com/tls/ca.crt\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据传递进行来的参数读取各个组织中各节点信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一次参数表示节点编号, 第二个参数表示组织编号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("setGlobals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PEER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ORG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORG")]),t._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_LOCALMSPID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OrgGoMSP"')]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Go组织的ID, 在configtx.yaml中设置的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 客户端cli想要连接哪个节点, 就必须要设置该节点的证书路径")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_ROOTCERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PEER0_ORGGO_CA")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cli可以连接Go组织的peer0节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Go组织的管理员证书")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_MSPCONFIGPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/\n    peerOrganizations/orggo.itcast.com/users/Admin@orggo.itcast.com/msp\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PEER")]),t._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("peer0.orggo.itcast.com:7051\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go组织peer0地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("peer1.orggo.itcast.com:7051\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go组织peer1地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORG")]),t._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_LOCALMSPID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OrgCppMSP"')]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPP组织ID")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_TLS_ROOTCERT_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PEER0_ORGCPP_CA")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cli可以连接CPP组织的peer0节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPP组织的管理员证书")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_MSPCONFIGPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/\n    peerOrganizations/orgcpp.itcast.com/users/Admin@orgcpp.itcast.com/msp\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PEER")]),t._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("peer0.orgcpp.itcast.com:7051\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cpp组织peer0地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CORE_PEER_ADDRESS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("peer1.orgcpp.itcast.com:7051\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cpp组织peer0地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"================== ERROR !!! ORG Unknown =================="')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$VERBOSE")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" CORE\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该函数对命令执行的结果进行验证, 如果验证失败, 直接退出, 不再执行后续操作流程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("verifyResult")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" -ne "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"!!!!!!!!!!!!!!! "')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" !!!!!!!!!!!!!!!!"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========= ERROR !!! FAILED ==========="')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("创建通道操作:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该脚本文件我们命名为createChannel.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~/Demo/createChannel.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义一些变量, 下边的代码中会使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CHANNEL_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 脚本文件执行时接收的第1个参数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DELAY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v('"')]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 脚本文件执行时接收的第2个参数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("LANGUAGE")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),t._v('"')]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 脚本文件执行时接收的第3个参数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${CHANNEL_NAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v('"mychannel"}')]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通道名，如果值为空, 变量CHANNEL_NAME值设置为mychannel")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DELAY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v('"3"}')]),t._v("\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 延时时长，如果值为空, 变量DELAY值设置为3, 操作失败重试时使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("LANGUAGE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v('"golang"}')]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 链码语言，如果值为空, 变量LANGUAGE值设置为golang")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("LANGUAGE")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$LANGUAGE")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":upper:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":lower:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 语言转换为大写，再转换为小写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("COUNTER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 计数器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MAX_RETRY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 操作失败，重试的次数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 链码文件路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CC_SRC_PATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/chaincode/chaincode_example02/go/"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go链码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$LANGUAGE")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\t\t\t\t\t\t   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# node.js链码")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CC_SRC_PATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/opt/gopath/src/github.com/chaincode/chaincode_example02/node/"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Channel name : "')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打印通道的名字")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ====================================================")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\t\t\t\t\t\t创建通道")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ====================================================")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 引用 utils.sh 脚本, 该文件也被创建在scripts目录中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" scripts/utils.sh\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("createChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tsetGlobals "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -z "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v('"')]),t._v(" -o "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -x\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建通道, 不使用tls加密, 结果重定向到文件log.txt中")]),t._v("\n\t\tpeer channel create -o ubuntu.itcast.com:7050 -c "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(" -f ./channel-artifacts/channel.tx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">&")]),t._v("log.txt\n\t\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存 peer channel create 命令的返回值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +x\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -x\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建通道, 使用tls加密, 结果重定向到文件log.txt中")]),t._v("\n\t\tpeer channel create -o ubuntu.itcast.com:7050 -c "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(" -f ./channel-artifacts/channel.tx --tls "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v(" --cafile "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORDERER_CA")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">&")]),t._v("log.txt\n\t\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存 peer channel create 命令的返回值")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +x\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" log.txt\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将log文件内容输出到终端")]),t._v("\n\tverifyResult "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Channel creation failed"')]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 验证操作是否成功")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"===================== Channel '"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v("' created ===================== \"")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 调用创建通道的函数")]),t._v("\ncreateChannel\n")])])]),a("p",[t._v("将节点添加到通道中")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该脚本文件我们命名为joinChannel.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~/Demo/joinChannel.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义一些变量, 下边的代码中会使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ====================================================")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\t\t\t\t\t\t加入通道")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ====================================================")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 引用 utils.sh, createChannel.sh 脚本, 该文件也被创建在scripts目录中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" scripts/utils.sh\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" scripts/createChannel.sh\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("joinChannel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("org")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n\t    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("peer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n\t\tjoinChannelWithRetry "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$peer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$org")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"======== peer'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${peer}")]),t._v(".org"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${org}")]),t._v(" joined channel '"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v("' ======== \"")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DELAY")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n\t    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("joinChannelWithRetry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PEER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ORG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("\n  setGlobals "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PEER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORG")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -x\n  peer channel "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" -b "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(".block "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">&")]),t._v("log.txt\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +x\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" log.txt\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" -ne "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" -a "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$COUNTER")]),t._v(" -lt "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$MAX_RETRY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("COUNTER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" $COUNTER + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peer'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PEER}")]),t._v(".org"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${ORG}")]),t._v(" failed to join the channel, Retry after "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DELAY")]),t._v(' seconds"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DELAY")]),t._v("\n    joinChannelWithRetry "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PEER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORG")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("COUNTER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  verifyResult "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"After '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$MAX_RETRY")]),t._v(" attempts, peer"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PEER}")]),t._v(".org"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${ORG}")]),t._v(" has failed to join channel '"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v("' \"")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 函数调用")]),t._v("\njoinChannel\n")])])]),a("p",[t._v("将每个组织的锚节点（anchor peer）更新到orderer")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该脚本文件我们命名为updateChannel.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~/Demo/updateChannel.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 引用 utils.sh, createChannel.sh 脚本, 该文件也被创建在scripts目录中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" scripts/utils.sh\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" scripts/createChannel.sh\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("updateAnchorPeers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PEER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ORG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("\n  setGlobals "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PEER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORG")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -z "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v('"')]),t._v(" -o "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -x\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新锚节点不使用tls加密, 得到的结果保存到log.txt中")]),t._v("\n    peer channel update -o ubuntu.itcast.com:7050 -c "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(" -f ./channel-artifacts/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${CORE_PEER_LOCALMSPID}")]),t._v("anchors.tx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">&")]),t._v("log.txt\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +x\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -x\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新锚节点使用tls加密, 得到的结果保存到log.txt中")]),t._v("\n    peer channel update -o ubuntu.itcast.com:7050 -c "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(" -f ./channel-artifacts/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${CORE_PEER_LOCALMSPID}")]),t._v("anchors.tx --tls "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v(" --cafile "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORDERER_CA")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">&")]),t._v("log.txt\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +x\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" log.txt\n  verifyResult "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Anchor peer update failed"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" Anchor peers updated for org '"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_LOCALMSPID")]),t._v("' on channel '"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v("' \"")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DELAY")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 休眠")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 函数调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Updating anchor peers for orggo..."')]),t._v("\nupdateAnchorPeers "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Updating anchor peers for orgcpp..."')]),t._v("\nupdateAnchorPeers "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-5-chaincode安装和实例化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-chaincode安装和实例化"}},[t._v("#")]),t._v(" 4.5 chaincode安装和实例化")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该脚本文件我们命名为installChainCode.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~/Demo/installChainCode.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 引用 utils.sh, createChannel.sh 脚本, 该文件也被创建在scripts目录中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" scripts/utils.sh\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" scripts/createChannel.sh\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装链码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("installChaincode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PEER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ORG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("\n  setGlobals "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PEER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORG")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("VERSION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":-")]),t._v("1.0}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -x\n  peer chaincode "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -n mycc -v "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${VERSION}")]),t._v(" -l "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("LANGUAGE")]),t._v("}")]),t._v(" -p "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${CC_SRC_PATH}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">&")]),t._v("log.txt\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +x\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" log.txt\n  verifyResult "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Chaincode installation on peer'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PEER}")]),t._v(".org"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${ORG}")]),t._v(' has failed"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"===================== Chaincode is installed on peer'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PEER}")]),t._v(".org"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${ORG}")]),t._v(' ===================== "')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 链码初始化")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("instantiateChaincode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PEER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ORG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("\n  setGlobals "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PEER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORG")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("VERSION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":-")]),t._v("1.0}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# while 'peer chaincode' command can get the orderer endpoint from the peer")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (if join was successful), let's supply it directly as we know it using")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# the "-o" option')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -z "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v('"')]),t._v(" -o "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -x\n    peer chaincode instantiate -o ubuntu.itcast.com:7050 -C "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(" -n mycc -l "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("LANGUAGE")]),t._v("}")]),t._v(" -v "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${VERSION}")]),t._v(" -c "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"Args":["init","a","100","b","200"]}\'')]),t._v(" -P "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"AND ('OrgGoMSP.peer','OrgCppMSP.peer')\"")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">&")]),t._v("log.txt\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +x\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -x\n    peer chaincode instantiate -o ubuntu.itcast.com:7050 --tls "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CORE_PEER_TLS_ENABLED")]),t._v(" --cafile "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ORDERER_CA")]),t._v(" -C "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v(" -n mycc -l "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("LANGUAGE")]),t._v("}")]),t._v(" -v "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(" -c "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"Args":["init","a","100","b","200"]}\'')]),t._v(" -P "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"AND ('OrgGoMSP.peer','OrgCppMSP.peer')\"")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">&")]),t._v("log.txt\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +x\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" log.txt\n  verifyResult "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Chaincode instantiation on peer'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PEER}")]),t._v(".org"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${ORG}")]),t._v(" on channel '"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v("' failed\"")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" Chaincode is instantiated on peer'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PEER}")]),t._v(".org"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${ORG}")]),t._v(" on channel '"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHANNEL_NAME")]),t._v("'\"")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 函数调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go组织的peer0, peer1安装链码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Install chaincode on peer0.orggo..."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nstallChaincode 0 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Install chaincode on peer0.orggo..."')]),t._v("\ninstallChaincode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cpp组织的peer0, peer1安装链码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go组织的peer0进行初始化")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Instantiating chaincode on peer0.org2..."')]),t._v("\ninstantiateChaincode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);