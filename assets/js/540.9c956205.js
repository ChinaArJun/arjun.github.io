(window.webpackJsonp=window.webpackJsonp||[]).push([[540],{985:function(t,s,e){"use strict";e.r(s);var n=e(44),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"基础环境安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础环境安装"}},[t._v("#")]),t._v(" 基础环境安装")]),t._v(" "),e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# !/bin/bash")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 master 节点和 worker 节点都要执行")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 docker")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参考文档如下")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://docs.docker.com/install/linux/docker-ce/centos/ ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://docs.docker.com/install/linux/linux-postinstall/")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载旧版本")]),t._v("\nyum remove -y docker "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ndocker-client "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ndocker-client-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ndocker-common "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ndocker-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ndocker-latest-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ndocker-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ndocker-selinux "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ndocker-engine-selinux "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ndocker-engine\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置 yum repository")]),t._v("\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y yum-utils "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ndevice-mapper-persistent-data "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nlvm2\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装并启动 docker")]),t._v("\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y docker-ce-18.09.7 docker-ce-cli-18.09.7 containerd.io\nsystemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" docker\nsystemctl start docker\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 nfs-utils")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 必须先安装 nfs-utils 才能挂载 nfs 网络存储")]),t._v("\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y nfs-utils\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭 防火墙")]),t._v("\nsystemctl stop firewalld\nsystemctl disable firewalld\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭 SeLinux")]),t._v("\nsetenforce "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s/SELINUX=enforcing/SELINUX=disabled/g"')]),t._v(" /etc/selinux/config\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭 swap")]),t._v("\nswapoff -a\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" /etc/fstab /etc/fstab_bak\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /etc/fstab_bak "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -v swap "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/fstab\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 /etc/sysctl.conf")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果有配置，则修改")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s#^net.ipv4.ip_forward.*#net.ipv4.ip_forward=1#g"')]),t._v("  /etc/sysctl.conf\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s#^net.bridge.bridge-nf-call-ip6tables.*#net.bridge.bridge-nf-call-ip6tables=1#g"')]),t._v("  /etc/sysctl.conf\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s#^net.bridge.bridge-nf-call-iptables.*#net.bridge.bridge-nf-call-iptables=1#g"')]),t._v("  /etc/sysctl.conf\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可能没有，追加")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net.ipv4.ip_forward = 1"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/sysctl.conf\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net.bridge.bridge-nf-call-ip6tables = 1"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/sysctl.conf\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net.bridge.bridge-nf-call-iptables = 1"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/sysctl.conf\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行命令以应用")]),t._v("\nsysctl -p\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置K8S的yum源")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("EOF "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/yum.repos.d/kubernetes.repo\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubernetes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Kubernetes\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("repo_gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("gpgkey")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载旧版本")]),t._v("\nyum remove -y kubelet kubeadm kubectl\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装kubelet、kubeadm、kubectl")]),t._v("\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y kubelet-1.16.2 kubeadm-1.16.2 kubectl-1.16.2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改docker Cgroup Driver为systemd")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # 将/usr/lib/systemd/system/docker.service文件中的这一行 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # 修改为 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不修改，在添加 worker 节点时可能会碰到如下错误")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". ')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Please follow the guide at https://kubernetes.io/docs/setup/cri/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g"')]),t._v(" /usr/lib/systemd/system/docker.service\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置 docker 镜像，提高 docker 镜像下载速度和稳定性")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果您访问 https://hub.docker.io 速度非常稳定，亦可以跳过这个步骤")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -sSL https://get.daocloud.io/daotools/set_mirror.sh "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" -s http://f1361db2.m.daocloud.io\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启 docker，并启动 kubelet")]),t._v("\nsystemctl daemon-reload\nsystemctl restart docker\nsystemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" kubelet "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" systemctl start kubelet\n\ndocker version\n \n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);