(window.webpackJsonp=window.webpackJsonp||[]).push([[565],{1010:function(t,a,n){"use strict";n.r(a);var s=n(44),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"数据结构应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据结构应用"}},[t._v("#")]),t._v(" 数据结构应用")]),t._v(" "),n("h2",{attrs:{id:"线性表-数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线性表-数组"}},[t._v("#")]),t._v(" 线性表/数组")]),t._v(" "),n("p",[t._v("用两个栈实现队列\n在 O(1) 时间删除链表结点\n调整数组顺序使奇数位于偶数前面\n链表中倒数第 k 个结点\n手动反转链表\n合并两个排序的链表\n包含 min 函数的栈\n栈的压入、弹出序列\n复杂链表的复制")]),t._v(" "),n("h2",{attrs:{id:"字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),n("p",[t._v("替换字符串中的空格\n字符串的排列组合")]),t._v(" "),n("h2",{attrs:{id:"二叉树"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),n("p",[t._v("重建二叉树（前序遍历、中序遍历）\n树的子结构\n二叉树的镜像\n从上往下打印二叉树（按层遍历）\n二叉搜索树的后序遍历序列（后序遍历）\n二叉树中和为某一值的路径（前序遍历）\n二叉搜索树和双向链表的转换（中序遍历）")])])}),[],!1,null,null,null);a.default=r.exports}}]);