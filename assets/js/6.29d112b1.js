(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{363:function(t,s,a){t.exports=a.p+"assets/img/gc-trace.5c3091ed.png"},364:function(t,s,a){t.exports=a.p+"assets/img/gc-leak1.7e07cef1.png"},365:function(t,s,a){t.exports=a.p+"assets/img/gc-mutator.9369dcf0.png"},366:function(t,s,a){t.exports=a.p+"assets/img/gc-wb-dijkstra.64bb727e.png"},367:function(t,s,a){t.exports=a.p+"assets/img/gc-wb-yuasa.4bf313b4.png"},368:function(t,s,a){t.exports=a.p+"assets/img/gc-tuning-ex1-1.22b17530.png"},369:function(t,s,a){t.exports=a.p+"assets/img/gc-tuning-ex1-2.286b99c2.png"},370:function(t,s,a){t.exports=a.p+"assets/img/gc-tuning-ex1-3.d92b9432.png"},371:function(t,s,a){t.exports=a.p+"assets/img/gc-tuning-ex1-4.2cc79d51.png"},372:function(t,s,a){t.exports=a.p+"assets/img/gc-tuning-ex2-1.eb934107.png"},373:function(t,s,a){t.exports=a.p+"assets/img/gc-tuning-ex2-2.5129ba7e.png"},374:function(t,s,a){t.exports=a.p+"assets/img/gc-tuning-ex2-3.7165b1f8.png"},375:function(t,s,a){t.exports=a.p+"assets/img/gc-tuning-ex3.121f1ea2.png"},376:function(t,s,a){t.exports=a.p+"assets/img/gc-mark-assist.8c38239b.png"},377:function(t,s,a){t.exports=a.p+"assets/img/gc-mark-sweep.f2634c0e.png"},744:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("a",{attrs:{href:"https://github.com/golang/go/blob/master/src/runtime/mgc.go",target:"_blank",rel:"noopener noreferrer"}},[t._v("GC官方源码"),n("OutboundLink")],1)]),t._v(" "),n("blockquote",[n("p",[t._v("本文写于 Go 1.14 beta1，当文中提及目前、目前版本等字眼时均指 Go 1.14，此外，文中所有 go 命令版本均为 Go 1.14。")])]),t._v(" "),n("h1",{attrs:{id:"gc-的认识"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gc-的认识"}},[t._v("#")]),t._v(" GC 的认识")]),t._v(" "),n("h2",{attrs:{id:"_1-什么是-gc，有什么作用？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-gc，有什么作用？"}},[t._v("#")]),t._v(" 1. 什么是 GC，有什么作用？")]),t._v(" "),n("p",[n("code",[t._v("GC")]),t._v("，全称 "),n("code",[t._v("Garbage Collection")]),t._v("，即垃圾回收，是一种自动内存管理的机制。")]),t._v(" "),n("p",[t._v("当程序向操作系统申请的内存不再需要时，垃圾回收主动将其回收并供其他代码进行内存申请时候复用，或者将其归还给操作系统，这种针对内存级别资源的自动回收过程，即为垃圾回收。而负责垃圾回收的程序组件，即为垃圾回收器。")]),t._v(" "),n("p",[t._v("垃圾回收其实一个完美的 “Simplicity is Complicated” 的例子。一方面，程序员受益于 GC，无需操心、也不再需要对内存进行手动的申请和释放操作，GC 在程序运行时自动释放残留的内存。另一方面，GC 对程序员几乎不可见，仅在程序需要进行特殊优化时，通过提供可调控的 API，对 GC 的运行时机、运行开销进行把控的时候才得以现身。")]),t._v(" "),n("p",[t._v("通常，垃圾回收器的执行过程被划分为两个半独立的组件：")]),t._v(" "),n("ul",[n("li",[t._v("赋值器（Mutator）：这一名称本质上是在指代用户态的代码。因为对垃圾回收器而言，用户态的代码仅仅只是在修改对象之间的引用关系，也就是在对象图（对象之间引用关系的一个有向图）上进行操作。")]),t._v(" "),n("li",[t._v("回收器（Collector）：负责执行垃圾回收的代码。")])]),t._v(" "),n("h2",{attrs:{id:"_2-根对象到底是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-根对象到底是什么？"}},[t._v("#")]),t._v(" 2. 根对象到底是什么？")]),t._v(" "),n("p",[t._v("根对象在垃圾回收的术语中又叫做根集合，它是垃圾回收器在标记过程时最先检查的对象，包括：")]),t._v(" "),n("ol",[n("li",[t._v("全局变量：程序在编译期就能确定的那些存在于程序整个生命周期的变量。")]),t._v(" "),n("li",[t._v("执行栈：每个 goroutine 都包含自己的执行栈，这些执行栈上包含栈上的变量及指向分配的堆内存区块的指针。")]),t._v(" "),n("li",[t._v("寄存器：寄存器的值可能表示一个指针，参与计算的这些指针可能指向某些赋值器分配的堆内存区块。")])]),t._v(" "),n("h2",{attrs:{id:"_3-常见的-gc-实现方式有哪些？go-语言的-gc-使用的是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-常见的-gc-实现方式有哪些？go-语言的-gc-使用的是什么？"}},[t._v("#")]),t._v(" 3. 常见的 GC 实现方式有哪些？Go 语言的 GC 使用的是什么？")]),t._v(" "),n("p",[t._v("所有的 GC 算法其存在形式可以归结为追踪（Tracing）和引用计数（Reference Counting）这两种形式的混合运用。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("追踪式 GC")]),t._v(" "),n("p",[t._v("从根对象出发，根据对象之间的引用信息，一步步推进直到扫描完毕整个堆并确定需要保留的对象，从而回收所有可回收的对象。Go、 Java、V8 对 JavaScript 的实现等均为追踪式 GC。")])]),t._v(" "),n("li",[n("p",[t._v("引用计数式 GC")]),t._v(" "),n("p",[t._v("每个对象自身包含一个被引用的计数器，当计数器归零时自动得到回收。因为此方法缺陷较多，在追求高性能时通常不被应用。Python、Objective-C 等均为引用计数式 GC。")])])]),t._v(" "),n("p",[t._v("目前比较常见的 GC 实现方式包括：")]),t._v(" "),n("ul",[n("li",[t._v("追踪式，分为多种不同类型，例如：\n"),n("ul",[n("li",[t._v("标记清扫：从根对象出发，将确定存活的对象进行标记，并清扫可以回收的对象。")]),t._v(" "),n("li",[t._v("标记整理：为了解决内存碎片问题而提出，在标记过程中，将对象尽可能整理到一块连续的内存上。")]),t._v(" "),n("li",[t._v("增量式：将标记与清扫的过程分批执行，每次执行很小的部分，从而增量的推进垃圾回收，达到近似实时、几乎无停顿的目的。")]),t._v(" "),n("li",[t._v("增量整理：在增量式的基础上，增加对对象的整理过程。")]),t._v(" "),n("li",[t._v("分代式：将对象根据存活时间的长短进行分类，存活时间小于某个值的为年轻代，存活时间大于某个值的为老年代，永远不会参与回收的对象为永久代。并根据分代假设（如果一个对象存活时间不长则倾向于被回收，如果一个对象已经存活很长时间则倾向于存活更长时间）对对象进行回收。")])])]),t._v(" "),n("li",[t._v("引用计数：根据对象自身的引用计数来回收，当引用计数归零时立即回收。")])]),t._v(" "),n("p",[t._v("关于各类方法的详细介绍及其实现不在本文中详细讨论。对于 Go 而言，Go 的 GC 目前使用的是无分代（对象没有代际之分）、不整理（回收过程中不对对象进行移动与整理）、并发（与用户代码并发执行）的三色标记清扫算法。"),n("a",{attrs:{href:"https://groups.google.com/d/msg/golang-nuts/KJiyv2mV2pU/wdBUH1mHCAAJ",target:"_blank",rel:"noopener noreferrer"}},[t._v("原因"),n("OutboundLink")],1),t._v("在于：")]),t._v(" "),n("ol",[n("li",[t._v("对象整理的优势是解决内存碎片问题以及“允许”使用顺序内存分配器。但 Go 运行时的分配算法基于 tcmalloc，基本上没有碎片问题。 并且顺序内存分配器在多线程的场景下并不适用。Go 使用的是基于 tcmalloc 的现代内存分配算法，对对象进行整理不会带来实质性的性能提升。")]),t._v(" "),n("li",[t._v("分代 GC 依赖分代假设，即 GC 将主要的回收目标放在新创建的对象上（存活时间短，更倾向于被回收），而非频繁检查所有对象。但 Go 的编译器会通过"),n("strong",[t._v("逃逸分析")]),t._v("将大部分新生对象存储在栈上（栈直接被回收），只有那些需要长期存在的对象才会被分配到需要进行垃圾回收的堆中。也就是说，分代 GC 回收的那些存活时间短的对象在 Go 中是直接被分配到栈上，当 goroutine 死亡后栈也会被直接回收，不需要 GC 的参与，进而分代假设并没有带来直接优势。并且 Go 的垃圾回收器与用户代码并发执行，使得 STW 的时间与对象的代际、对象的 size 没有关系。Go 团队更关注于如何更好地让 GC 与用户代码并发执行（使用适当的 CPU 来执行垃圾回收），而非减少停顿时间这一单一目标上。")])]),t._v(" "),n("h2",{attrs:{id:"_4-三色标记法是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-三色标记法是什么？"}},[t._v("#")]),t._v(" 4. 三色标记法是什么？")]),t._v(" "),n("p",[t._v("理解"),n("strong",[t._v("三色标记法")]),t._v("的关键是理解对象的"),n("strong",[t._v("三色抽象")]),t._v("以及"),n("strong",[t._v("波面（wavefront）推进")]),t._v("这两个概念。三色抽象只是一种描述追踪式回收器的方法，在实践中并没有实际含义，它的重要作用在于从逻辑上严密推导标记清理这种垃圾回收方法的正确性。也就是说，当我们谈及三色标记法时，通常指标记清扫的垃圾回收。")]),t._v(" "),n("p",[t._v("从垃圾回收器的视角来看，三色抽象规定了三种不同类型的对象，并用不同的颜色相称：")]),t._v(" "),n("ul",[n("li",[t._v("白色对象（可能死亡）：未被回收器访问到的对象。在回收开始阶段，所有对象均为白色，当回收结束后，白色对象均不可达。")]),t._v(" "),n("li",[t._v("灰色对象（波面）：已被回收器访问到的对象，但回收器需要对其中的一个或多个指针进行扫描，因为他们可能还指向白色对象。")]),t._v(" "),n("li",[t._v("黑色对象（确定存活）：已被回收器访问到的对象，其中所有字段都已被扫描，黑色对象中任何一个指针都不可能直接指向白色对象。")])]),t._v(" "),n("p",[t._v("这样三种不变性所定义的回收过程其实是一个"),n("strong",[t._v("波面")]),t._v("不断前进的过程，这个波面同时也是黑色对象和白色对象的边界，灰色对象就是这个波面。")]),t._v(" "),n("p",[t._v("当垃圾回收开始时，只有白色对象。随着标记过程开始进行时，灰色对象开始出现（着色），这时候波面便开始扩大。当一个对象的所有子节点均完成扫描时，会被着色为黑色。当整个堆遍历完成时，只剩下黑色和白色对象，这时的黑色对象为可达对象，即存活；而白色对象为不可达对象，即死亡。这个过程可以视为以灰色对象为波面，将黑色对象和白色对象分离，使波面不断向前推进，直到所有可达的灰色对象都变为黑色对象为止的过程。如下图所示：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://user-images.githubusercontent.com/7698088/70995777-505fc800-210c-11ea-9f6d-3549f884ff46.png",alt:"三色标记法全貌"}})]),t._v(" "),n("p",[t._v("图中展示了根对象、可达对象、不可达对象，黑、灰、白对象以及波面之间的关系。")]),t._v(" "),n("h2",{attrs:{id:"_5-stw-是什么意思？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-stw-是什么意思？"}},[t._v("#")]),t._v(" 5. STW 是什么意思？")]),t._v(" "),n("p",[n("code",[t._v("STW")]),t._v(" 是 "),n("code",[t._v("Stop the World")]),t._v(" 的缩写，即万物静止，是指在垃圾回收过程中为了保证实现的正确性、防止无止境的内存增长等问题而不可避免的需要停止赋值器进一步操作对象图的一段过程。")]),t._v(" "),n("p",[t._v("在这个过程中整个用户代码被停止或者放缓执行， "),n("code",[t._v("STW")]),t._v(" 越长，对用户代码造成的影响（例如延迟）就越大，早期 Go 对垃圾回收器的实现中 "),n("code",[t._v("STW")]),t._v(" 长达几百毫秒，对时间敏感的实时通信等应用程序会造成巨大的影响。我们来看一个例子：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runtime"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\ttime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sleep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Millisecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\truntime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GC")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("上面的这个程序在 Go 1.14 以前永远都不会输出 "),n("code",[t._v("OK")]),t._v("，其罪魁祸首是 STW 无限制的被延长。")]),t._v(" "),n("p",[t._v("尽管 STW 如今已经优化到了半毫秒级别以下，但这个程序被卡死原因在于仍然是 STW 导致的。原因在于，GC 在进入 STW 时，需要等待让所有的用户态代码停止，但是 "),n("code",[t._v("for {}")]),t._v(" 所在的 goroutine 永远都不会被中断，从而停留在 STW 阶段。实际实践中也是如此，当程序的某个 goroutine 长时间得不到停止，强行拖慢 STW，这种情况下造成的影响（卡死）是非常可怕的。好在自 Go 1.14 之后，这类 goroutine 能够被异步地抢占，从而使得 STW 的时间如同普通程序那样，不会超过半个毫秒，程序也不会因为仅仅等待一个 goroutine 的停止而停顿在 STW 阶段。")]),t._v(" "),n("h2",{attrs:{id:"_6-如何观察-go-gc？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-如何观察-go-gc？"}},[t._v("#")]),t._v(" 6. 如何观察 Go GC？")]),t._v(" "),n("p",[t._v("我们以下面的程序为例，先使用四种不同的方式来介绍如何观察 GC，并在后面的问题中通过几个详细的例子再来讨论如何优化 GC。")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"方式1：godebug-gctrace-1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方式1：godebug-gctrace-1"}},[t._v("#")]),t._v(" 方式1："),n("code",[t._v("GODEBUG=gctrace=1")])]),t._v(" "),n("p",[t._v("我们首先可以通过")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("$ go build -o main\n$ GODEBUG=gctrace=1 ./main\n\ngc 1 @0.000s 2%: 0.009+0.23+0.004 ms clock, 0.11+0.083/0.019/0.14+0.049 ms cpu, 4->6->2 MB, 5 MB goal, 12 P\nscvg: 8 KB released\nscvg: inuse: 3, idle: 60, sys: 63, released: 57, consumed: 6 (MB)\ngc 2 @0.001s 2%: 0.018+1.1+0.029 ms clock, 0.22+0.047/0.074/0.048+0.34 ms cpu, 4->7->3 MB, 5 MB goal, 12 P\nscvg: inuse: 3, idle: 60, sys: 63, released: 56, consumed: 7 (MB)\ngc 3 @0.003s 2%: 0.018+0.59+0.011 ms clock, 0.22+0.073/0.008/0.042+0.13 ms cpu, 5->6->1 MB, 6 MB goal, 12 P\nscvg: 8 KB released\nscvg: inuse: 2, idle: 61, sys: 63, released: 56, consumed: 7 (MB)\ngc 4 @0.003s 4%: 0.019+0.70+0.054 ms clock, 0.23+0.051/0.047/0.085+0.65 ms cpu, 4->6->2 MB, 5 MB goal, 12 P\nscvg: 8 KB released\nscvg: inuse: 3, idle: 60, sys: 63, released: 56, consumed: 7 (MB)\nscvg: 8 KB released\nscvg: inuse: 4, idle: 59, sys: 63, released: 56, consumed: 7 (MB)\ngc 5 @0.004s 12%: 0.021+0.26+0.49 ms clock, 0.26+0.046/0.037/0.11+5.8 ms cpu, 4->7->3 MB, 5 MB goal, 12 P\nscvg: inuse: 5, idle: 58, sys: 63, released: 56, consumed: 7 (MB)\ngc 6 @0.005s 12%: 0.020+0.17+0.004 ms clock, 0.25+0.080/0.070/0.053+0.051 ms cpu, 5->6->1 MB, 6 MB goal, 12 P\nscvg: 8 KB released\nscvg: inuse: 1, idle: 62, sys: 63, released: 56, consumed: 7 (MB)\n")])])]),n("p",[t._v("在这个日志中可以观察到两类不同的信息：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("gc 1 @0.000s 2%: 0.009+0.23+0.004 ms clock, 0.11+0.083/0.019/0.14+0.049 ms cpu, 4->6->2 MB, 5 MB goal, 12 P\ngc 2 @0.001s 2%: 0.018+1.1+0.029 ms clock, 0.22+0.047/0.074/0.048+0.34 ms cpu, 4->7->3 MB, 5 MB goal, 12 P\n...\n")])])]),n("p",[t._v("以及：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("scvg: 8 KB released\nscvg: inuse: 3, idle: 60, sys: 63, released: 57, consumed: 6 (MB)\nscvg: inuse: 3, idle: 60, sys: 63, released: 56, consumed: 7 (MB)\n...\n")])])]),n("p",[t._v("对于用户代码向运行时申请内存产生的垃圾回收：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("gc 2 @0.001s 2%: 0.018+1.1+0.029 ms clock, 0.22+0.047/0.074/0.048+0.34 ms cpu, 4->7->3 MB, 5 MB goal, 12 P\n")])])]),n("p",[t._v("含义由下表所示：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("字段")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("gc 2")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("第二个 GC 周期")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("0.001")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("程序开始后的 0.001 秒")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("2%")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("该 GC 周期中 CPU 的使用率")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("0.018")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记开始时， STW 所花费的时间（wall clock）")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("1.1")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记过程中，并发标记所花费的时间（wall clock）")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("0.029")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记终止时， STW 所花费的时间（wall clock）")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("0.22")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记开始时， STW 所花费的时间（cpu time）")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("0.047")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记过程中，标记辅助所花费的时间（cpu time）")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("0.074")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记过程中，并发标记所花费的时间（cpu time）")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("0.048")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记过程中，GC 空闲的时间（cpu time）")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("0.34")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记终止时， STW 所花费的时间（cpu time）")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记开始时，堆的大小的实际值")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记结束时，堆的大小的实际值")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记结束时，标记为存活的对象大小")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("标记结束时，堆的大小的预测值")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("12")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("P 的数量")])])])]),t._v(" "),n("blockquote",[n("p",[t._v("wall clock 是指开始执行到完成所经历的实际时间，包括其他程序和本程序所消耗的时间；\ncpu time 是指特定程序使用 CPU 的时间；\n他们存在以下关系：")]),t._v(" "),n("ul",[n("li",[t._v("wall clock < cpu time: 充分利用多核")]),t._v(" "),n("li",[t._v("wall clock ≈ cpu time: 未并行执行")]),t._v(" "),n("li",[t._v("wall clock > cpu time: 多核优势不明显")])])]),t._v(" "),n("p",[t._v("对于运行时向操作系统申请内存产生的垃圾回收（向操作系统归还多余的内存）：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("scvg: 8 KB released\nscvg: inuse: 3, idle: 60, sys: 63, released: 57, consumed: 6 (MB)\n")])])]),n("p",[t._v("含义由下表所示：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("字段")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("8 KB released")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("向操作系统归还了 8 KB 内存")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("已经分配给用户代码、正在使用的总内存大小 (MB)。MB used or partially used spans")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("60")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("空闲以及等待归还给操作系统的总内存大小（MB）。MB spans pending scavenging")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("63")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("通知操作系统中保留的内存大小（MB）MB mapped from the system")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("57")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("已经归还给操作系统的（或者说还未正式申请）的内存大小（MB）。MB released to the system")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("已经从操作系统中申请的内存大小（MB）。MB allocated from the system")])])])]),t._v(" "),n("h3",{attrs:{id:"方式2：go-tool-trace"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方式2：go-tool-trace"}},[t._v("#")]),t._v(" 方式2："),n("code",[t._v("go tool trace")])]),t._v(" "),n("p",[n("code",[t._v("go tool trace")]),t._v(" 的主要功能是将统计而来的信息以一种可视化的方式展示给用户。要使用此工具，可以通过调用 trace API：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trace.out"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ttrace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" trace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("并通过")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("$ go tool trace trace.out\n2019/12/30 15:50:33 Parsing trace...\n2019/12/30 15:50:38 Splitting trace...\n2019/12/30 15:50:45 Opening browser. Trace viewer is listening on http://127.0.0.1:51839\n")])])]),n("p",[t._v("命令来启动可视化界面：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(363),alt:""}})]),t._v(" "),n("p",[t._v("选择第一个链接可以获得如下图示：")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/gc-trace2.png",alt:""}})]),t._v(" "),n("p",[t._v("右上角的问号可以打开帮助菜单，主要使用方式包括：")]),t._v(" "),n("ul",[n("li",[t._v("w/s 键可以用于放大或者缩小视图")]),t._v(" "),n("li",[t._v("a/d 键可以用于左右移动")])]),t._v(" "),n("h3",{attrs:{id:"方式3：debug-readgcstats"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方式3：debug-readgcstats"}},[t._v("#")]),t._v(" 方式3："),n("code",[t._v("debug.ReadGCStats")])]),t._v(" "),n("p",[t._v("此方式可以通过代码的方式来直接实现对感兴趣指标的监控，例如我们希望每隔一秒钟监控一次 GC 的状态：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printGCStats")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewTicker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" debug"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GCStats"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\tdebug"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReadGCStats")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gc %d last@%v, PauseTotal %v\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NumGC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastGC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PauseTotal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printGCStats")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("我们能够看到如下输出：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" run main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n\ngc "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4954")]),t._v(" last@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("37.505575")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v(" CET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PauseTotal "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("29.901171")]),t._v("ms\ngc "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9195")]),t._v(" last@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("38.50565")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v(" CET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PauseTotal "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("77.579622")]),t._v("ms\ngc "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13502")]),t._v(" last@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("39.505714")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v(" CET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PauseTotal "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("128.022307")]),t._v("ms\ngc "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("17555")]),t._v(" last@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("40.505579")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v(" CET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PauseTotal "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("182.816528")]),t._v("ms\ngc "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("21838")]),t._v(" last@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("41.505595")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v(" CET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PauseTotal "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("246.618502")]),t._v("ms\n")])])]),n("h3",{attrs:{id:"方式4：runtime-readmemstats"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方式4：runtime-readmemstats"}},[t._v("#")]),t._v(" 方式4："),n("code",[t._v("runtime.ReadMemStats")])]),t._v(" "),n("p",[t._v("除了使用 debug 包提供的方法外，还可以直接通过运行时的内存相关的 API 进行监控：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printMemStats")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewTicker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" runtime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MemStats"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\truntime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReadMemStats")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gc %d last@%v, next_heap_size@%vMB\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NumGC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Unix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("int64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Duration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastGC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Seconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NextGC"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printMemStats")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" run main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n\ngc "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4887")]),t._v(" last@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("56")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v(" CET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next_heap_size@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("MB\ngc "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10049")]),t._v(" last@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("57")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v(" CET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next_heap_size@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("MB\ngc "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15231")]),t._v(" last@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("58")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v(" CET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next_heap_size@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("MB\ngc "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20378")]),t._v(" last@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("59")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0100")]),t._v(" CET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next_heap_size@"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("MB\n")])])]),n("p",[t._v("当然，后两种方式能够监控的指标很多，读者可以自行查看 "),n("a",{attrs:{href:"https://golang.org/pkg/runtime/debug/#GCStats",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("debug.GCStats")]),n("OutboundLink")],1),t._v(" 和\n"),n("a",{attrs:{href:"https://golang.org/pkg/runtime/#MemStats",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("runtime.MemStats")]),n("OutboundLink")],1),t._v(" 的字段，这里不再赘述。")]),t._v(" "),n("h2",{attrs:{id:"_7-有了-gc，为什么还会发生内存泄露？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-有了-gc，为什么还会发生内存泄露？"}},[t._v("#")]),t._v(" 7. 有了 GC，为什么还会发生内存泄露？")]),t._v(" "),n("p",[t._v("在一个具有 GC 的语言中，我们常说的内存泄漏，用严谨的话来说应该是：预期的能很快被释放的内存由于附着在了长期存活的内存上、或生命期意外地被延长，导致预计能够立即回收的内存而长时间得不到回收。")]),t._v(" "),n("p",[t._v("在 Go 中，由于 goroutine 的存在，所谓的内存泄漏除了附着在长期对象上之外，还存在多种不同的形式。")]),t._v(" "),n("h3",{attrs:{id:"形式1：预期能被快速释放的内存因被根对象引用而没有得到迅速释放"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#形式1：预期能被快速释放的内存因被根对象引用而没有得到迅速释放"}},[t._v("#")]),t._v(" 形式1：预期能被快速释放的内存因被根对象引用而没有得到迅速释放")]),t._v(" "),n("p",[t._v("当有一个全局对象时，可能不经意间将某个变量附着在其上，且忽略的将其进行释放，则该内存永远不会得到释放。例如：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cache "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keepalloc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tm "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tcache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"形式2：goroutine-泄漏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#形式2：goroutine-泄漏"}},[t._v("#")]),t._v(" 形式2：goroutine 泄漏")]),t._v(" "),n("p",[t._v("Goroutine 作为一种逻辑上理解的轻量级线程，需要维护执行用户代码的上下文信息。在运行过程中也需要消耗一定的内存来保存这类信息，而这些内存在目前版本的 Go 中是不会被释放的。因此，如果一个程序持续不断地产生新的 goroutine、且不结束已经创建的 goroutine 并复用这部分内存，就会造成内存泄漏的现象，例如：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keepalloc2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),n("p",[t._v("我们可以通过如下形式来调用上述两个函数：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runtime/trace"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trace.out"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ttrace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" trace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keepalloc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keepalloc2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("运行程序：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("go run main.go\n")])])]),n("p",[t._v("会看到程序中生成了 "),n("code",[t._v("trace.out")]),t._v(" 文件，我们可以使用 "),n("code",[t._v("go tool trace trace.out")]),t._v(" 命令得到下图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(364),alt:""}})]),t._v(" "),n("p",[t._v("可以看到，途中的 Heap 在持续增长，没有内存被回收，产生了内存泄漏的现象。")]),t._v(" "),n("p",[t._v("值得一提的是，这种形式的 goroutine 泄漏还可能由 channel 泄漏导致。而 channel 的泄漏本质上与 goroutine 泄漏存在直接联系。Channel 作为一种同步原语，会连接两个不同的 goroutine，如果一个 goroutine 尝试向一个没有接收方的无缓冲 channel 发送消息，则该 goroutine 会被永久的休眠，整个 goroutine 及其执行栈都得不到释放，例如：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keepalloc3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有接收方，goroutine 会一直阻塞")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"_8-并发标记清除法的难点是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-并发标记清除法的难点是什么？"}},[t._v("#")]),t._v(" 8. 并发标记清除法的难点是什么？")]),t._v(" "),n("p",[t._v("在没有用户态代码并发修改"),n("code",[t._v("三色抽象")]),t._v("的情况下，回收可以正常结束。但是并发回收的根本问题在于，用户态代码在回收过程中会并发地更新对象图，从而造成赋值器和回收器可能对对象图的结构产生不同的认知。这时以一个固定的三色波面作为回收过程前进的边界则不再合理。")]),t._v(" "),n("p",[t._v("我们不妨考虑赋值器写操作的例子：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("时序")]),t._v(" "),n("th",[t._v("回收器")]),t._v(" "),n("th",[t._v("赋值器")]),t._v(" "),n("th",[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("1")]),t._v(" "),n("td",[t._v("shade(A, gray)")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("回收器：根对象的子节点着色为灰色对象")])]),t._v(" "),n("tr",[n("td",[t._v("2")]),t._v(" "),n("td",[t._v("shade(C, black)")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("回收器：当所有子节点着色为灰色后，将节点着为黑色")])]),t._v(" "),n("tr",[n("td",[t._v("3")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("C.ref3 = C.ref2.ref1")]),t._v(" "),n("td",[t._v("赋值器：并发的修改了 C 的子节点")])]),t._v(" "),n("tr",[n("td",[t._v("4")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("A.ref1 = nil")]),t._v(" "),n("td",[t._v("赋值器：并发的修改了 A 的子节点")])]),t._v(" "),n("tr",[n("td",[t._v("5")]),t._v(" "),n("td",[t._v("shade(A.ref1, gray)")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("回收器：进一步灰色对象的子节点并着色为灰色对象，这时由于 "),n("code",[t._v("A.ref1")]),t._v(" 为 "),n("code",[t._v("nil")]),t._v("，什么事情也没有发生")])]),t._v(" "),n("tr",[n("td",[t._v("6")]),t._v(" "),n("td",[t._v("shade(A, black)")]),t._v(" "),n("td"),t._v(" "),n("td",[t._v("回收器：由于所有子节点均已标记，回收器也不会重新扫描已经被标记为黑色的对象，此时 A 被着色为黑色，"),n("code",[t._v("scan(A)")]),t._v(" 什么也不会发生，进而 B 在此次回收过程中永远不会被标记为黑色，进而错误地被回收。")])])])]),t._v(" "),n("ul",[n("li",[t._v("初始状态：假设某个黑色对象 C 指向某个灰色对象 A ，而 A 指向白色对象 B；")]),t._v(" "),n("li",[n("code",[t._v("C.ref3 = C.ref2.ref1")]),t._v("：赋值器并发地将黑色对象 C 指向（ref3）了白色对象 B；")]),t._v(" "),n("li",[n("code",[t._v("A.ref1 = nil")]),t._v("：移除灰色对象 A 对白色对象 B 的引用（ref2）；")]),t._v(" "),n("li",[t._v("最终状态：在继续扫描的过程中，白色对象 B 永远不会被标记为黑色对象了（回收器不会重新扫描黑色对象），进而对象 B 被错误地回收。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(365),alt:"gc-mutator"}})]),t._v(" "),n("p",[t._v("总而言之，并发标记清除中面临的一个根本问题就是如何保证标记与清除过程的正确性。")]),t._v(" "),n("h2",{attrs:{id:"_9-什么是写屏障、混合写屏障，如何实现？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-什么是写屏障、混合写屏障，如何实现？"}},[t._v("#")]),t._v(" 9. 什么是写屏障、混合写屏障，如何实现？")]),t._v(" "),n("p",[t._v("要讲清楚写屏障，就需要理解三色标记清除算法中的"),n("strong",[t._v("强弱不变性")]),t._v("以及"),n("strong",[t._v("赋值器的颜色")]),t._v("，理解他们需要一定的抽象思维。写屏障是一个在并发垃圾回收器中才会出现的概念，垃圾回收器的正确性体现在："),n("strong",[t._v("不应出现对象的丢失，也不应错误的回收还不需要回收的对象。")])]),t._v(" "),n("p",[t._v("可以证明，当以下两个条件同时满足时会破坏垃圾回收器的正确性：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("条件 1")]),t._v(": 赋值器修改对象图，导致某一黑色对象引用白色对象；")]),t._v(" "),n("li",[n("strong",[t._v("条件 2")]),t._v(": 从灰色对象出发，到达白色对象的、未经访问过的路径被赋值器破坏。")])]),t._v(" "),n("p",[t._v("只要能够避免其中任何一个条件，则不会出现对象丢失的情况，因为：")]),t._v(" "),n("ul",[n("li",[t._v("如果条件 1 被避免，则所有白色对象均被灰色对象引用，没有白色对象会被遗漏；")]),t._v(" "),n("li",[t._v("如果条件 2 被避免，即便白色对象的指针被写入到黑色对象中，但从灰色对象出发，总存在一条没有访问过的路径，从而找到到达白色对象的路径，白色对象最终不会被遗漏。")])]),t._v(" "),n("p",[t._v("我们不妨将三色不变性所定义的波面根据这两个条件进行削弱：")]),t._v(" "),n("ul",[n("li",[t._v("当满足原有的三色不变性定义（或上面的两个条件都不满足时）的情况称为"),n("strong",[t._v("强三色不变性（strong tricolor invariant）")])]),t._v(" "),n("li",[t._v("当赋值器令黑色对象引用白色对象时（满足条件 1 时）的情况称为"),n("strong",[t._v("弱三色不变性（weak tricolor invariant）")])])]),t._v(" "),n("p",[t._v("当赋值器进一步破坏灰色对象到达白色对象的路径时（进一步满足条件 2 时），即打破弱三色不变性，也就破坏了回收器的正确性；或者说，在破坏强弱三色不变性时必须引入额外的辅助操作。弱三色不变形的好处在于："),n("strong",[t._v("只要存在未访问的能够到达白色对象的路径，就可以将黑色对象指向白色对象。")])]),t._v(" "),n("p",[t._v("如果我们考虑并发的用户态代码，回收器不允许同时停止所有赋值器，就是涉及了存在的多个不同状态的赋值器。为了对概念加以明确，还需要换一个角度，把回收器视为对象，把赋值器视为影响回收器这一对象的实际行为（即影响 GC 周期的长短），从而引入赋值器的颜色：")]),t._v(" "),n("ul",[n("li",[t._v("黑色赋值器：已经由回收器扫描过，不会再次对其进行扫描。")]),t._v(" "),n("li",[t._v("灰色赋值器：尚未被回收器扫描过，或尽管已经扫描过但仍需要重新扫描。")])]),t._v(" "),n("p",[t._v("赋值器的颜色对回收周期的结束产生影响：")]),t._v(" "),n("ul",[n("li",[t._v("如果某种并发回收器允许灰色赋值器的存在，则必须在回收结束之前重新扫描对象图。")]),t._v(" "),n("li",[t._v("如果重新扫描过程中发现了新的灰色或白色对象，回收器还需要对新发现的对象进行追踪，但是在新追踪的过程中，赋值器仍然可能在其根中插入新的非黑色的引用，如此往复，直到重新扫描过程中没有发现新的白色或灰色对象。")])]),t._v(" "),n("p",[t._v("于是，在允许灰色赋值器存在的算法，最坏的情况下，回收器只能将所有赋值器线程停止才能完成其跟对象的完整扫描，也就是我们所说的 STW。")]),t._v(" "),n("p",[t._v("为了确保强弱三色不变性的并发指针更新操作，需要通过赋值器屏障技术来保证指针的读写操作一致。因此我们所说的 Go 中的写屏障、混合写屏障，其实是指赋值器的写屏障，赋值器的写屏障用来保证赋值器在进行指针写操作时，不会破坏弱三色不变性。")]),t._v(" "),n("p",[t._v("有两种非常经典的写屏障：Dijkstra 插入屏障和 Yuasa 删除屏障。")]),t._v(" "),n("p",[t._v("灰色赋值器的 Dijkstra 插入屏障的基本思想是避免满足条件 1：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 灰色赋值器 Dijkstra 插入屏障")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DijkstraWritePointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("slot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("unsafe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ptr unsafe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shade")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ptr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("slot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ptr\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("为了防止黑色对象指向白色对象，应该假设 "),n("code",[t._v("*slot")]),t._v(" 可能会变为黑色，为了确保 "),n("code",[t._v("ptr")]),t._v(" 不会在被赋值到 "),n("code",[t._v("*slot")]),t._v(" 前变为白色，"),n("code",[t._v("shade(ptr)")]),t._v(" 会先将指针 "),n("code",[t._v("ptr")]),t._v(" 标记为灰色，进而避免了条件 1。但是，由于并不清楚赋值器以后会不会将这个引用删除，因此还需要重新扫描来重新确定关系图，这时需要 STW，如图所示：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(366),alt:""}})]),t._v(" "),n("p",[t._v("Dijkstra 插入屏障的好处在于可以立刻开始并发标记，但由于产生了灰色赋值器，缺陷是需要标记终止阶段 STW 时进行重新扫描。")]),t._v(" "),n("p",[t._v("黑色赋值器的 Yuasa 删除屏障的基本思想是避免满足条件 2：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 黑色赋值器 Yuasa 屏障")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("YuasaWritePointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("slot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("unsafe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ptr unsafe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shade")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("slot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("slot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ptr\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("为了防止丢失从灰色对象到白色对象的路径，应该假设 "),n("code",[t._v("*slot")]),t._v(" 可能会变为黑色，为了确保 "),n("code",[t._v("ptr")]),t._v(" 不会在被赋值到 "),n("code",[t._v("*slot")]),t._v(" 前变为白色，"),n("code",[t._v("shade(*slot)")]),t._v(" 会先将 "),n("code",[t._v("*slot")]),t._v(" 标记为灰色，进而该写操作总是创造了一条灰色到灰色或者灰色到白色对象的路径，进而避免了条件 2。")]),t._v(" "),n("p",[t._v("Yuasa 删除屏障的优势则在于不需要标记结束阶段的重新扫描，缺陷是依然会产生丢失的对象，需要在标记开始前对整个对象图进行快照。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(367),alt:""}})]),t._v(" "),n("p",[t._v("Go 在 1.8 的时候为了简化 GC 的流程，同时减少标记终止阶段的重扫成本，将 Dijkstra 插入屏障和 Yuasa 删除屏障进行混合，形成混合写屏障。该屏障提出时的基本思想是："),n("strong",[t._v("对正在被覆盖的对象进行着色，且如果当前栈未扫描完成，则同样对指针进行着色。")])]),t._v(" "),n("p",[t._v("但在最终实现时"),n("a",{attrs:{href:"https://github.com/golang/proposal/blob/master/design/17503-eliminate-rescan.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("原提案"),n("OutboundLink")],1),t._v("中对 "),n("code",[t._v("ptr")]),t._v(" 的着色还额外包含对执行栈的着色检查，但由于时间有限，并未完整实现过，所以混合写屏障在目前的实现伪代码是：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 混合写屏障")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("HybridWritePointerSimple")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("slot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("unsafe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ptr unsafe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shade")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("slot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shade")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ptr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("slot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ptr\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在这个实现中，如果无条件对引用双方进行着色，自然结合了 Dijkstra 和 Yuasa 写屏障的优势，但缺点也非常明显，因为着色成本是双倍的，而且编译器需要插入的代码也成倍增加，随之带来的结果就是编译后的二进制文件大小也进一步增加。为了针对写屏障的性能进行优化，Go 1.10 前后，Go 团队随后实现了批量写屏障机制。其基本想法是将需要着色的指针同一写入一个缓存，每当缓存满时统一对缓存中的所有 "),n("code",[t._v("ptr")]),t._v(" 指针进行着色。")]),t._v(" "),n("h1",{attrs:{id:"gc-的实现细节"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gc-的实现细节"}},[t._v("#")]),t._v(" GC 的实现细节")]),t._v(" "),n("h2",{attrs:{id:"_10-go-语言中-gc-的流程是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-go-语言中-gc-的流程是什么？"}},[t._v("#")]),t._v(" 10. Go 语言中 GC 的流程是什么？")]),t._v(" "),n("p",[t._v("当前版本的 Go 以 STW 为界限，可以将 GC 划分为五个阶段：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("阶段")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("赋值器状态")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("GCMark")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("标记准备阶段，为并发标记做准备工作，启动写屏障")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("STW")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("GCMark")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("扫描标记阶段，与赋值器并发执行，写屏障开启")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("并发")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("GCMarkTermination")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("标记终止阶段，保证一个周期内标记任务完成，停止写屏障")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("STW")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("GCoff")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("内存清扫阶段，将需要回收的内存归还到堆中，写屏障关闭")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("并发")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("GCoff")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("内存归还阶段，将过多的内存归还给操作系统，写屏障关闭")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("并发")])])])]),t._v(" "),n("p",[t._v("具体而言，各个阶段的触发函数分别为：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://user-images.githubusercontent.com/7698088/71047691-930aba00-2177-11ea-84d5-4e9eac2df723.png",alt:"gc-process"}})]),t._v(" "),n("h2",{attrs:{id:"_11-触发-gc-的时机是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-触发-gc-的时机是什么？"}},[t._v("#")]),t._v(" 11. 触发 GC 的时机是什么？")]),t._v(" "),n("p",[t._v("Go 语言中对 GC 的触发时机存在两种形式：")]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("主动触发")]),t._v("，通过调用 runtime.GC 来触发 GC，此调用阻塞式地等待当前 GC 运行完毕。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("被动触发")]),t._v("，分为两种方式：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("使用系统监控，当超过两分钟没有产生任何 GC 时，强制触发 GC。")])]),t._v(" "),n("li",[n("p",[t._v("使用步调（Pacing）算法，其核心思想是控制内存增长的比例。")])])])])]),t._v(" "),n("p",[t._v("通过 "),n("code",[t._v("GOGC")]),t._v(" 或者 "),n("code",[t._v("debug.SetGCPercent")]),t._v(" 进行控制（他们控制的是同一个变量，即堆的增长率 $\\rho$）。整个算法的设计考虑的是优化问题：如果设上一次 GC 完成时，内存的数量为 $H_m$（heap marked），估计需要触发 GC 时的堆大小 $H_T$（heap trigger），使得完成 GC 时候的目标堆大小 $H_g$（heap goal） 与实际完成时候的堆大小 $H_a$（heap actual）最为接近，即： $\\min |H_g - H_a| = \\min|(1+\\rho)H_m - H_a|$。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://user-images.githubusercontent.com/7698088/71047935-5e4b3280-2178-11ea-9abd-c86667ac9f88.png",alt:"gc-pacing"}})]),t._v(" "),n("p",[t._v("除此之外，步调算法还需要考虑 CPU 利用率的问题，显然我们不应该让垃圾回收器占用过多的 CPU，即不应该让每个负责执行用户 goroutine 的线程都在执行标记过程。理想情况下，在用户代码满载的时候，GC 的 CPU 使用率不应该超过 25%，即另一个优化问题：如果设 $u_g$为目标 CPU 使用率（goal utilization），而 $u_a$为实际 CPU 使用率（actual utilization），则 $\\min|u_g - u_a|$。")]),t._v(" "),n("blockquote",[n("p",[t._v("求解这两个优化问题的具体数学建模过程我们不在此做深入讨论，有兴趣的读者可以参考两个设计文档："),n("a",{attrs:{href:"https://docs.google.com/document/d/1wmjrocXIWTr1JxU-3EQBI6BK6KgtiFArkG47XK73xIQ/edit#",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 1.5 concurrent garbage collector pacing"),n("OutboundLink")],1),t._v(" 和 "),n("a",{attrs:{href:"https://github.com/golang/proposal/blob/master/design/14951-soft-heap-limit.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Separate soft and hard heap size goal"),n("OutboundLink")],1),t._v("。")])]),t._v(" "),n("p",[t._v("计算 $H_T$ 的最终结论（从 Go 1.10 时开始 $h_t$ 增加了上界 $0.95 \\rho$，从 Go 1.14 开始时 $h_t$ 增加了下界 0.6）是：")]),t._v(" "),n("ul",[n("li",[t._v("设第 n 次触发 GC 时 (n > 1)，估计得到的堆增长率为 $h_t^{(n)}$、运行过程中的实际堆增长率为 $h_a^{(n)}$，用户设置的增长率为 $\\rho = \\text{GOGC}/100$（ $\\rho > 0$）则第 $n+1$ 次出触发 GC 时候，估计的堆增长率为：")])]),t._v(" "),n("p",[t._v("$$\nh_t^{(n+1)} = h_t^{(n)} + 0.5 \\left[ \\frac{H_g^{(n)} - H_a^{(n)}}{H_a^{(n)}} - h_t^{(n)} - \\frac{u_a^{(n)}}{u_g^{(n)}} \\left( h_a^{(n)} - h_t^{(n)} \\right) \\right]\n$$")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("特别的，$h_t^{(1)} = 7 / 8$，$u_a^{(1)} = 0.25$，$u_g^{(1)} = 0.3$。第一次触发 GC 时，如果当前的堆小于 $4\\rho$ MB，则强制调整到 $4\\rho$ MB 时触发 GC")])]),t._v(" "),n("li",[n("p",[t._v("特别的，当 $h_t^{(n)}<0.6$时，将其调整为 $0.6$，当 $h_t^{(n)} > 0.95 \\rho$ 时，将其设置为 $0.95 \\rho$")])]),t._v(" "),n("li",[n("p",[t._v("默认情况下，$\\rho = 1$（即 GOGC = 100），第一次触发 GC 时强制设置触发第一次 GC 为 4MB，可以写如下程序进行验证：")])])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runtime"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runtime/trace"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sync/atomic"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" stop "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过对象 P 的释放状态，来确定 GC 是否已经完成")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("gcfinished")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\truntime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetFinalizer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gc finished"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tatomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("StoreUint64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通知停止分配")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("p\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每次调用分配 0.25MB")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.25")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trace.out"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ttrace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" trace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("gcfinished")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当完成 GC 时停止分配")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" atomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LoadUint64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#allocate: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"terminate"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("我们先来验证最简单的一种情况，即第一次触发 GC 时的堆大小：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("$ go build -o main\n$ GODEBUG=gctrace=1 ./main\n#allocate:  1\n(...)\n#allocate:  20\ngc finished\ngc 1 @0.001s 3%: 0.016+0.23+0.019 ms clock, 0.20+0.11/0.060/0.13+0.22 ms cpu, 4->5->1 MB, 5 MB goal, 12 P\nscvg: 8 KB released\nscvg: inuse: 1, idle: 62, sys: 63, released: 58, consumed: 5 (MB)\nterminate\n")])])]),n("p",[t._v("通过这一行数据我们可以看到：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("gc 1 @0.001s 3%: 0.016+0.23+0.019 ms clock, 0.20+0.11/0.060/0.13+0.22 ms cpu, 4->5->1 MB, 5 MB goal, 12 P\n")])])]),n("ol",[n("li",[t._v("程序在完成第一次 GC 后便终止了程序，符合我们的设想")]),t._v(" "),n("li",[t._v("第一次 GC 开始时的堆大小为 4MB，符合我们的设想")]),t._v(" "),n("li",[t._v("当标记终止时，堆大小为 5MB，此后开始执行清扫，这时分配执行到第 20 次，即 20*0.25 = 5MB，符合我们的设想")])]),t._v(" "),n("p",[t._v("我们将分配次数调整到 50 次")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#allocate: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("来验证第二次 GC 触发时是否满足公式所计算得到的值（为 GODEBUG 进一步设置 "),n("code",[t._v("gcpacertrace=1")]),t._v("）：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("$ go build -o main\n$ GODEBUG=gctrace=1,gcpacertrace=1 ./main\n#allocate:  1\n(...)\n\npacer: H_m_prev=2236962 h_t=+8.750000e-001 H_T=4194304 h_a=+2.387451e+000 H_a=7577600 h_g=+1.442627e+000 H_g=5464064 u_a=+2.652227e-001 u_g=+3.000000e-001 W_a=152832 goalΔ=+5.676271e-001 actualΔ=+1.512451e+000 u_a/u_g=+8.840755e-001\n#allocate:  28\ngc 1 @0.001s 5%: 0.032+0.32+0.055 ms clock, 0.38+0.068/0.053/0.11+0.67 ms cpu, 4->7->3 MB, 5 MB goal, 12 P\n\n(...)\n#allocate:  37\npacer: H_m_prev=3307736 h_t=+6.000000e-001 H_T=5292377 h_a=+7.949171e-001 H_a=5937112 h_g=+1.000000e+000 H_g=6615472 u_a=+2.658428e-001 u_g=+3.000000e-001 W_a=154240 goalΔ=+4.000000e-001 actualΔ=+1.949171e-001 u_a/u_g=+8.861428e-001\n#allocate:  38\ngc 2 @0.002s 9%: 0.017+0.26+0.16 ms clock, 0.20+0.079/0.058/0.12+1.9 ms cpu, 5->5->0 MB, 6 MB goal, 12 P\n")])])]),n("p",[t._v("我们可以得到数据：")]),t._v(" "),n("ul",[n("li",[t._v("第一次估计得到的堆增长率为 $h_t^{(1)} = 0.875$")]),t._v(" "),n("li",[t._v("第一次的运行过程中的实际堆增长率为 $h_a^{(1)} = 0.2387451$")]),t._v(" "),n("li",[t._v("第一次实际的堆大小为 $H_a^{(1)}=7577600$")]),t._v(" "),n("li",[t._v("第一次目标的堆大小为 $H_g^{(1)}=5464064$")]),t._v(" "),n("li",[t._v("第一次的 CPU 实际使用率为 $u_a^{(1)} = 0.2652227$")]),t._v(" "),n("li",[t._v("第一次的 CPU 目标使用率为 $u_g^{(1)} = 0.3$")])]),t._v(" "),n("p",[t._v("我们据此计算第二次估计的堆增长率：")]),t._v(" "),n("p",[t._v("$$\n\\begin{align}\nh_t^{(2)} &= h_t^{(1)} + 0.5 \\left[ \\frac{H_g^{(1)} - H_a^{(1)}}{H_a^{(1)}} - h_t^{(1)} - \\frac{u_a^{(1)}}{u_g^{(1)}} \\left( h_a^{(1)} - h_t^{(1)} \\right) \\right] \\\n&= 0.875 + 0.5 \\left[ \\frac{5464064 - 7577600}{5464064} - 0.875 - \\frac{0.2652227}{0.3} \\left( 0.2387451 - 0.875 \\right) \\right] \\\n& \\approx 0.52534543909 \\\n\\end{align}\n$$")]),t._v(" "),n("p",[t._v("因为 $0.52534543909 < 0.6\\rho = 0.6$，因此下一次的触发率为 $h_t^{2} = 0.6$，与我们实际观察到的第二次 GC 的触发率 0.6 吻合。")]),t._v(" "),n("h2",{attrs:{id:"_12-如果内存分配速度超过了标记清除的速度怎么办？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12-如果内存分配速度超过了标记清除的速度怎么办？"}},[t._v("#")]),t._v(" 12. 如果内存分配速度超过了标记清除的速度怎么办？")]),t._v(" "),n("p",[t._v("目前的 Go 实现中，当 GC 触发后，会首先进入并发标记的阶段。并发标记会设置一个标志，并在 mallocgc 调用时进行检查。当存在新的内存分配时，会暂停分配内存过快的那些 goroutine，并将其转去执行一些辅助标记（Mark Assist）的工作，从而达到放缓继续分配、辅助 GC 的标记工作的目的。")]),t._v(" "),n("p",[t._v("编译器会分析用户代码，并在需要分配内存的位置，将申请内存的操作翻译为 "),n("code",[t._v("mallocgc")]),t._v(" 调用，而 "),n("code",[t._v("mallocgc")]),t._v(" 的实现决定了标记辅助的实现，其伪代码思路如下：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mallocgc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t typ"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" enableMarkAssist "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进行标记辅助，此时用户代码没有得到执行")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行内存分配")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h1",{attrs:{id:"gc-的优化问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gc-的优化问题"}},[t._v("#")]),t._v(" GC 的优化问题")]),t._v(" "),n("h2",{attrs:{id:"_13-gc-关注的指标有哪些？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13-gc-关注的指标有哪些？"}},[t._v("#")]),t._v(" 13. GC 关注的指标有哪些？")]),t._v(" "),n("p",[t._v("Go 的 GC 被设计为成比例触发、大部分工作与赋值器并发、不分代、无内存移动且会主动向操作系统归还申请的内存。因此最主要关注的、能够影响赋值器的性能指标有：")]),t._v(" "),n("ul",[n("li",[t._v("CPU 利用率：回收算法会在多大程度上拖慢程序？有时候，这个是通过回收占用的 CPU 时间与其它 CPU 时间的百分比来描述的。")]),t._v(" "),n("li",[t._v("GC 停顿时间：回收器会造成多长时间的停顿？目前的 GC 中需要考虑 STW 和 Mark Assist 两个部分可能造成的停顿。")]),t._v(" "),n("li",[t._v("GC 停顿频率：回收器造成的停顿频率是怎样的？目前的 GC 中需要考虑 STW 和 Mark Assist 两个部分可能造成的停顿。")]),t._v(" "),n("li",[t._v("GC 可扩展性：当堆内存变大时，垃圾回收器的性能如何？但大部分的程序可能并不一定关心这个问题。")])]),t._v(" "),n("h2",{attrs:{id:"_14-go-的-gc-如何调优？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14-go-的-gc-如何调优？"}},[t._v("#")]),t._v(" 14. Go 的 GC 如何调优？")]),t._v(" "),n("p",[t._v("Go 的 GC 被设计为极致简洁，与较为成熟的 Java GC 的数十个可控参数相比，严格意义上来讲，Go 可供用户调整的参数只有 GOGC 环境变量。当我们谈论 GC 调优时，通常是指减少用户代码对 GC 产生的压力，这一方面包含了减少用户代码分配内存的数量（即对程序的代码行为进行调优），另一方面包含了最小化 Go 的 GC 对 CPU 的使用率（即调整 GOGC）。")]),t._v(" "),n("p",[t._v("GC 的调优是在特定场景下产生的，并非所有程序都需要针对 GC 进行调优。只有那些对执行延迟非常敏感、\n当 GC 的开销成为程序性能瓶颈的程序，才需要针对 GC 进行性能调优，几乎不存在于实际开发中 99% 的情况。\n除此之外，Go 的 GC 也仍然有一定的可改进的空间，也有部分 GC 造成的问题，目前仍属于 Open Problem。")]),t._v(" "),n("p",[t._v("总的来说，我们可以在现在的开发中处理的有以下几种情况：")]),t._v(" "),n("ol",[n("li",[t._v("对停顿敏感：GC 过程中产生的长时间停顿、或由于需要执行 GC 而没有执行用户代码，导致需要立即执行的用户代码执行滞后。")]),t._v(" "),n("li",[t._v("对资源消耗敏感：对于频繁分配内存的应用而言，频繁分配内存增加 GC 的工作量，原本可以充分利用 CPU 的应用不得不频繁地执行垃圾回收，影响用户代码对 CPU 的利用率，进而影响用户代码的执行效率。")])]),t._v(" "),n("p",[t._v("从这两点来看，所谓 GC 调优的核心思想也就是充分的围绕上面的两点来展开：优化内存的申请速度，尽可能的少申请内存，复用已申请的内存。或者简单来说，不外乎这三个关键字："),n("strong",[t._v("控制、减少、复用")]),t._v("。")]),t._v(" "),n("p",[t._v("我们将通过三个实际例子介绍如何定位 GC 的存在的问题，并一步一步进行性能调优。当然，在实际情况中问题远比这些例子要复杂，这里也只是讨论调优的核心思想，更多的时候也只能具体问题具体分析。")]),t._v(" "),n("h3",{attrs:{id:"例1：合理化内存分配的速度、提高赋值器的-cpu-利用率"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例1：合理化内存分配的速度、提高赋值器的-cpu-利用率"}},[t._v("#")]),t._v(" 例1：合理化内存分配的速度、提高赋值器的 CPU 利用率")]),t._v(" "),n("p",[t._v("我们来看这样一个例子。在这个例子中，"),n("code",[t._v("concat")]),t._v(" 函数负责拼接一些长度不确定的字符串。并且为了快速完成任务，出于某种原因，在两个嵌套的 for 循环中一口气创建了 800 个 goroutine。在 main 函数中，启动了一个 goroutine 并在程序结束前不断的触发 GC，并尝试输出 GC 的平均执行时间：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runtime"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runtime/trace"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sync/atomic"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tstop  "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\n\tcount "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n\tsum   time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Go GC"')]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World"')]),t._v("\n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trace.out"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ttrace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" trace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" t time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" atomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("LoadInt32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\truntime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GC")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tsum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Since")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tcount"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GC spend avg: %v\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Duration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("int64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tatomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("StoreInt32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这个程序的执行结果是：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go build -o main\n$ ./main\nGC spend avg: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(".583421ms\n")])])]),n("p",[t._v("GC 平均执行一次需要长达 2ms 的时间，我们再进一步观察 trace 的结果：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(368),alt:""}})]),t._v(" "),n("p",[t._v("程序的整个执行过程中仅执行了一次 GC，而且仅 Sweep STW 就耗费了超过 1 ms，非常反常。甚至查看赋值器 mutator 的 CPU 利用率，在整个 trace 尺度下连 40% 都不到：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(369),alt:""}})]),t._v(" "),n("p",[t._v("主要原因是什么呢？我们不妨查看 goroutine 的分析：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(370),alt:""}})]),t._v(" "),n("p",[t._v("在这个榜单中我们不难发现，goroutine 的执行时间占其生命周期总时间非常短的一部分，但大部分时间都花费在调度器的等待上了（蓝色的部分），说明同时创建大量 goroutine 对调度器产生的压力确实不小，我们不妨将这一产生速率减慢，一批一批地创建 goroutine：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\twg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WaitGroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\twg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Go GC"')]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World"')]),t._v("\n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s\n\t\t\t\twg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Done")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\twg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Wait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这时候我们再来看：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go build -o main\n$ ./main\nGC spend avg: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("328.54")]),t._v("µs\n")])])]),n("p",[t._v("GC 的平均时间就降到 300 微秒了。这时的赋值器 CPU 使用率也提高到了 60%，相对来说就很可观了：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(371),alt:""}})]),t._v(" "),n("p",[t._v("当然，这个程序仍然有优化空间，例如我们其实没有必要等待很多 goroutine 同时执行完毕才去执行下一组 goroutine。而可以当一个 goroutine 执行完毕时，直接启动一个新的 goroutine，也就是 goroutine 池的使用。\n有兴趣的读者可以沿着这个思路进一步优化这个程序中赋值器对 CPU 的使用率。")]),t._v(" "),n("h3",{attrs:{id:"例2：降低并复用已经申请的内存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例2：降低并复用已经申请的内存"}},[t._v("#")]),t._v(" 例2：降低并复用已经申请的内存")]),t._v(" "),n("p",[t._v("我们通过一个非常简单的 Web 程序来说明复用内存的重要性。在这个程序中，每当产生一个 "),n("code",[t._v("/example2")]),t._v("\n的请求时，都会创建一段内存，并用于进行一些后续的工作。")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http/pprof"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newBuf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\thttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenAndServe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:6060"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n\thttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("HandleFunc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ResponseWriter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newBuf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟执行一些工作")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" idx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("idx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"done, %v"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("URL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\thttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenAndServe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('":8080"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("为了进行性能分析，我们还额外创建了一个监听 6060 端口的 goroutine，用于使用 pprof 进行分析。\n我们先让服务器跑起来：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go build -o main\n$ ./main\n")])])]),n("p",[t._v("我们这次使用 pprof 的 trace 来查看 GC 在此服务器中面对大量请求时候的状态，要使用 trace 可以通过访问 "),n("code",[t._v("/debug/pprof/trace")]),t._v(" 路由来进行，其中 "),n("code",[t._v("seconds")]),t._v(" 参数设置为 20s，并将 trace 的结果保存为 "),n("code",[t._v("trace.out")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://127.0.0.1:6060/debug/pprof/trace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("?seconds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" -O trace.out\n--2020-01-01 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":13:34--  http://127.0.0.1:6060/debug/pprof/trace?seconds"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nConnecting to "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6060"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". connected.\nHTTP request sent, awaiting response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),n("p",[t._v("这时候我们使用一个压测工具 "),n("code",[t._v("ab")]),t._v("，来同时产生 500 个请求\n（"),n("code",[t._v("-n")]),t._v(" 一共 500 个请求，"),n("code",[t._v("-c")]),t._v(" 一个时刻执行请求的数量，每次 100 个并发请求）：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ ab -n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" -c "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" http://127.0.0.1:8080/example2\nThis is ApacheBench, Version "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Revision")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1843412")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nCopyright "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1996")]),t._v(" Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("be patient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" requests\nFinished "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" requests\n\n\nServer Software:        \nServer Hostname:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\nServer Port:            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n\nDocument Path:          /example2\nDocument Length:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" bytes\n\nConcurrency Level:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\nTime taken "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" tests:   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.987")]),t._v(" seconds\nComplete requests:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("\nFailed requests:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nTotal transferred:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65500")]),t._v(" bytes\nHTML transferred:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),t._v(" bytes\nRequests per second:    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("506.63")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/sec] (mean)")]),t._v("\nTime per request:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("197.382")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nTime per request:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.974")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean, across all concurrent requests"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nTransfer rate:          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64.81")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Kbytes/sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" received\n\nConnection Times "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              min  mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("+/-sd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" median   max\nConnect:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\nProcessing:    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("179")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("77.5")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("170")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),t._v("\nWaiting:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("168")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("78.8")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("162")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("455")]),t._v("\nTotal:         "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("77.3")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("171")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("458")]),t._v("\n\nPercentage of the requests served within a certain "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("171")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("203")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("239")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("281")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("335")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("365")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("458")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("longest request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(372),alt:""}})]),t._v(" "),n("p",[t._v("GC 反复被触发，一个显而易见的原因就是内存分配过多。我们可以通过 "),n("code",[t._v("go tool pprof")]),t._v(" 来查看究竟是谁分配了大量内存（使用 web 指令来使用浏览器打开统计信息的可视化图形）：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go tool pprof http://127.0.0.1:6060/debug/pprof/heap\nFetching profile over HTTP from http://localhost:6060/debug/pprof/heap\nSaved profile "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /Users/changkun/pprof/pprof.alloc_objects.alloc_space.inuse_o\nbjects.inuse_space.003.pb.gz\nType: inuse_space\nTime: Jan "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" at "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":15pm "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nEntering interactive mode "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"help"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" commands, "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"o"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pprof"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" web\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pprof"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),n("p",[n("img",{attrs:{src:a(373),alt:""}})]),t._v(" "),n("p",[t._v("可见 "),n("code",[t._v("newBuf")]),t._v(" 产生的申请的内存过多，现在我们使用 sync.Pool 来复用 "),n("code",[t._v("newBuf")]),t._v(" 所产生的对象：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http/pprof"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sync"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 sync.Pool 复用需要的 buf")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bufPool "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tNew"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\thttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenAndServe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:6060"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\thttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("HandleFunc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ResponseWriter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" bufPool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" idx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("idx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"done, %v"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("URL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tbufPool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Put")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\thttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenAndServe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('":8080"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("其中 ab 输出的统计结果为：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ ab -n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" -c "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" http://127.0.0.1:8080/example2\nThis is ApacheBench, Version "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Revision")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1843412")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nCopyright "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1996")]),t._v(" Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("be patient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" requests\nFinished "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" requests\n\n\nServer Software:        \nServer Hostname:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\nServer Port:            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n\nDocument Path:          /example2\nDocument Length:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" bytes\n\nConcurrency Level:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\nTime taken "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" tests:   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.427")]),t._v(" seconds\nComplete requests:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("\nFailed requests:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nTotal transferred:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65500")]),t._v(" bytes\nHTML transferred:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),t._v(" bytes\nRequests per second:    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1171.32")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/sec] (mean)")]),t._v("\nTime per request:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("85.374")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nTime per request:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.854")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean, across all concurrent requests"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nTransfer rate:          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("149.85")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Kbytes/sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" received\n\nConnection Times "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              min  mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("+/-sd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" median   max\nConnect:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.4")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\nProcessing:     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.2")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("211")]),t._v("\nWaiting:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("46.8")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("207")]),t._v("\nTotal:          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("77")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.2")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("67")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("211")]),t._v("\n\nPercentage of the requests served within a certain "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("%     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("67")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),t._v("%     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("107")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("122")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("148")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("167")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("196")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("204")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("211")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("longest request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("但从 "),n("code",[t._v("Requests per second")]),t._v(" 每秒请求数来看，从原来的 506.63 变为 1171.32 得到了近乎一倍的提升。从 trace 的结果来看，GC 也没有频繁的被触发从而长期消耗 CPU 使用率：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(374),alt:""}})]),t._v(" "),n("p",[t._v("sync.Pool 是内存复用的一个最为显著的例子，从语言层面上还有很多类似的例子，例如在例 1 中，"),n("code",[t._v("concat")]),t._v(" 函数可以预先分配一定长度的缓存，而后再通过 append 的方式将字符串存储到缓存中：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\twg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WaitGroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\twg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Go GC"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\ts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\twg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Done")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\twg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Wait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("原因在于 "),n("code",[t._v("+")]),t._v(" 运算符会随着字符串长度的增加而申请更多的内存，并将内容从原来的内存位置拷贝到新的内存位置，造成大量不必要的内存分配，先提前分配好足够的内存，再慢慢地填充，也是一种减少内存分配、复用内存形式的一种表现。")]),t._v(" "),n("h3",{attrs:{id:"例3：调整-gogc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例3：调整-gogc"}},[t._v("#")]),t._v(" 例3：调整 GOGC")]),t._v(" "),n("p",[t._v("我们已经知道了 GC 的触发原则是由步调算法来控制的，其关键在于估计下一次需要触发 GC 时，堆的大小。可想而知，如果我们在遇到海量请求的时，为了避免 GC 频繁触发，是否可以通过将 GOGC 的值设置得更大，让 GC 触发的时间变得更晚，从而减少其触发频率，进而增加用户代码对机器的使用率呢？答案是肯定的。")]),t._v(" "),n("p",[t._v("我们可以非常简单粗暴的将 GOGC 调整为 1000，来执行上一个例子中未复用对象之前的程序：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOGC")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" ./main\n")])])]),n("p",[t._v("这时我们再重新执行压测：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ ab -n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" -c "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" http://127.0.0.1:8080/example2\nThis is ApacheBench, Version "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Revision")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1843412")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nCopyright "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1996")]),t._v(" Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("be patient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" requests\nCompleted "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" requests\nFinished "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" requests\n\n\nServer Software:        \nServer Hostname:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\nServer Port:            "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n\nDocument Path:          /example2\nDocument Length:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" bytes\n\nConcurrency Level:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\nTime taken "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" tests:   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.923")]),t._v(" seconds\nComplete requests:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("\nFailed requests:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nTotal transferred:      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65500")]),t._v(" bytes\nHTML transferred:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),t._v(" bytes\nRequests per second:    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("541.61")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/sec] (mean)")]),t._v("\nTime per request:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("184.636")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nTime per request:       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.846")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean, across all concurrent requests"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nTransfer rate:          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("69.29")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Kbytes/sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" received\n\nConnection Times "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              min  mean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("+/-sd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" median   max\nConnect:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.8")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nProcessing:     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("171")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("210.4")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("859")]),t._v("\nWaiting:        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("158")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("199.6")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("813")]),t._v("\nTotal:          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("173")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("210.6")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("68")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("860")]),t._v("\n\nPercentage of the requests served within a certain "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("%     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("68")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("133")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("198")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("292")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("566")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("696")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("723")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("743")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("%    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("860")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("longest request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("可以看到，压测的结果得到了一定幅度的改善（"),n("code",[t._v("Requests per second")]),t._v(" 从原来的 506.63 提高为了 541.61），\n并且 GC 的执行频率明显降低：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(375),alt:""}})]),t._v(" "),n("p",[t._v("在实际实践中可表现为需要紧急处理一些由 GC 带来的瓶颈时，人为将 GOGC 调大，加钱加内存，扛过这一段峰值流量时期。")]),t._v(" "),n("p",[t._v("当然，这种做法其实是治标不治本，并没有从根本上解决内存分配过于频繁的问题，极端情况下，反而会由于 GOGC 太大而导致回收不及时而耗费更多的时间来清理产生的垃圾，这对时间不算敏感的应用还好，但对实时性要求较高的程序来说就是致命的打击了。")]),t._v(" "),n("p",[t._v("因此这时更妥当的做法仍然是，定位问题的所在，并从代码层面上进行优化。")]),t._v(" "),n("h3",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("p",[t._v("通过上面的三个例子我们可以看到在 GC 调优过程中 "),n("code",[t._v("go tool pprof")]),t._v(" 和 "),n("code",[t._v("go tool trace")]),t._v(" 的强大作用是帮助我们快速定位 GC 导致瓶颈的具体位置，但这些例子中仅仅覆盖了其功能的很小一部分，我们也没有必要完整覆盖所有的功能，因为总是可以通过"),n("a",{attrs:{href:"https://golang.org/pkg/net/http/pprof/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http pprof 官方文档"),n("OutboundLink")],1),t._v("、"),n("a",{attrs:{href:"https://golang.org/pkg/runtime/pprof/",target:"_blank",rel:"noopener noreferrer"}},[t._v("runtime pprof官方文档"),n("OutboundLink")],1),t._v("以及"),n("a",{attrs:{href:"https://golang.org/pkg/runtime/trace/",target:"_blank",rel:"noopener noreferrer"}},[t._v("trace 官方文档"),n("OutboundLink")],1),t._v("来举一反三。")]),t._v(" "),n("p",[t._v("现在我们来总结一下前面三个例子中的优化情况：")]),t._v(" "),n("ol",[n("li",[t._v("控制内存分配的速度，限制 goroutine 的数量，从而提高赋值器对 CPU 的利用率。")]),t._v(" "),n("li",[t._v("减少并复用内存，例如使用 sync.Pool 来复用需要频繁创建临时对象，例如提前分配足够的内存来降低多余的拷贝。")]),t._v(" "),n("li",[t._v("需要时，增大 GOGC 的值，降低 GC 的运行频率。")])]),t._v(" "),n("p",[t._v("这三种情况几乎涵盖了 GC 调优中的核心思路，虽然从语言上还有很多小技巧可说，但我们并不会在这里事无巨细的进行总结。实际情况也是千变万化，我们更应该着重于培养具体问题具体分析的能力。")]),t._v(" "),n("p",[t._v("当然，我们还应该谨记 "),n("strong",[t._v("过早优化是万恶之源")]),t._v("这一警语，在没有遇到应用的真正瓶颈时，将宝贵的时间分配在开发中其他优先级更高的任务上。")]),t._v(" "),n("h2",{attrs:{id:"_15-go-的垃圾回收器有哪些相关的-api？其作用分别是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_15-go-的垃圾回收器有哪些相关的-api？其作用分别是什么？"}},[t._v("#")]),t._v(" 15. Go 的垃圾回收器有哪些相关的 API？其作用分别是什么？")]),t._v(" "),n("p",[t._v("在 Go 中存在数量极少的与 GC 相关的 API，它们是")]),t._v(" "),n("ul",[n("li",[t._v("runtime.GC：手动触发 GC")]),t._v(" "),n("li",[t._v("runtime.ReadMemStats：读取内存相关的统计信息，其中包含部分 GC 相关的统计信息")]),t._v(" "),n("li",[t._v("debug.FreeOSMemory：手动将内存归还给操作系统")]),t._v(" "),n("li",[t._v("debug.ReadGCStats：读取关于 GC 的相关统计信息")]),t._v(" "),n("li",[t._v("debug.SetGCPercent：设置 GOGC 调步变量")]),t._v(" "),n("li",[t._v("debug.SetMaxHeap（尚未发布）：设置 Go 程序堆的上限值\n")])]),t._v(" "),n("h1",{attrs:{id:"gc-的历史及演进"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gc-的历史及演进"}},[t._v("#")]),t._v(" GC 的历史及演进")]),t._v(" "),n("h2",{attrs:{id:"_16-go-历史各个版本在-gc-方面的改进？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_16-go-历史各个版本在-gc-方面的改进？"}},[t._v("#")]),t._v(" 16. Go 历史各个版本在 GC 方面的改进？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Go 1：串行三色标记清扫")])]),t._v(" "),n("li",[n("p",[t._v("Go 1.3：并行清扫，标记过程需要 STW，停顿时间在约几百毫秒")])]),t._v(" "),n("li",[n("p",[t._v("Go 1.5：并发标记清扫，停顿时间在一百毫秒以内")])]),t._v(" "),n("li",[n("p",[t._v("Go 1.6：使用 bitmap 来记录回收内存的位置，大幅优化垃圾回收器自身消耗的内存，停顿时间在十毫秒以内")])]),t._v(" "),n("li",[n("p",[t._v("Go 1.7：停顿时间控制在两毫秒以内")])]),t._v(" "),n("li",[n("p",[t._v("Go 1.8：混合写屏障，停顿时间在半个毫秒左右")])]),t._v(" "),n("li",[n("p",[t._v("Go 1.9：彻底移除了栈的重扫描过程")])]),t._v(" "),n("li",[n("p",[t._v("Go 1.12：整合了两个阶段的 Mark Termination，但引入了一个严重的 GC Bug 至今未修（见问题 20），尚无该 Bug 对 GC 性能影响的报告")])]),t._v(" "),n("li",[n("p",[t._v("Go 1.13：着手解决向操作系统归还内存的，提出了新的 Scavenger")])]),t._v(" "),n("li",[n("p",[t._v("Go 1.14：替代了仅存活了一个版本的 scavenger，全新的页分配器，优化分配内存过程的速率与现有的扩展性问题，并引入了异步抢占，解决了由于密集循环导致的 STW 时间过长的问题")])])]),t._v(" "),n("p",[t._v("可以用下图直观地说明 GC 的演进历史：")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/gc1.png",alt:""}})]),t._v(" "),n("p",[t._v("在 Go 1 刚发布时的版本中，甚至没有将 Mark-Sweep 的过程并行化，当需要进行垃圾回收时，所有的代码都必须进入 STW 的状态。而到了 Go 1.1 时，官方迅速地将清扫过程进行了并行化的处理，即仅在标记阶段进入 STW。")]),t._v(" "),n("p",[t._v("这一想法很自然，因为并行化导致算法结果不一致的情况仅仅发生在标记阶段，而当时的垃圾回收器没有针对并行结果的一致性进行任何优化，因此才需要在标记阶段进入 STW。对于 Scavenger 而言，早期的版本中会有一个单独的线程来定期将多余的内存归还给操作系统。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/gc2.png",alt:""}})]),t._v(" "),n("p",[t._v("而到了 Go 1.5 后，Go 团队花费了相当大的力气，通过引入写屏障的机制来保证算法的一致性，才得以将整个 GC 控制在很小的 STW 内，而到了 1.8 时，由于新的混合屏障的出现，消除了对栈本身的重新扫描，STW 的时间进一步缩减。")]),t._v(" "),n("p",[t._v("从这个时候开始，Scavenger 已经从独立线程中移除，并合并至系统监控这个独立的线程中，并周期性地向操作系统归还内存，但仍然会有内存溢出这种比较极端的情况出现，因为程序可能在短时间内应对突发性的内存申请需求时，内存还没来得及归还操作系统，导致堆不断向操作系统申请内存，从而出现内存溢出。")]),t._v(" "),n("p",[n("img",{attrs:{src:"assets/gc3.png",alt:""}})]),t._v(" "),n("p",[t._v("到了 Go 1.13，定期归还操作系统的问题得以解决，Go 团队开始将周期性的 Scavenger 转化为可被调度的 goroutine，并将其与用户代码并发执行。而到了 Go 1.14，这一向操作系统归还内存的操作时间进一步得到缩减。")]),t._v(" "),n("h2",{attrs:{id:"_17-go-gc-在演化过程中还存在哪些其他设计？为什么没有被采用？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_17-go-gc-在演化过程中还存在哪些其他设计？为什么没有被采用？"}},[t._v("#")]),t._v(" 17. Go GC 在演化过程中还存在哪些其他设计？为什么没有被采用？")]),t._v(" "),n("h3",{attrs:{id:"并发栈重扫"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#并发栈重扫"}},[t._v("#")]),t._v(" 并发栈重扫")]),t._v(" "),n("p",[t._v("正如我们前面所说，允许灰色赋值器存在的垃圾回收器需要引入重扫过程来保证算法的正确性，除了引入混合屏障来消除重扫这一过程外，有另一种做法可以提高重扫过程的性能，那就是将重扫的过程并发执行。然而这一"),n("a",{attrs:{href:"https://github.com/golang/proposal/blob/master/design/17505-concurrent-rescan.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("方案"),n("OutboundLink")],1),t._v("并没有得以实现，原因很简单：实现过程相比引入混合屏障而言十分复杂，而且引入混合屏障能够消除重扫这一过程，将简化垃圾回收的步骤。")]),t._v(" "),n("h3",{attrs:{id:"roc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#roc"}},[t._v("#")]),t._v(" ROC")]),t._v(" "),n("p",[t._v("ROC 的全称是"),n("a",{attrs:{href:"https://docs.google.com/document/d/1gCsFxXamW8RRvOe5hECz98Ftk-tcRRJcDFANj2VwCB0/edit",target:"_blank",rel:"noopener noreferrer"}},[t._v("面向请求的回收器"),n("OutboundLink")],1),t._v("（Request Oriented Collector），它其实也是分代 GC 的一种重新叙述。它提出了一个请求假设（Request Hypothesis）：与一个完整请求、休眠 goroutine 所关联的对象比其他对象更容易死亡。这个假设听起来非常符合直觉，但在实现上，由于垃圾回收器必须确保是否有 goroutine 私有指针被写入公共对象，因此写屏障必须一直打开，这也就产生了该方法的致命缺点：昂贵的写屏障及其带来的缓存未命中，这也是这一设计最终没有被采用的主要原因。")]),t._v(" "),n("h3",{attrs:{id:"传统分代-gc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#传统分代-gc"}},[t._v("#")]),t._v(" 传统分代 GC")]),t._v(" "),n("p",[t._v("在发现 ROC 性能不行之后，作为备选方案，Go 团队还尝试了实现"),n("a",{attrs:{href:"https://go-review.googlesource.com/c/go/+/137476/12",target:"_blank",rel:"noopener noreferrer"}},[t._v("传统的分代式 GC"),n("OutboundLink")],1),t._v("。但最终同样发现分代假设并不适用于 Go 的运行栈机制，年轻代对象在栈上就已经死亡，扫描本就该回收的执行栈并没有为由于分代假设带来明显的性能提升。这也是这一设计最终没有被采用的主要原因。")]),t._v(" "),n("h2",{attrs:{id:"_18-目前提供-gc-的语言以及不提供-gc-的语言有哪些？gc-和-no-gc-各自的优缺点是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_18-目前提供-gc-的语言以及不提供-gc-的语言有哪些？gc-和-no-gc-各自的优缺点是什么？"}},[t._v("#")]),t._v(" 18. 目前提供 GC 的语言以及不提供 GC 的语言有哪些？GC 和 No GC 各自的优缺点是什么？")]),t._v(" "),n("p",[t._v("从原理上而言，所有的语言都能够自行实现 GC。从语言诞生之初就提供 GC 的语言，例如：")]),t._v(" "),n("ul",[n("li",[t._v("Python")]),t._v(" "),n("li",[t._v("JavaScript")]),t._v(" "),n("li",[t._v("Java")]),t._v(" "),n("li",[t._v("Objective-C")]),t._v(" "),n("li",[t._v("Swift")])]),t._v(" "),n("p",[t._v("而不以 GC 为目标，被直接设计为手动管理内存、但可以自行实现 GC 的语言有：")]),t._v(" "),n("ul",[n("li",[t._v("C")]),t._v(" "),n("li",[t._v("C++")])]),t._v(" "),n("p",[t._v("也有一些语言可以在编译期，依靠编译器插入清理代码的方式，实现精准的清理，例如：")]),t._v(" "),n("ul",[n("li",[t._v("Rust")])]),t._v(" "),n("p",[t._v("垃圾回收使程序员无需手动处理内存释放，从而能够消除一些需要手动管理内存才会出现的运行时错误：")]),t._v(" "),n("ol",[n("li",[t._v("在仍然有指向内存区块的指针的情况下释放这块内存时，会产生悬挂指针，从而后续可能错误的访问已经用于他用的内存区域。")]),t._v(" "),n("li",[t._v("多重释放同一块申请的内存区域可能导致不可知的内存损坏。")])]),t._v(" "),n("p",[t._v("当然，垃圾回收也会伴随一些缺陷，这也就造就了没有 GC 的一些优势：")]),t._v(" "),n("ol",[n("li",[t._v("没有额外的性能开销")]),t._v(" "),n("li",[t._v("精准的手动内存管理，极致的利用机器的性能")])]),t._v(" "),n("h2",{attrs:{id:"_19-go-对比-java、v8-中-javascript-的-gc-性能如何？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_19-go-对比-java、v8-中-javascript-的-gc-性能如何？"}},[t._v("#")]),t._v(" 19. Go 对比 Java、V8 中 JavaScript 的 GC 性能如何？")]),t._v(" "),n("p",[t._v("无论是 Java 还是 JavaScript 中的 GC 均为分代式 GC。分代式 GC 的一个核心假设就是分代假说：将对象依据存活时间分配到不同的区域，每次回收只回收其中的一个区域。")]),t._v(" "),n("h3",{attrs:{id:"v8-的-gc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v8-的-gc"}},[t._v("#")]),t._v(" V8 的 GC")]),t._v(" "),n("p",[t._v("在 V8 中主要将内存分为新生代和老生代。新生代中的对象为存活时间较短的对象，老生代中的对象为存活时间较长、常驻内存、占用内存较大的对象：")]),t._v(" "),n("ol",[n("li",[t._v("新生代中的对象主要通过副垃圾回收器进行回收。该回收过程是一种采用复制的方式实现的垃圾回收算法，它将堆内存一分为二，这两个空间中只有一个处于使用中，另一个则处于闲置状态。处于使用状态的空间称为 From 空间，处于闲置的空间称为 To 空间。分配对象时，先是在 From 空间中进行分配，当开始垃圾回收时，会检查 From 空间中的存活对象，并将这些存活对象复制到 To 空间中，而非存活对象占用的空间被释放。完成复制后，From 空间和 To 空间的角色互换。也就是通过将存活对象在两个空间中进行复制。")]),t._v(" "),n("li",[t._v("老生代则由主垃圾回收器负责。它实现的是标记清扫过程，但略有不同之处在于它还会在清扫完成后对内存碎片进行整理，进而是一种标记整理的回收器。")])]),t._v(" "),n("h3",{attrs:{id:"java-的-gc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-的-gc"}},[t._v("#")]),t._v(" Java 的 GC")]),t._v(" "),n("p",[t._v("Java 的 GC 称之为 G1，并将整个堆分为年轻代、老年代和永久代。包括四种不同的收集操作，从上往下的这几个阶段会选择性地执行，触发条件是用户的配置和实际代码行为的预测。")]),t._v(" "),n("ol",[n("li",[t._v("年轻代收集周期：只对年轻代对象进行收集与清理")]),t._v(" "),n("li",[t._v("老年代收集周期：只对老年代对象进行收集与清理")]),t._v(" "),n("li",[t._v("混合式收集周期：同时对年轻代和老年代进行收集与清理")]),t._v(" "),n("li",[t._v("完整 GC 周期：完整的对整个堆进行收集与清理")])]),t._v(" "),n("p",[t._v("在回收过程中，G1 会对停顿时间进行预测，竭尽所能地调整 GC 的策略从而达到用户代码通过系统参数（"),n("code",[t._v("-XX:MaxGCPauseMillis")]),t._v("）所配置的对停顿时间的要求。")]),t._v(" "),n("p",[t._v("这四个周期的执行成本逐渐上升，优化得当的程序可以完全避免完整 GC 周期。")]),t._v(" "),n("h3",{attrs:{id:"性能比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#性能比较"}},[t._v("#")]),t._v(" 性能比较")]),t._v(" "),n("p",[t._v("在 Go、Java 和 V8 JavaScript 之间比较 GC 的性能本质上是一个不切实际的问题。如前面所说，垃圾回收器的设计权衡了很多方面的因素，同时还受语言自身设计的影响，因为语言的设计也直接影响了程序员编写代码的形式，也就自然影响了产生垃圾的方式。")]),t._v(" "),n("p",[t._v("但总的来说，他们三者对垃圾回收的实现都需要 STW，并均已达到了用户代码几乎无法感知到的状态（据 Go GC 作者 Austin 宣称 "),n("a",{attrs:{href:"https://groups.google.com/d/msg/golang-dev/Ab1sFeoZg_8/_DaL0E8fAwAJ",target:"_blank",rel:"noopener noreferrer"}},[t._v("STW 小于 100 微秒"),n("OutboundLink")],1),t._v("）。当然，随着 STW 的减少，垃圾回收器会增加 CPU 的使用率，这也是程序员在编写代码时需要手动进行优化的部分，即充分考虑内存分配的必要性，减少过多申请内存带给垃圾回收器的压力。")]),t._v(" "),n("h2",{attrs:{id:"_20-目前-go-语言的-gc-还存在哪些问题？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_20-目前-go-语言的-gc-还存在哪些问题？"}},[t._v("#")]),t._v(" 20. 目前 Go 语言的 GC 还存在哪些问题？")]),t._v(" "),n("p",[t._v("尽管 Go 团队宣称 STW 停顿时间得以优化到 100 微秒级别，但这本质上是一种取舍。原本的 STW 某种意义上来说其实转移到了可能导致用户代码停顿的几个位置；除此之外，由于运行时调度器的实现方式，同样对 GC 存在一定程度的影响。")]),t._v(" "),n("p",[t._v("目前 Go 中的 GC 仍然存在以下问题：")]),t._v(" "),n("h3",{attrs:{id:"_1-mark-assist-停顿时间过长"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-mark-assist-停顿时间过长"}},[t._v("#")]),t._v(" 1. Mark Assist 停顿时间过长")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runtime"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runtime/trace"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\twindowSize "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200000")]),t._v("\n\tmsgCount   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tbest    time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second\n\tbestAt  time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\tworst   time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration\n\tworstAt time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\n\tstart "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trace.out"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ttrace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" trace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("measure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tworst "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\tbest "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second\n\t\truntime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GC")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("measure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c channel\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" msgCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMsg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Best send delay %v at %v, worst send delay: %v at %v. Wall clock: %v \\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" best"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bestAt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" worst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" worstAt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Since")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" channel "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("windowSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMsg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tstart "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟发送")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("windowSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newMsg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tend "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\telapsed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" end"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" elapsed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" worst "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tworst "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elapsed\n\t\tworstAt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" end\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" elapsed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" best "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tbest "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elapsed\n\t\tbestAt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" end\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newMsg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tm "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" m "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" m\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("运行此程序我们可以得到类似下面的结果：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("$ go run main.go\n\nBest send delay 330ns at 773.037956ms, worst send delay: 7.127915ms at 579.835487ms. Wall clock: 831.066632ms \nBest send delay 331ns at 873.672966ms, worst send delay: 6.731947ms at 1.023969626s. Wall clock: 1.515295559s \nBest send delay 330ns at 1.812141567s, worst send delay: 5.34028ms at 2.193858359s. Wall clock: 2.199921749s \nBest send delay 338ns at 2.722161771s, worst send delay: 7.479482ms at 2.665355216s. Wall clock: 2.920174197s \nBest send delay 337ns at 3.173649445s, worst send delay: 6.989577ms at 3.361716121s. Wall clock: 3.615079348s \n")])])]),n("p",[n("img",{attrs:{src:a(376),alt:""}})]),t._v(" "),n("p",[t._v("在这个结果中，第一次的最坏延迟时间高达 7.12 毫秒，发生在程序运行 578 毫秒左右。通过 "),n("code",[t._v("go tool trace")]),t._v(" 可以发现，这个时间段中，Mark Assist 执行了 7112312ns，约为 7.127915ms；可见，此时最坏情况下，标记辅助拖慢了用户代码的执行，是造成 7 毫秒延迟的原因。")]),t._v(" "),n("h3",{attrs:{id:"_2-sweep-停顿时间过长"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-sweep-停顿时间过长"}},[t._v("#")]),t._v(" 2. Sweep 停顿时间过长")]),t._v(" "),n("p",[t._v("同样还是刚才的例子，如果我们仔细观察 Mark Assist 后发生的 Sweep 阶段，竟然对用户代码的影响长达约 30ms，根据调用栈信息可以看到，该 Sweep 过程发生在内存分配阶段：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(377),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"_3-由于-gc-算法的不正确性导致-gc-周期被迫重新执行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-由于-gc-算法的不正确性导致-gc-周期被迫重新执行"}},[t._v("#")]),t._v(" 3. 由于 GC 算法的不正确性导致 GC 周期被迫重新执行")]),t._v(" "),n("p",[t._v("此问题很难复现，但是一个已知的问题，根据 Go 团队的描述，"),n("a",{attrs:{href:"https://github.com/golang/go/issues/27993#issuecomment-441719687",target:"_blank",rel:"noopener noreferrer"}},[t._v("能够在 1334 次构建中发生一次"),n("OutboundLink")],1),t._v("，我们可以计算出其触发概率约为 0.0007496251874。虽然发生概率很低，但一旦发生，GC 需要被重新执行，非常不幸。")]),t._v(" "),n("h3",{attrs:{id:"_4-创建大量-goroutine-后导致-gc-消耗更多的-cpu"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-创建大量-goroutine-后导致-gc-消耗更多的-cpu"}},[t._v("#")]),t._v(" 4. 创建大量 Goroutine 后导致 GC 消耗更多的 CPU")]),t._v(" "),n("p",[t._v("这个问题可以通过以下程序进行验证：")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("BenchmarkGCLargeGs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("testing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\twg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WaitGroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ng "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ng "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ng "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#g-%d"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ng"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("testing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建大量 goroutine，由于每次创建的 goroutine 会休眠")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从而运行时不会复用正在休眠的 goroutine，进而不断创建新的 g")]),t._v("\n\t\t\twg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ng"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ng"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\ttime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sleep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Millisecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t\twg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Done")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\twg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Wait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 现运行一次 GC 来提供一致的内存环境")]),t._v("\n\t\t\truntime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GC")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录运行 b.N 次 GC 需要的时间")]),t._v("\n\t\t\tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ResetTimer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("N"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\truntime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GC")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("其结果可以通过如下指令来获得：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("$ go "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" -bench"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("BenchmarkGCLargeGs -run"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("^$ -count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" -v "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(".txt\n$ benchstat "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(".txt\nname                     time/op\nGCLargeGs/"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#g-100-12       192µs ± 5%")]),t._v("\nGCLargeGs/"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#g-1000-12      331µs ± 1%")]),t._v("\nGCLargeGs/"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#g-10000-12    1.22ms ± 1%")]),t._v("\nGCLargeGs/"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#g-100000-12   10.9ms ± 3%")]),t._v("\nGCLargeGs/"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#g-1000000-12  32.5ms ± 4%")]),t._v("\n")])])]),n("p",[t._v("这种情况通常发生于峰值流量后，大量 goroutine 由于任务等待被休眠，从而运行时不断创建新的 goroutine，\n旧的 goroutine 由于休眠未被销毁且得不到复用，导致 GC 需要扫描的执行栈越来越多，进而完成 GC 所需的时间越来越长。\n一个解决办法是使用 goroutine 池来限制创建的 goroutine 数量。")]),t._v(" "),n("h1",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("GC 是一个复杂的系统工程，本文讨论的二十个问题尽管已经展现了一个相对全面的 Go GC。但它们仍然只是 GC 这一宏观问题的一些较为重要的部分，还有非常多的细枝末节、研究进展无法在有限的篇幅内完整讨论。")]),t._v(" "),n("p",[t._v("从 Go 诞生之初，Go 团队就一直在对 GC 的表现进行实验与优化，但仍然有诸多未解决的问题，我们不妨对 GC 未来的改进拭目以待。")]),t._v(" "),n("h1",{attrs:{id:"推荐阅读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读"}},[t._v("#")]),t._v(" 推荐阅读")]),t._v(" "),n("p",[t._v("【Why golang garbage-collector not implement Generational and Compact gc?】https://groups.google.com/forum/#!msg/golang-nuts/KJiyv2mV2pU/wdBUH1mHCAAJ")]),t._v(" "),n("p",[t._v("【写一个内存分配器】http://dmitrysoshnikov.com/compilers/writing-a-memory-allocator/#more-3590")]),t._v(" "),n("p",[t._v("【观察 GC】https://www.ardanlabs.com/blog/2019/05/garbage-collection-in-go-part2-gctraces.html")]),t._v(" "),n("p",[t._v("【煎鱼 Go debug】https://segmentfault.com/a/1190000020255157")]),t._v(" "),n("p",[t._v("【煎鱼 go tool trace】https://eddycjy.gitbook.io/golang/di-9-ke-gong-ju/go-tool-trace")]),t._v(" "),n("p",[t._v("【trace 讲解】https://www.itcodemonkey.com/article/5419.html")]),t._v(" "),n("p",[t._v("【An Introduction to go tool trace】https://about.sourcegraph.com/go/an-introduction-to-go-tool-trace-rhys-hiltner")]),t._v(" "),n("p",[t._v("【http pprof 官方文档】https://golang.org/pkg/net/http/pprof/")]),t._v(" "),n("p",[t._v("【runtime pprof 官方文档】https://golang.org/pkg/runtime/pprof/")]),t._v(" "),n("p",[t._v("【trace 官方文档】https://golang.org/pkg/runtime/trace/")])])}),[],!1,null,null,null);s.default=e.exports}}]);